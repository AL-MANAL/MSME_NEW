@using PagedList;
@using PagedList.Mvc;


@model IPagedList<ISOStd.Models.EmmetModels>
    @{
        ViewBag.Title = "";
        string chked = Convert.ToString(ViewBag.chkAll);
    }

    <div class="groupedassets margin10">
        <span class="groupedassetshead margin10 onestphdcolor">Return Stock </span>
    </div>

    <br />
    <div id="divmsg">
        @if (TempData["alertdata"] != null)
        {
            <span class="errMsg" style="color: red;font-weight: bold;">@TempData["alertdata"]</span>
        }
        @if (TempData["Successdata"] != null)
        {
            <span class="errMsg" style="color: green; font-weight: bold;">@TempData["Successdata"]</span>
        }
    </div>
 
    @Html.PagedListPager(Model, page => Url.Action("ReturnList",
            new
            {
                page,
                Approvestatus = Request.QueryString["Approvestatus"],
                SearchText = Request.QueryString["SearchText"],

            }),
            new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true })

@using (Html.BeginForm("ReturnList", "Emmet", FormMethod.Post, new { id = "form1", name = "form1" }))
{
    <div>
        <input type="hidden" id="chkdAll" name="chkdAll" value="@chked" />
        <span id="tab" style="color: #31b0d5; padding-right: 5px; padding-left: 50px; font-weight: bold;">
            <input type="checkbox" value="All" id="chkAll" name="chkAll" title="Select in case to see all records" />All
        </span>
      
        <span style="margin-left: 20px"><b style="color: #31b0d5;">Employee</b></span>
        <select id="empid" name="empid" style="width:130px">
            <option value='' hidden>Select</option>
            @if (ViewBag.Emplist != null && ViewBag.Emplistval != null)
            {
                foreach (var item in ViewBag.Emplist)
                {
                    if (item.Value == ViewBag.Emplistval)
                    {
                        <option value='@item.Value' selected>@item.Text</option>
                    }
                    else
                    {
                        <option value='@item.Value'>@item.Text</option>
                    }
                }
            }
            else
            {
                foreach (var item in ViewBag.Emplist)
                {
                    <option value='@item.Value'>@item.Text</option>
                }
            }
        </select>

       
        <button type="submit" class="btn btn-info" onclick="ProgressIconFunction('#form1')">
            <span class="glyphicon glyphicon-search"></span>Search
        </button>
      
       
       
    </div>
}


    <div id="content">
        <table id="table1">
            <thead>
                @if (Model != null && Model.Count() > 0)
                {
                <tr>
                    <th style="width:40px;min-width:40px; max-width:100px;">
                        Sl No
                    </th>
                 
                    <th style="width:150px;min-width:150px; max-width:150px;">
                        @Html.DisplayNameFor(model => model.First().issue_date)
                    </th>
                     <th style="width:150px;min-width:150px; max-width:150px;">
                        @Html.DisplayNameFor(model => model.First().jobno)
                    </th>
                    <th style="width:150px;min-width:150px; max-width:150px;">
                        @Html.DisplayNameFor(model => model.First().empid)
                    </th>
                     <th style="width:150px;min-width:150px; max-width:150px;">
                        @Html.DisplayNameFor(model => model.First().category)
                    </th>
                     <th style="width:150px;min-width:150px; max-width:150px;">
                        @Html.DisplayNameFor(model => model.First().material)
                    </th>
                     <th style="width:150px;min-width:150px; max-width:150px;">
                        @Html.DisplayNameFor(model => model.First().issue_qty)
                    </th>
                     <th style="width:150px;min-width:150px; max-width:150px;">
                        @Html.DisplayNameFor(model => model.First().return_qty)
                    </th>
                     <th style="width:150px;min-width:150px; max-width:150px;">
                        @Html.DisplayNameFor(model => model.First().balance_qty)
                    </th>
                    <th style="width:150px;min-width:150px; max-width:150px;">
                       Return Stock
                    </th>
                </tr>
                }
                else
                {
                    <tr>
                        <td colspan="11">
                            <div style="text-align: center;">
                                <h4 style="color: grey;">No data exists</h4>
                            </div>
                        </td>
                    </tr>
                }
            </thead>
            <tbody>
                @if (Model != null && Model.Count() > 0)
                {
                    int i = 0;
                    foreach (var item in Model)
                    {
                        i = i + 1;
                <tr>
                    <td style="width:40px;min-width:40px; max-width:100px;">
                         @i
                    </td>
                  
                     <td style="width:150px;min-width:150px; max-width:150px;word-wrap:break-word">
                         @if (item.issue_date != null && item.issue_date > Convert.ToDateTime("01/01/0001"))
                        {
                            @Html.Label(item.issue_date.ToString("dd/MM/yyyy"))
                        }
                    </td>
                      <td style="width:150px;min-width:150px; max-width:150px;word-wrap:break-word">
                         @Html.DisplayFor(modelItem => item.jobno)
                    </td>
                   <td style="width:150px;min-width:150px; max-width:150px;word-wrap:break-word">
                         @Html.DisplayFor(modelItem => item.empid)
                    </td>
                      <td style="width:150px;min-width:150px; max-width:150px;word-wrap:break-word">
                         @Html.DisplayFor(modelItem => item.category)
                    </td>
                      <td style="width:150px;min-width:150px; max-width:150px;word-wrap:break-word">
                         @Html.DisplayFor(modelItem => item.material)
                    </td>
                      <td style="width:150px;min-width:150px; max-width:150px;word-wrap:break-word">
                         @Html.DisplayFor(modelItem => item.issue_qty)
                    </td>
                      <td style="width:150px;min-width:150px; max-width:150px;word-wrap:break-word">
                         @Html.DisplayFor(modelItem => item.return_qty)
                    </td>
                      <td style="width:150px;min-width:150px; max-width:150px;word-wrap:break-word">
                         @Html.DisplayFor(modelItem => item.balance_qty)
                    </td>
                    <td style="width:150px;min-width:150px; max-width:150px;word-wrap:break-word">    
                        <a href='@Url.Action("ReturnStock", "Emmet", new { id_stock_issue_trans=item.id_stock_issue_trans,id_stock_issue=item.id_stock_issue })'>
                         <img src="@Url.Content("~/Images/icon_add.png")" title="Return Stock"/></a>
                        <a href='@Url.Action("ReturnStockList", "Emmet", new { id_stock_issue_trans=item.id_stock_issue_trans,id_stock_issue=item.id_stock_issue })'>
                         <img src="@Url.Content("~/Images/icon_list.png")" title="Return Stock list"/></a>                        
                    </td>
                </tr>
                    }
                }

            </tbody>
        </table>
    </div>
    @Styles.Render("~/Content/popover")
    @section scripts {

        <script type="text/javascript">
         
            $(function () {
                $("#empid").chosen();

            });
      
        </script>
        @Scripts.Render("~/bundles/jqueryval")
    }




