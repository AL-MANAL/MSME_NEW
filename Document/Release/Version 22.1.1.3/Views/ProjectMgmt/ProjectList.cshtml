@using PagedList;
@using PagedList.Mvc;

@model IPagedList<ISOStd.Models.ProjectMgmtModels>

@{
    ViewBag.Title = "ProjectMgmtList";
    
}

<div class="groupedassets margin10">
    <span class="groupedassetshead margin10 onestphdcolor">Project List</span>
</div>
    @*<div class = "ActionLink">@Html.ActionLink("Add New", "AddMgmtDocuments", null, new { @class = "ActionLink", onclick="HyperLinkProgressIconFunction()" })</div>*@

<div id="divmsg">
    @if (TempData["alertdata"] != null)
    {
        <span class="errMsg" style="color: red;font-weight: bold;">@TempData["alertdata"]</span>
    }
    @if (TempData["Successdata"] != null)
    {
        <span class="errMsg" style="color: green; font-weight: bold;">@TempData["Successdata"]</span>
    }
</div>
    <br />

    <div class="editor-field">
         
 <span style="margin-left:20px"> @Html.ActionLink("Add Project", "AddDesignReview", null, new { @class = "ActionLink",onclick = "HyperLinkProgressIconFunction()" })</span>
   <span style="margin-left: 20px"> <img src="@Url.Content("~/Images/excel.png")" title="Export as Excel" style="cursor:pointer; " id="downloadLink" />Download</span>
     
   </div>   

<br />

<br />

    @Html.PagedListPager(Model, page => Url.Action("ProjectList",
    new
    {
        page,
        SearchText = Request.QueryString["SearchText"],

    }),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true })


<div id="content">
    <table id="table1">
        <thead>
            <tr>
                <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().ProjectNo)
                </th>
                 <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().ProjectName)
                </th>
                 <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().Location)
                </th>
                 <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().Customer)
                </th>
    
                 <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().ProjectManager)
                </th>
                <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().Team)
                </th>
                 <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().ProjectStatus)
                </th>
                 <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().StartDate)
                </th>
                 <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().PlannedEndDate)
                </th>
                 <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().ActualEndDate)
                </th>
                 <th style="width:60px;min-width:60px; max-width:60px;">
                   Edit
                </th> 
                 @if (ViewBag.DeleteFlg != null && ViewBag.DeleteFlg == true)
                  {
                <th style="width:60px;min-width:60px; max-width:60px;">Delete </th>
                    }
                     
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Count() > 0)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td style="width:150px; min-width:150px; max-width:150px;">
                          @Html.ActionLink(item.ProjectNo.ToString(), "ProjectDetails", new { id_projectmgmt = item.id_projectmgmt }, new { onclick="HyperLinkProgressIconFunction()"})          
                        </td>
                       <td style="width:150px; min-width:150px; max-width:150px;">
                        @Html.DisplayFor(model=>item.ProjectName)
                       </td>
                        <td style="width:150px; min-width:150px; max-width:150px;">
                        @Html.DisplayFor(model=>item.Location)
                       </td>
                         <td style="width:150px; min-width:150px; max-width:150px;">
                        @Html.DisplayFor(model=>item.Customer)
                       </td>
                        <td style="width:150px; min-width:150px; max-width:150px;">
                        @Html.DisplayFor(model=>item.ProjectManager)
                       </td>
                         <td style="width:150px; min-width:150px; max-width:150px;">
                        @Html.DisplayFor(model=>item.Team)
                       </td>
                        <td style="width:150px; min-width:150px; max-width:150px;">
                        @Html.DisplayFor(model=>item.ProjectStatus)
                       </td>
                        <td style="width:150px; min-width:150px; max-width:150px;">
                       @if (item.StartDate > Convert.ToDateTime("01/01/0001"))
                        {
                        @item.StartDate.ToString("dd/MM/yyyy")
                        }
                       </td>
                        <td style="width:150px; min-width:150px; max-width:150px;">
                        @if (item.PlannedEndDate > Convert.ToDateTime("01/01/0001"))
                        {
                        @item.PlannedEndDate.ToString("dd/MM/yyyy")
                        }
                       </td>
                        <td style="width:150px; min-width:150px; max-width:150px;">
                       @if (item.ActualEndDate > Convert.ToDateTime("01/01/0001"))
                       {
                        @item.ActualEndDate.ToString("dd/MM/yyyy")
                       }
                       </td>
                        
                      
                         <td style="width:60px;min-width:60px; max-width:60px;">          
                          <a href='@Url.Action("ProjectDesignProcessEdit", "ProjectMgmt", new { id_projectmgmt = item.id_projectmgmt })'  title="Edit Project" onclick="HyperLinkProgressIconFunction()">
                               <span class="glyphicon glyphicon glyphicon-user iocnstatus-edit" onclick="HyperLinkProgressIconFunction()"></span>
                          </a>               
                          </td>

                          @if (ViewBag.DeleteFlg != null && ViewBag.DeleteFlg == true)
                        {
                            <td style="width: 60px; min-width: 60px; max-width: 60px;">

                                @*<a href='@Url.Action("CustomerEnquiryDelete", "CustomerEnquiry", new { enquiry_id = item.Enquiry_id.ToString() })' title="Delete Enquiry" >*@
                                <img src="@Url.Content("~/Images/delete.png")" title="Delete Project" onclick="DeleteItems(@item.id_projectmgmt)" style="cursor:pointer;" />
                            </td>
                        }
                        
                       
                       
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="10">
                        <div style="text-align: center;">
                            <h4 style="color: grey;">No data exists</h4>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
</table>
</div>
@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        function DeleteItems(id_projectmgmt) {
            jConfirm('Do you want to delete?', 'Are you Sure?', function (r) {
                if (r == true) {
                    jQuery.ajax({
                        url: '@Url.Action("ProjectDocDelete", "ProjectMgmt")',
                        type: 'POST',
                        dataType: "json",
                        data: { 'id_projectmgmt': id_projectmgmt },
                        success: function (result) {
                            var params = {
                                View: 1
                            };

                            //// Add new params to the querystring dictionary
                            queryString = $.param(params);

                            window.location.href =
                                window.location.protocol + "//" +
                                window.location.host +
                                window.location.pathname +
                               '?' + queryString;
                        }
                    });
                    return true;
                }
                else if (r == false) {
                    return false;
                }
            });
        }
        function downloadInnerHtml(filename, elId) {
            var $table = $('#table1');
            $rows = $table.find('tr');

            var csvData = "";

            for (var i = 0; i < $rows.length; i++) {
                var $cells = $($rows[i]).children('th,td'); //header or content cells

                for (var y = 0; y < $cells.length; y++) {
                    if (y > 0) {
                        csvData += ",";
                    }

                    var txt = ($($cells[y]).text()).toString().trim();

                    if (txt.indexOf(',') >= 0 || txt.indexOf('\"') >= 0 || txt.indexOf('\n') >= 0) {
                        txt = "\"" + txt.replace(/\"/g, "\"\"") + "\"";
                    }
                    csvData += txt;
                }
                csvData += '\n';
            }


            var elHtml = csvData;
            var link = document.createElement('a');
            mimeType = 'application/csv;charset=utf-8';

            link.setAttribute('download', filename);
            link.setAttribute('href', 'data:' + mimeType + ';charset=utf-8,' + encodeURIComponent(elHtml));
            link.click();
        }

        var fileName = 'ProjectList.csv'; // You can use the .txt extension if you want

        $('#downloadLink').click(function () {
            downloadInnerHtml(fileName, 'content');
        });

    </script>

}