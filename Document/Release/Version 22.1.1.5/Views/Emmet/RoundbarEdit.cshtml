@model ISOStd.Models.EmmetModels
@{
    ViewBag.Title = "";
    ISOStd.Models.EmmetModelsList objTranList = new ISOStd.Models.EmmetModelsList();
    ISOStd.Models.EmmetModels objModel = new ISOStd.Models.EmmetModels();
    ISOStd.Models.clsGlobal obj = new ISOStd.Models.clsGlobal();

    int icnts = 0;

    if (ViewBag.objList != null)
    {
        objTranList = ViewBag.objList;
        icnts = objTranList.EmmetList.Count;
    }
}

<div style="max-width: 80%;">
    <div class="groupedassets margin10">
        <span class="groupedassetshead margin10 onestphdcolor">Edit Round Bar</span>
    </div>
    <div id="divmsg">
        @if (TempData["alertdata"] != null)
        {
            <span class="errMsg" style="color: red; font-weight: bold;">@TempData["alertdata"]</span>
        }
        @if (TempData["Successdata"] != null)
        {
            <span class="errMsg" style="color: green; font-weight: bold;">@TempData["Successdata"]</span>
        }
    </div>

    @using (Html.BeginForm("RoundbarEdit", "Emmet", FormMethod.Post,
    new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)


        <div>
            <input type="hidden" id="id_roundbar" name="id_roundbar" value="@Model.id_roundbar" />
            <table id="tabcontent">
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.added_date)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @if (Model.added_date != null && Model.added_date > Convert.ToDateTime("01/01/0001"))
                        {
                            <input type="text" id="added_date" name="added_date" value="@Model.added_date.ToString("dd/MM/yyyy")" readonly />
                        }
                        else
                        {
                            <input type="text" id="added_date" name="added_date" readonly required />
                        }
                        </div>
                    </td>

                 @*   <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.material)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                             @Html.DisplayFor(model => model.material)
                        </div>
                    </td>*@
                </tr>
                <tr>
                  @*  <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.diameter)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                             <select class="chosen-select" id="diameter" name="diameter"  required>
                                <option value='' hidden>Select</option>
                                @if (ViewBag.DiameterList != null)
                                {
                                    foreach (var item in ViewBag.DiameterList)
                                    {
                                        if (item.Value == Model.diameter)
                                        {
                                             <option value='@item.Value' selected>@item.Text</option>
                                        }
                                        else{
                                             <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                }

                            </select>
                        </div>
                    </td>*@
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.po)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            <input type="text" id="po" name="po" value="@Model.po" required />
                        </div>
                    </td>
               
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.supplier)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                             <select class="chosen-select" id="supplier" name="supplier"  required>
                                <option value='' hidden>Select</option>
                                @if (ViewBag.Suppplier != null)
                                {
                                    foreach (var item in ViewBag.Suppplier)
                                    {

                                        if (item.Value == Model.supplier)
                                        {
                                             <option value='@item.Value' selected>@item.Text</option>
                                        }
                                        else{
                                             <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                }

                            </select>
                        </div>
                    </td>
                     </tr>
              <tr>
                  <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.po_upload)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            <input type="file" name="po_upload" id="po_upload" title="Documents" onchange="FileFormatValidation(this)"
                                   multiple="multiple" accept=".pdf, .doc, .docx,image/*" style="height: 38px;" />

                            <p style="font-size: 11px; margin: 0px;">(Hold Ctrl Key in case of multiple files)</p>
                         @if (Model.po_upload != null && Model.po_upload != "" && Model.po_upload.Length > 0)
                            {
                                <div class="editor-label">
                                    <p style="font-weight: bold; margin: 0px;">Document List:</p>
                                </div>
                                <p style="font-size: 11px; margin: 0px; color: red;">(Uncheck in case to remove a uploaded file)</p>
                                foreach (var docs in Model.po_upload.Trim(',').Split(','))
                                {
                                    <p style="margin: 0px;">
                                        <input type="checkbox" id="QCDocsVal" name="QCDocsVal" class="QCDocsVal" value="@docs.Trim(',')" checked title="Uncheck in case to remove a uploaded file" />
                                        <input type="hidden" id="QCDocsValselectall" name="QCDocsValselectall" />
                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" style="color: orange;">
                                            @System.IO.Path.GetFileName(docs)
                                        </a>
                                    </p>
                                }
                            }
                             </div>
                    </td>
                
             
                     <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.mtc_upload)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            <input type="file" name="mtc_upload" id="mtc_upload" title="Documents" onchange="FileFormatValidation(this)"
                                   multiple="multiple" accept=".pdf, .doc, .docx,image/*" style="height: 38px;" />

                            <p style="font-size: 11px; margin: 0px;">(Hold Ctrl Key in case of multiple files)</p>
                          @if (Model.mtc_upload != null && Model.mtc_upload != "" && Model.mtc_upload.Length > 0)
                            {
                                <div class="editor-label">
                                    <p style="font-weight: bold; margin: 0px;">Document List:</p>
                                </div>
                                <p style="font-size: 11px; margin: 0px; color: red;">(Uncheck in case to remove a uploaded file)</p>
                                foreach (var docs in Model.mtc_upload.Trim(',').Split(','))
                                {
                                    <p style="margin: 0px;">
                                        <input type="checkbox" id="mtcDocsVal" name="mtcDocsVal" class="mtcDocsVal" value="@docs.Trim(',')" checked title="Uncheck in case to remove a uploaded file" />
                                        <input type="hidden" id="mtcDocsValselectall" name="mtcDocsValselectall" />
                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" style="color: orange;">
                                            @System.IO.Path.GetFileName(docs)
                                        </a>
                                    </p>
                                }
                            }
                        </div>
                    </td>
                </tr>
            </table>
        </div>
           <div>
        <table style="width:100%;">

            <tr style="background-color: #4cc4dd; color: #fff;">
                <th colspan="6" style="font-size: 14px; font-weight: bold;">Add Round Bar</th>
            </tr>
            <tr style="background-color: #4cc4dd; color: #fff;">
                    <th style="font-size: 14px; font-weight: bold;">Category</th>
                    <th style="font-size: 14px; font-weight: bold;">Material</th>
                    <th style="font-size: 14px; font-weight: bold;">Heat No</th>
                    <th style="font-size: 14px; font-weight: bold;">Length</th>
                    <th style="font-size: 14px; font-weight: bold;">Qty</th>
                    <th style="font-size: 14px; font-weight: bold;">Price</th>
               
            </tr>
            <tr>
                 <td>
                      <select class="chosen-select" id="category" name="category"  onchange="GetMaterialList()">                         
                                <option value='' hidden>Select</option>
                                @if (ViewBag.CatList != null)
                                {
                                    foreach (var item in ViewBag.CatList)
                                    {
                                        <option value='@item.Value'>@item.Text</option>
                                    }
                                }
                            </select>
                        @Html.ValidationMessageFor(model => model.category)
                        <span class="field-validation-error"><span id="category-message" style="display: none;">Please Enter</span></span>
                    </td>
                    <td>
                              <select class="chosen-select" id="material" name="material" >                         
                                <option value='' hidden>Select</option>
                              
                            </select>
                        @Html.ValidationMessageFor(model => model.material)
                        <span class="field-validation-error"><span id="material-message" style="display: none;">Please Enter</span></span>
                    </td>        
                <td>
                    <input type="text" id="heatno" name="heatno" />
                    @Html.ValidationMessageFor(model => model.heatno)
                    <span class="field-validation-error"><span id="heatno-message" style="display: none;">Please Enter</span></span>
                </td>
                <td>
                    <input type="number" id="length" name="length" min="1" />
                    @Html.ValidationMessageFor(model => model.length)
                    <span class="field-validation-error"><span id="length-message" style="display: none;">Please Enter</span></span>
                </td>
                  @* <td>
                        <select class="chosen-select" id="diameter" name="diameter">
                            <option value='' hidden>Select</option>
                            @if (ViewBag.DiameterList != null)
                            {
                                foreach (var item in ViewBag.DiameterList)
                                {
                                <option value='@item.Value'>@item.Text</option>
                                }
                            }

                        </select>
                        @Html.ValidationMessageFor(model => model.diameter)
                        <span class="field-validation-error"><span id="diameter-message" style="display: none;">Please Enter</span></span>
                    </td>*@
               <td>
                    <input type="number" id="qty" name="qty" min="1" />
                    @Html.ValidationMessageFor(model => model.qty)
                    <span class="field-validation-error"><span id="qty-message" style="display: none;">Please Enter</span></span>
                </td>
                  <td>
                    <input type="number" id="price" name="price" min="1"  />
                    @Html.ValidationMessageFor(model => model.price)
                    <span class="field-validation-error"><span id="price-message" style="display: none;">Please Enter</span></span>
                </td>
               
            </tr>
          
        </table>

               </div>


        <div style="width: 100%; text-align: center;">
            @Html.ActionLink("Back to List", "RoundbarList", null, new { Class = "ActionLink", onclick = "HyperLinkProgressIconFunction()" })
            <input type="submit" id="btnCreate" value="submit" onclick="ProgressIconFunction('#form1')" />
        </div>

        <br />
        <br />
        
        
        <div id="Welfare">
                <input type="hidden" id="itemcnts" name="itemcnts" value="@icnts" />
          
                <table id="team-list1">
                    <tr>
                        <th colspan="7" style="background-color: #4cc4dd;color: white">
                            Round Bar List
                        </th>
                    </tr>
                    <tr>
                        <th style="width: 50px; min-width: 50px; max-width: 50px;">Delete</th>
                            <th style="width: 200px; min-width: 200px; max-width: 200px;">Category</th>
                    <th style="width: 200px; min-width: 200px; max-width: 200px;">Material</th>
                        <th style="width: 200px; min-width: 200px; max-width: 200px;">Heat No</th>
                        <th style="width: 200px; min-width: 200px; max-width: 200px;">Length</th>
                       @*  <th style="width: 200px; min-width: 200px; max-width: 200px;">Diameter</th>*@
                        <th style="width: 200px; min-width: 200px; max-width: 200px;">Qty</th>
                        <th style="width: 200px; min-width: 200px; max-width: 200px;">Price</th>
                       
                    </tr>
                      @if (objTranList.EmmetList != null && objTranList.EmmetList.Count > 0)
                {
                    for (int index = 0; index < objTranList.EmmetList.Count; index++)
                    {

                <tr>
                    <td style="width: 50px; min-width: 50px; max-width: 50px;">
                        <img src='@Url.Content("~/images/cancel.png")' onclick='deleteCoseRow(this)' style='cursor:pointer; padding-right: 5px;' />
                        <input type='hidden' id='id_roundbar_trans @index' name="id_roundbar_trans @index" value='@objTranList.EmmetList[index].id_roundbar_trans' />
                    </td>
                   <td style="width: 200px; min-width: 200px; max-width: 200px;">
                        <input type='hidden' id='category@(index)' name="category@(index)" value='@objTranList.EmmetList[index].category'>@obj.GetDropdownitemById(objTranList.EmmetList[index].category)
                    </td>
                     <td style="width: 200px; min-width: 200px; max-width: 200px;">
                        <input type='hidden' id='material@(index)' name="material@(index)" value='@objTranList.EmmetList[index].material'>@obj.getMaterialById(objTranList.EmmetList[index].material)
                    </td>
                    <td style="width: 200px; min-width: 200px; max-width: 200px;">
                        <input type='hidden' id='heatno@(index)' name="heatno@(index)" value='@objTranList.EmmetList[index].heatno'>@objTranList.EmmetList[index].heatno
                    </td>
                    <td style="width: 200px; min-width: 200px; max-width: 200px;">
                        <input type='hidden' id='length@(index)' name="length@(index)" value='@objTranList.EmmetList[index].length'>@objTranList.EmmetList[index].length
                    </td>
                    <td style="width: 200px; min-width: 200px; max-width: 200px;">
                        <input type='hidden' id='qty@(index)' name="qty@(index)" value='@objTranList.EmmetList[index].qty'>@objTranList.EmmetList[index].qty
                    </td>
                    <td style="width: 200px; min-width: 200px; max-width: 200px;">
                        <input type='hidden' id='price@(index)' name="price@(index)" value='@objTranList.EmmetList[index].price'>@objTranList.EmmetList[index].price
                    </td>
                  
                    
                </tr>
                    }
                }
                </table>
            </div>
      
    }
</div>
@section Scripts {
    <script>
        
        $(function () {
            $("#material").chosen();
            $("#category").chosen();
            $("#supplier").chosen();
           
            $.validator.setDefaults({ ignore: ":hidden:not('.chosen-select')" });

            $('#added_date').datepicker({
                dateFormat: "dd/mm/yy",
                buttonImageOnly: true,
                buttonImage: '../Images/Calender.png',
                showOn: 'both',
                changeMonth: true,
                changeYear: true,
            });

            $("#QCDocsVal").click(function () {
                if ($("#QCDocsVal").prop('checked')) {
                    {
                        $(this).prop('checked', true);
                    }
                }
                else {

                    $(this).prop('checked', false);
                    document.getElementById("QCDocsValselectall").value = "DeleteQC";
                }

            });

            $("#mtcDocsVal").click(function () {
                if ($("#mtcDocsVal").prop('checked')) {
                    {
                        $(this).prop('checked', true);
                    }
                }
                else {

                    $(this).prop('checked', false);
                    document.getElementById("mtcDocsValselectall").value = "Deletemtc";
                }

            });

        });
        function FileFormatValidation(file) {
            var ext = file.value.split(".").pop().toLowerCase();
            if ($.inArray(ext, ["doc", "pdf", 'docx']) == -1) {
                file.value = "";
                jAlert("Invalid file format, please upload only Pdf,docx,doc format");
            }
        }
         function deleteCoseRow(btn) {
            var row = btn.parentNode.parentNode;
            row.parentNode.removeChild(row);
         }

         function GetMaterialList() {
             var category = $('#category').chosen().val();
             jQuery.ajax({
                 url: '@Url.Action("FunGetMaterialList", "Emmet")',
                type: 'POST',
                dataType: "json",
                data: { 'category': category },
                success: function (result) {

                    if (result != null && result.length > 0) {


                        $('#material').children('option').remove();
                        $("#material").trigger("chosen:updated");

                        $.each(result, function (index, item) {

                            $("#material").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            $("#material").trigger("chosen:updated");

                        });
                        $('#material').trigger('change');
                        return;
                    }
                    else {
                        jAlert("No Material exists.");
                        $('#material').children('option').remove();
                        $("#material").trigger("chosen:updated");
                        return;
                    }
                }
            });
        }


      

    
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
