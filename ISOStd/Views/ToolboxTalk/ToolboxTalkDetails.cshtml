@model ISOStd.Models.ToolboxTalkModels

@{
    ViewBag.Title = "AddToolboxTalk";
    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
}

@section featured {

    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("ToolBoxTalkList", "ToolBoxTalk", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Toolbox Talk</span>
                    </a>
                    <span class="breadcrumb-item active">Toolbox Talk Details </span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}

<div class="card">
    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">Toolbox Talk Details</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>
            </div>
        </div>
    </div>

    <div>
        <div class="card-header bg-white header-elements-sm-inline">

            <div class="header-elements">
                @if (Obj.GetCurrentUserSession().ToolTalk.Contains("3"))
                {
                    <a class="btn bg-orange btn-labeled btn-labeled-left" data-style="radius" href='@Url.Action("ToolboxTalkEdit", "ToolboxTalk",new { ToolBox_TalkId = Model.ToolBox_TalkId.ToString() })' title="Edit" onclick="HyperLinkProgressIconFunction()">
                        <b>  <i class="icon-add-to-list"></i></b> Edit
                    </a>
                }
                @Html.ActionLink("Back to List", "ToolboxTalkList", null, new { @class = "btn btn-outline bg-orange text-orange border-orange ml-3", onclick = "HyperLinkProgressIconFunction()" })
            </div>
        </div>
    </div>

    <div class="card-body">
        <div class="container-fluid">
            <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.branch)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.branch)
                        </p>
                    </td>
                 
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.Department)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.Department)
                        </p>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.Location)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.Location)
                        </p>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.Talk_DateTime)
                        </p>
                    </td>
                    <td class="col">

                        @if (Model.Talk_DateTime > Convert.ToDateTime("01/01/0001"))
                        {
                            <p class="bg-dark py-1 px-2 rounded">
                                @Model.Talk_DateTime.ToString("dd/MM/yyyy HH:mm")
                            </p>
                        }

                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.Conducted_By)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.Conducted_By)
                        </p>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.Topic)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.Topic)
                        </p>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.Activity_type)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.Activity_type)
                        </p>
                    </td>
                </tr>
                @*<td>
            <div class="display-label">
                @Html.LabelFor(model => model.Attendee_No)
            </div>
        </td>
        <td>
            <div class="display-field">
                @Html.DisplayFor(model => model.Attendee_No)
            </div>
        </td>*@
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.Identified_method)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.Identified_method)
                        </p>
                    </td>

                    @*<td class="col-xs-3 col-md-2">
                <p class="bg-brown py-1 px-2 rounded">
                    @Html.DisplayNameFor(model => model.ptw)
                </p>
            </td>
            <td class="col">
                <p class="bg-dark py-1 px-2 rounded">
                    @Html.DisplayFor(model => model.ptw)
                </p>
            </td>*@
                </tr>
                @*<tr class="row">
            <td class="col-xs-3 col-md-2">
                <p class="bg-brown py-1 px-2 rounded">
                    @Html.DisplayNameFor(model => model.Comply_ppe)
                </p>
            </td>
            <td class="col">
                <p class="bg-dark py-1 px-2 rounded">
                    @Html.DisplayFor(model => model.Comply_ppe)
                </p>
            </td>
            <td class="col-xs-3 col-md-2">
                <p class="bg-brown py-1 px-2 rounded">
                    @Html.DisplayNameFor(model => model.Identified_hazard)
                </p>
            </td>
            <td class="col">
                <p class="bg-dark py-1 px-2 rounded">
                    @Html.DisplayFor(model => model.Identified_hazard)
                </p>
            </td>
        </tr>*@
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.Report_No)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.Report_No)
                        </p>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.Upload_Report)
                        </p>
                    </td>
                    <td class="col">

                        @*@if (Obj.GetCurrentUserSession().ToolTalk.Contains("4"))
                        {*@
                            @if (Model.Upload_Report != null && Model.Upload_Report != "" && Model.Upload_Report.Length > 0)
                            {
                                foreach (var docs in Model.Upload_Report.Trim(',').Split(','))
                                {
                                    <p style="margin: 0px;">
                                        <span class="bg-dark py-1 px-2 rounded">
                                            <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" style="color: orange;">
                                                @*@System.IO.Path.GetFileName(docs)*@
                                                Preview
                                            </a>
                                        </span>
                                    </p>
                                }
                            }
                        @*}*@
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.Project)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.Project)
                        </p>
                    </td>

                </tr>


                @*<td class="col-xs-3 col-md-2">
            <p class="bg-brown py-1 px-2 rounded">
                @Html.DisplayNameFor(model => model.Attended_by)
            </p>
        </td>
        <td class="col">
            <p class="bg-dark py-1 px-2 rounded">
                @Html.DisplayFor(model => model.Attended_by)
            </p>
        </td>*@

                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.feedback_tbt)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.feedback_tbt)
                        </p>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.outcome_tbt)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.outcome_tbt)
                        </p>
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>


@section Scripts {
    <script type="text/javascript">
                    //----zzz


     $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
    });

    //zzz----


             






    </script>

}

