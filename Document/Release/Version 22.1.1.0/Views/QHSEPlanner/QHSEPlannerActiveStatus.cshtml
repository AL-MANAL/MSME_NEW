@model ISOStd.Models.QHSEPlannerModels

@{
    ViewBag.Title = "EditQHSEPlanner";
}   


    @section featured {

        <div class="page-header page-header-light">

            <div class="page-header-content header-elements-md-inline">
                <div class="page-title d-flex">
                    <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

                </div>
            </div>

            <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
                <div class="d-flex">
                    <div class="breadcrumb">

                        <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                            <span class="breadcrumb-item"> Home</span>
                        </a>
                        <a href="@Url.Action("QHSEPlannerList", "QHSEPlanner", null)" class="breadcrumb-item">
                            <span class="breadcrumb-item"> Event Planner List</span>
                        </a>
                        <span class="breadcrumb-item active">Event Planner Status</span>
                    </div>

                    <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
                </div>

                <div class="header-elements d-none">
                    <div class="breadcrumb justify-content-center">


                        <div class="breadcrumb-elements-item dropdown p-0">
                            <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                                <i class="icon-gear mr-2"></i>
                                Settings
                            </a>

                            <div class="dropdown-menu dropdown-menu-right">

                                <div class="dropdown-divider"></div>
                                <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


    }

    @using (Html.BeginForm("QHSEPlannerActiveStatus", "QHSEPlanner", FormMethod.Post,
                         new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <div class="card">
            <div class="card-header header-elements-inline bg-primary">
                <h5 class="card-title">Event Planner Status</h5>
                <div class="header-elements">
                    <div class="list-icons">
                        <a class="list-icons-item" data-action="collapse"></a>

                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="container-fluid">


                    <input type="hidden" id="id_qhse" name="id_qhse" value="@Model.id_qhse" />

                    <table class="table table-lg">
                        <tr class="row">
                            @*<td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.QHSE_name)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.DisplayFor(model => model.QHSE_name)
                        </div>
                    </td>*@

                            <td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Activity_name)
                                </div>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    @Html.DisplayFor(model => model.Activity_name)
                                </div>
                            </td>
                            <td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Remarks)
                                </div>
                            </td>
                            <td class="col">
                                <div class="editor-field">

                                    <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="Remarks" name="Remarks">@Model.Remarks</textarea>
                                </div>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Planned_date)
                                </div>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    @if (Model.Planned_date != null && Model.Planned_date > Convert.ToDateTime("01/01/0001"))
                                    {
                                        @Model.Planned_date.ToString("dd/MM/yyyy")
                                    }

                                </div>

                            </td>
                            <td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Target_date)
                                </div>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    @if (Model.Target_date != null && Model.Target_date > Convert.ToDateTime("01/01/0001"))
                                    {
                                        @Model.Target_date.ToString("dd/MM/yyyy")
                                    }
                                </div>

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Person_responsible)
                                </div>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    @Html.DisplayFor(model => model.Person_responsible)
                                </div>
                            </td>
                            <td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Actual_date)<text style="color: red;">*</text>
                                </div>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    <input type="date" class="form-control" id="Actual_date" name="Actual_date" required />
                                </div>

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Status)<text style="color: red;">*</text>
                                </div>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    <select class="form-control select-search select2-hidden-accessible" id="Status" name="Status" required data-fouc>
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.Status != null)
                                        {
                                            foreach (var item in ViewBag.Status)
                                            {
                                                if (item.Text == Model.Status)
                                                {
                                                    <option value='@item.Value' selected>@item.Text</option>
                                                }
                                                else
                                                {
                                                    <option value='@item.Value'>@item.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                </div>

                            </td>
                            <td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Upload)
                                </div>
                            </td>
                            <td class="col">
                                <div class="todo">

                                    <input type="file" name="Upload" id="Upload" title="Documents" onchange="FileFormatValidation(this)"
                                           multiple="multiple" accept=".pdf, .doc, .docx,image/*" class="bootstrap-uploader" data-fouc />


                                    @*<p style="font-size: 11px; margin: 0px;">(Hold Ctrl Key in case of multiple files)</p>*@
                                    <span class="form-text text-muted"><code>(Hold Ctrl Key in case of multiple files or drag multiple files and drop here)</code></span>
                                </div>

                            </td>
                        </tr>


                    </table>
                </div>
            </div>

            <div class="card-footer bg-white d-flex justify-content-between align-items-center">
                @Html.ActionLink("Back to List", "QHSEPlannerList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })

                <button type="submit" id="btnCreate" value="Update" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Update</button>
            </div>
        </div>
            }

        
@section Scripts {


    <script>
         //----zzz
    $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
        });
            
    //zzz----
        function FileFormatValidation(file) {
            var ext = file.value.split(".").pop().toLowerCase();
            if ($.inArray(ext, ["pdf", "doc", "docx"]) == -1) {
                file.value = "";
                bootbox.alert({
                    title: 'File type',
                    message: 'Invalid file format, please upload only pdf format.'
                });
            }
        }
      

    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
