@model ISOStd.Models.VisitorsModels

@{
    ViewBag.Title = "AddVisitors";
}


@section featured {

    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Home</span>
                    </a>
                    <a href="@Url.Action("VisitorList", "EmployeeDetails", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Visitors List</span>
                    </a>
                    <span class="breadcrumb-item active">Update Visitors</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">

                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>
                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}

@using (Html.BeginForm("VisitorEdit", "EmployeeDetails", FormMethod.Post,
                     new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
 <input type="hidden" id="id_visitors" name="id_visitors" value="@Model.id_visitors" />
    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Edit Visitors</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">
  <table class="table table-lg">
           
            <tr class="row">
                <td class="col-xs-3 col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.firstname)<text style="color:red;"> *</text>
                    </div>
                </td>
                <td class="col">
                    <div class="editor-field">
                        @Html.EditorFor(model => model.firstname, new { htmlAttributes = new { @required = "required",@class = "form-control" } })
 			@Html.ValidationMessageFor(model => model.firstname)
                    </div>
                </td>

                <td class="col-xs-3 col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.lastname)<text style="color:red;"> *</text>
                    </div>
                </td>
                <td class="col">
                    <div class="editor-field">
                        @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @required = "required",@class = "form-control" } })
 			@Html.ValidationMessageFor(model => model.lastname)
                    </div>
                </td>
            </tr>
            <tr class="row">
                <td class="col-xs-3 col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.v_company)<text style="color:red;"> *</text>
                    </div>
                </td>
                 <td class="col">
                    <div class="editor-field">
                        @Html.EditorFor(model => model.v_company, new { htmlAttributes = new { @required = "required",@class = "form-control" } })
 			@Html.ValidationMessageFor(model => model.v_company)
                    </div>
                </td>
                <td class="col-xs-3 col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.designation)<text style="color:red;"> *</text>
                    </div>
                </td>
                 <td class="col">
                    <div class="editor-field">
                        @Html.EditorFor(model => model.designation, new { htmlAttributes = new { @required = "required",@class = "form-control" } })
 			@Html.ValidationMessageFor(model => model.designation)
                    </div>
                </td>
            </tr>
            <tr class="row">
                <td class="col-xs-3 col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.contact_no)<text style="color:red;"> *</text>
                    </div>
                </td>
                 <td class="col">
                    <div class="editor-field">
                        @Html.EditorFor(model => model.contact_no, new { htmlAttributes = new { @required = "required",@class = "form-control" } })
 			@Html.ValidationMessageFor(model => model.contact_no)
                    </div>
                </td>
                <td class="col-xs-3 col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.email)
                    </div>
                </td>
                 <td class="col">
                    <div class="editor-field">
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new {@class = "form-control" } })
                    </div>
                </td>
            </tr>
            <tr class="row">
                <td class="col-xs-3 col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.visit_date)<text style="color:red;"> *</text>
                    </div>
                </td>
                <td class="col">
                    <div class="editor-field">
 			   @if (Model.visit_date != null && Model.visit_date > Convert.ToDateTime("01/01/0001"))
                            {
                                <input class="form-control" type="date" id="visit_date" name="visit_date" value="@Model.visit_date.ToString("yyyy-MM-dd")" required/>                               
                            }
                            else
                            {
                                <input class="form-control" type="date"id="visit_date" name="visit_date" required/>                               
                            }
			   @Html.ValidationMessageFor(model => model.visit_date)
                    </div>
                </td>
                <td class="col-xs-3 col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.purpose_visit)<text style="color:red;"> *</text>
                    </div>
                </td>
                 <td class="col">
                    <div class="editor-field">
                        <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="purpose_visit" name="purpose_visit" required>@Model.purpose_visit</textarea>
                        @Html.ValidationMessageFor(model => model.purpose_visit)
		    </div>
                </td>
            </tr>
          
            <tr class="row">
                <td class="col-xs-3 col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.hse_ind)<text style="color:red;"> *</text>
                    </div>
                </td>
                 <td class="col">
                    <div class="editor-field">
                        <select class="form-control select-search select2-hidden-accessible" data-fouc id="hse_ind" name="hse_ind" required>
                            <option value='' hidden>Select</option>
                            @if (ViewBag.HSEIndReq != null)
                            {
                                foreach (var item in ViewBag.HSEIndReq)
                                {
                                     if (item == Model.hse_ind)
                                    {
                                        <option value='@item' selected>@item</option>
                                    }
                                    else
                                    {
                                        <option value='@item'>@item</option>
                                    }
                                }
                            }
                        </select>
			 @Html.ValidationMessageFor(model => model.hse_ind)
                    </div>
                </td>
                <td class="col-xs-3 col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.upload)
                    </div>
                </td>
                <td class="col">
                    <div class="editor-field">
                       <input type="file" name="file" id="file" onchange="FileFormatValidation(this)" accept=".pdf,.xlsx,.xls,.doc,.docx" class="bootstrap-uploader" data-fouc />                              
                     @if (Model.upload != "")
                         {
                               <span class="bg-dark py-1 px-2 rounded">
                                   <a href='@Url.Action("DisplayDocument", "Reports", new { Document = Model.upload})' target="_blank">Preview</a>
                               </span>
                         }
 </div>
                </td>
            </tr>
        </table>
	    </div>
        </div>
        <div class="card-footer bg-white d-flex justify-content-between align-items-center">
            @Html.ActionLink("Back to List", "VisitorList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })

            <button type="submit" id="btnCreate" value="Save" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Update</button>
        </div>
    </div>

       
        }
@section Scripts {
    <script>
        function FileFormatValidation(file) {
            var ext = file.value.split(".").pop().toLowerCase();
            if ($.inArray(ext, ["doc", "pdf", "docx", "jpg", "jpeg", "gif", "png"]) == -1) {
                file.value = "";
                jAlert("Invalid file format, please upload only doc, pdf, docx, jpg, jpeg, gif, png format");
            }
        }
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}