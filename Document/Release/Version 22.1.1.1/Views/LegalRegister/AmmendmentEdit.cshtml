

@model ISOStd.Models.LegalRegisterModel

@{
    ViewBag.Title = "AmmendmentEdit";

    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
    ISOStd.Models.LegalRegisterModelsList LRList = new ISOStd.Models.LegalRegisterModelsList();
    int itemcount = 0; int not_cnt = 0;
    string[] NotifiedToArray = new string[0];
    if (ViewBag.Ammendment != null)
    {
        LRList = ViewBag.Ammendment;
        itemcount = LRList.LegalRegisterMList.Count;
    }
    if (ViewBag.NotifiedToArray != null)
    {
        NotifiedToArray = ViewBag.NotifiedToArray;
        not_cnt = NotifiedToArray.Length;
    }
}

@section featured {
<div class="page-header page-header-light">

    <div class="page-header-content header-elements-md-inline">
        <div class="page-title d-flex">
            <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
        </div>
    </div>

    <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
        <div class="d-flex">
            <div class="breadcrumb">
                <a href="@Url.Action(" Index", "Home" , null)" class="breadcrumb-item">
                    <span class="breadcrumb-item">Home</span>
                </a>
                <a href="@Url.Action("ComplianceList", "LegalRegister", null)" class="breadcrumb-item">
                    <span class="breadcrumb-item">Legal Register</span>
                </a>
                <span class="breadcrumb-item active">Update Amendment</span>
            </div>

            <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
        </div>

        @*<div class="header-elements d-none">
            <div class="breadcrumb justify-content-center">
                <div class="breadcrumb-elements-item dropdown p-0">
                    <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                        <i class="icon-gear mr-2"></i>
                        Settings
                    </a>
                    <div class="dropdown-menu dropdown-menu-right">
                        <div class="dropdown-divider"></div>
                        <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                    </div>
                </div>
            </div>
        </div>*@
    </div>
</div>
}

@using (Html.BeginForm("AmmendmentEdit", "LegalRegister", FormMethod.Post,
                     new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
<input type="hidden" id="id_law" name="id_law" value="@Model.id_law" />

<div class="card">
    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">Amendment</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="container-fluid">
            <table class="table table-lg">
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            @Html.DisplayNameFor(model => model.branch)
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            @Html.DisplayFor(model => model.branch)
                        </div>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            @Html.DisplayNameFor(model => model.deptid)
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            @Html.DisplayFor(model => model.deptid)
                        </div>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            @Html.DisplayNameFor(model => model.Eve_date)
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            @if (Model.Eve_date != null && Model.Eve_date > Convert.ToDateTime("01/01/0001"))
                            {
                            @Html.DisplayFor(model => model.Eve_date)
                            }
                        </div>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            @Html.DisplayNameFor(model => model.Location)
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            @Html.DisplayFor(model => model.Location)
                        </div>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-4 col-md-2">
                        <div class="editor-label">
                            @Html.DisplayNameFor(model => model.lawNo)
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            @Html.DisplayFor(model => model.lawNo)
                        </div>
                    </td>
                    <td class="col-xs-4 col-md-2">
                        <div class="editor-label">
                            @Html.DisplayNameFor(model => model.lawTitle)
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            @Html.DisplayFor(model => model.lawTitle)
                        </div>
                    </td>
                </tr>
            </table>
            <hr />
            <div> <b>Amendment Details:</b> </div>
            <br />
            <table class="table table-lg">
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        @Html.LabelFor(model => model.ammend_date)<text style="color: red;">*</text>
                    </td>
                    <td class="col">
                        @if (Model.ammend_date > Convert.ToDateTime("01/01/0001"))
                        {
                        <input type="date" id="ammend_date" name="ammend_date" value="@Model.ammend_date.ToString("yyyy-MM-dd")" class="form-control" />
                        }
                        else
                        {
                        <input type="date" id="ammend_date" name="ammend_date" required class="form-control" />
                        }
                    </td>
                    <td class="col-xs-3 col-md-2">
                        @Html.DisplayNameFor(model => model.ammend_detail)<text style="color: red;">*</text>
                    </td>
                    <td class="col">
                        @Html.EditorFor(m => m.ammend_detail, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
                    </td> 
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        @Html.LabelFor(model => model.amend_review_date)<text style="color: red;">*</text>
                    </td>
                    <td class="col">
                        @if (Model.amend_review_date > Convert.ToDateTime("01/01/0001"))
                        {
                        <input type="date" id="amend_review_date" name="amend_review_date" value="@Model.amend_review_date.ToString("yyyy-MM-dd")" class="form-control" />
                        }
                        else
                        {
                        <input type="date" id="amend_review_date" name="amend_review_date" required class="form-control" />
                        }
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            @Html.DisplayNameFor(model => model.amend_review_by)<text style="color: red;">*</text>
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            <select class="form-control select-fixed-multiple" data-fouc id="amend_review_by" name="amend_review_by" required multiple>
                                <option value='' hidden>Select</option>
                                @if (ViewBag.EmpList != null)
                                {
                                    foreach (var data in ViewBag.EmpList)
                                    {
                                        if (Array.IndexOf(Model.amend_review_by.ToString().Split(','), data.Value) >= 0)
                                        {
                                            <option value='@data.Value' selected>@data.Text</option>
                                        }
                                        else
                                        {
                                            <option value='@data.Value'>@data.Text</option>
                                        }
                                    }
                                }
                            </select>
                        </div>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        @Html.DisplayNameFor(model => model.amend_review_detail)<text style="color: red;">*</text>
                    </td>
                    <td class="col">
                        @Html.EditorFor(m => m.amend_review_detail, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
                    </td>
                    <td class="col-xs-3 col-md-2">
                        @Html.DisplayNameFor(model => model.amend_actions)<text style="color: red;">*</text>
                    </td>
                    <td class="col">
                        @Html.EditorFor(m => m.amend_actions, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.amend_notified_to)<text style="color: red;">*</text>
                        </div>
                    </td>
                    <td class="col-xs-3 col-md-4">
                        <div class="editor-field">
                            <select class="form-control select-fixed-multiple" data-fouc id="amend_notified_to" name="amend_notified_to" onchange="GetNotifiedByDetails()">
                                <option value="">Select</option>
                                @if (ViewBag.EmpList != null)
                                {
                                    foreach (var data in ViewBag.EmpList)
                                    {
                                       
                                            <option value='@data.Value'>@data.Text</option>
                                        
                                    }
                                }
                            </select>
                        </div>
                    </td>

                </tr>
                </table>
            <div id="notified" style="display:none">
                <div class="card-body">
                    <input type="hidden" id="notified_cnt" name="notified_cnt" value="@not_cnt" />

                    <div class="card card-table table-responsive shadow-0 mb-0">
                        <table class="table" id="notified-list">
                            <tr class="bg-blue">
                                <th>Action</th>
                                <th>Id</th>
                                <th>Notified To</th>
                                <th>Division</th>
                                <th>Location</th>
                                <th>Department</th>
                                <th>Email</th>
                            </tr>

                            @if (ViewBag.NotifiedToArray != null && NotifiedToArray != null && NotifiedToArray.Length > 0)
                            {
                                for (int index = 0; index < NotifiedToArray.Length; index++)
                                {
                                    //string[] sEmp = @objIncidentLTIList.lstIncidentLTIModels[index].Emp_Id.Split(';');
                                    <tr>
                                        <td>
                                            <span class='badge badge-info' onclick='deleteRow(this)' style='cursor:pointer;'>Delete</span>
                                            @*<img src='@Url.Content("~/images/cancel.png")' onclick='deleteRow1(this)' style='cursor:pointer; padding-right: 5px;' />Remove*@
                                            <input type='hidden' id='empno @index' name="empno @index" value='@NotifiedToArray[index]' />
                                        </td>
                                        <td>
                                            <input type='hidden' id='empid @index' name="empid @index" readonly>@Obj.GetEmpIDByEmpNo(NotifiedToArray[index])
                                        </td>
                                        <td>
                                            <input type='hidden' id='empname @index' name="empname @index" readonly>@Obj.GetEmpHrNameById(NotifiedToArray[index])
                                        </td>
                                        <td>
                                            <input type='hidden' id='empdiv @index' name="empdiv @index" readonly>@Obj.GetCompanyBranchNameById(Obj.GetDivisionIdByHrEmpId(NotifiedToArray[index]))
                                        </td>
                                        <td>
                                            <input type='hidden' id='emploc @index' name="emploc @index" readonly>@Obj.GetDivisionLocationById(Obj.GetWorkLocationIdByHrEmpId(NotifiedToArray[index]))
                                        </td>
                                        <td>
                                            <input type='hidden' id='empdept @index' name="empdept @index" readonly>@Obj.GetDeptNameById(Obj.GetDeptIdByHrEmpId(NotifiedToArray[index]))
                                        </td>
                                        <td>
                                            <input type='hidden' id='empemail @index' name="empemail @index" readonly>@Obj.GetHrEmpEmailIdById(NotifiedToArray[index])
                                        </td>
                                    </tr>
                                }
                            }
                        </table>
                    </div>
                </div>
            </div>

</div>
    </div>

    <div class="card-footer bg-white d-flex justify-content-between align-items-center">
        @Html.ActionLink("Back to List", "ComplianceList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })
        <button type="submit" id="btnCreate" value="Save" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Add</button>
    </div>
</div>
}

@section Scripts {
<script>

    $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }

    });
    var cnt = document.getElementById("notified_cnt").value;
    if (cnt > 0) {
        document.getElementById("notified").style.display = "block";
    }
    function GetNotifiedByDetails() {
        var notified_to = $('#amend_notified_to').val();
        if (notified_to != "" && notified_to != null) {
            jQuery.ajax({
                url: '@Url.Action("FunGetEmpDetails", "NC")',
                type: 'POST',
                dataType: "json",
                data: { 'semp_no': notified_to },
                success: function (result) {
                    if (result != null) {

                        document.getElementById("notified").style.display = 'block';

                        var empno = $('#amend_notified_to option:Selected').val();
                        var empid = result.emp_id;
                        var empname = result.empname;
                        var empdiv = result.division;
                        var empdept = result.department;
                        var emploc = result.location;
                        var empemail = result.EmailId;

                        if (empid != null) {
                            var cnt = document.getElementById("notified_cnt").value;

                            document.getElementById("notified_cnt").value = cnt;
                            // Find a <table> element with id="myTable":
                            var table = document.getElementById("notified-list");

                            // Create an empty <tr> element and add it to the 1st position of the table:
                            var row = table.insertRow();


                            // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
                            var cell0 = row.insertCell(0);
                            var cell1 = row.insertCell(1);
                            var cell2 = row.insertCell(2);
                            var cell3 = row.insertCell(3);
                            var cell4 = row.insertCell(4);
                            var cell5 = row.insertCell(5);
                            var cell6 = row.insertCell(6);

                            cell0.innerHTML = "<span class='badge badge-info' onclick='deleteRow(this)' style='cursor:pointer;'>Delete</span> <input type = 'hidden' id = 'empno " + cnt + "' name = 'empno " + cnt + "' value = '" + empno + "'>";
                            cell1.innerHTML = "<input type='hidden' id='empid " + cnt + "' name='empid " + cnt + "' value='" + empid + "'>" + empid;
                            cell2.innerHTML = "<input type='hidden' id='empname " + cnt + "' name='empname " + cnt + "' value='" + empname + "'>" + empname;
                            cell3.innerHTML = "<input type='hidden' id='empdiv " + cnt + "' name='empdiv " + cnt + "' value='" + empdiv + "'>" + empdiv;
                            cell4.innerHTML = "<input type='hidden' id='emploc " + cnt + "' name='emploc " + cnt + "' value='" + emploc + "'>" + emploc;
                            cell5.innerHTML = "<input type='hidden' id='empdept " + cnt + "' name='empdept " + cnt + "' value='" + empdept + "'>" + empdept;
                            cell6.innerHTML = "<input type='hidden' id='empemail " + cnt + "' name='empemail " + cnt + "' value='" + empemail + "'>" + empemail;

                            cnt++;
                            document.getElementById("notified_cnt").value = cnt;


                            $("#amend_notified_to").val('').trigger('change');
                        }

                    }
                }
            });
        }
    }

    var showClass = 'is-visible';
    var hideClass = 'invisible';


  function AddLLInfo() {

        if (Validation() == true) {

            var cnt = document.getElementById("itemcount").value;

            document.getElementById("itemcount").value = cnt;
            // Find a <table> element with id="myTable":
            var table = document.getElementById("team-list-count");

            // Create an empty <tr> element and add it to the 1st position of the table:
            var row = table.insertRow();

            // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
            var cell0 = row.insertCell(0);
            var cell1 = row.insertCell(1);
            var cell2 = row.insertCell(2);

            var ammend_detail = $('#ammend_detail').val();
            var ammend_date = /*reformatDate*/($("#ammend_date").val());

            cell0.innerHTML = " <img src='@Url.Content("~/images/cancel.png")' onclick='deleteRow1(this)' style='cursor:pointer; padding-right: 5px;'/>Remove";
            cell1.innerHTML = "<input type='hidden' id='ammend_date " + cnt + "' name='ammend_date " + cnt + "' value='" + ammend_date + "'>" + ammend_date;
            cell2.innerHTML = "<input type='hidden' id='ammend_detail " + cnt + "' name='ammend_detail " + cnt + "' value='" + ammend_detail + "'>" + ammend_detail;

            cnt++;
            document.getElementById("itemcount").value = cnt;

            document.getElementById("btnCreate").style.display = "block";

            document.getElementById("hidden_card_count").classList.remove(hideClass);
            document.getElementById("hidden_card_count").classList.add(showClass);
            ResetControl();
            }

        }

        function Validation() {
            var validflg = true;
            var ssnMessage = "";


            if (document.getElementById("ammend_date").value == "") {
                ssnMessage = $('#ammend_date-message');
                ssnMessage.show();
                validflg = false;
            }
            else {
                ssnMessage = $('#ammend_date-message');
                ssnMessage.hide();
            }

            if (document.getElementById("ammend_detail").value == "") {
                ssnMessage = $('#ammend_detail-message');
                ssnMessage.show();
                validflg = false;
            }
            else {
                ssnMessage = $('#ammend_detail-message');
                ssnMessage.hide();
            }
            return validflg;
        }

        function ResetControl() {
            document.getElementById("ammend_date").value = "";
            document.getElementById("ammend_detail").value = "";
        }

        function deleteRow(btn) {
            var row = btn.parentNode.parentNode;
            row.parentNode.removeChild(row);
        }

        function deleteRow1(id_ammendment) {
            bootbox.confirm({
                title: 'Confirm dialog',
                message: 'Are you Sure you want to Delete the current Record?',
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-primary'
                    },
                    cancel: {
                        label: 'Cancel',
                        className: 'btn-link'
                    }
                },
                callback: function (r) {
                    if (r == true) {
                    jQuery.ajax({
                        url: '@Url.Action("ComplianceAmmendmentDelete", "LegalRegister")',
                        data: { id_ammendment: id_ammendment },
                        type: 'POST',
                        dataType: "json",
                        success: function (result) {

                            var id_law = $("#id_law").val();
                            var params = {
                                id_law: id_law
                            };
                            queryString = $.param(params);
                            //// Add new params to the querystring dictionary
                            window.location.href =
                                window.location.protocol + "//" +
                                window.location.host +
                                window.location.pathname +
                                '?' + queryString;
                        }
                    });
                    return true;
                }
                else if (r == false) {
                        bootbox.hideAll();
                        return false;
                    }
                }
               });
        }

</script>
    @Scripts.Render("~/bundles/jqueryval")
}


