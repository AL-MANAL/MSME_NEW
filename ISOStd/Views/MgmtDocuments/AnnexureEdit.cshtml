@model ISOStd.Models.MgmtDocumentsModels

@{
    ViewBag.Title = "AnnexureEdit";
}

@section featured {
         
    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("MgmtDocumentsList", "MgmtDocuments", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Internal Documents</span>
                    </a>
                    <span class="breadcrumb-item active">Update Annexure </span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>


}

@using (Html.BeginForm("AnnexureEdit", "MgmtDocuments", FormMethod.Post, new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Update Annexure </h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>

                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">

                <table class="table table-lg">
                    <tbody>
                        <tr class="row">
                            <td>

                                <h5>For Document: @ViewBag.GetDocType</h5>

                                <input type="hidden" id="idAnnexure" name="idAnnexure" value="@Model.idAnnexure" />
                                <input type="hidden" id="idMgmt" name="idMgmt" value="@Model.idMgmt" />
                                <br />
                            </td>
                        </tr>
                        <tr class="row"> 

                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.DocRef)<text style="color:red;">*</text>
                                @Html.ValidationMessageFor(m => m.DocRef)
                            </td>
                            <td class="col">

                                <input type="text" id="DocRef" name="DocRef" value="@Model.DocRef" required class="form-control" />

                            </td>
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.DocName)<text style="color:red;">*</text>

                            </td>
                            <td class="col">

                                <input type="text" id="DocName" name="DocName" value="@Model.DocName" required class="form-control" />
                                @Html.ValidationMessageFor(m => m.DocName)
                            </td>
                        </tr>
                        <tr class="row">

                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.IssueNo)

                            </td>
                            <td class="col">

                                <input type="number" id="IssueNo" name="IssueNo" value="@Model.IssueNo" max="99" min="0" class="form-control" />

                            </td>
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.RevNo)
                                <text style="color:red;">*</text>

                            </td>
                            <td class="col">


                                @Html.EditorFor(m => m.RevNo, new { htmlAttributes = new { @type = "number", @min = "0", @class = "form-control", @required = "required" } })

                                @Html.ValidationMessageFor(m => m.RevNo)
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.PreparedBy)<text style="color:red;">*</text>

                            </td>
                            <td class="col">

                                <select class="form-control select-fixed-multiple" multiple="multiple" data-fouc id="PreparedBy" name="PreparedBy" required>
                                    @if (ViewBag.EmpLists != null)
                                    {
                                        foreach (var data in ViewBag.EmpLists)
                                        {
                                            if (Array.IndexOf(Model.PreparedBy.ToString().Split(','), data.Value) >= 0)
                                            {
                                                <option value='@data.Value' selected>@data.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@data.Value'>@data.Text</option>
                                            }
                                        }
                                    }
                                </select>
                                <br />
                                @Html.ValidationMessageFor(m => m.PreparedBy)
                            </td>

                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.DocDate)<text style="color:red;">*</text>

                            </td>
                            <td class="col">

                                <input type="date" id="DocDate" name="DocDate" value="@Model.DocDate.ToString("yyyy-MM-dd")" required class="form-control" />

                            </td>
                           
                        </tr>
                        <tr class="row">

                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.ApprovedBy)<text style="color:red;">*</text>

                            </td>
                            <td class="col">

                                <select class="form-control select-fixed-multiple" multiple="multiple" data-fouc id="ApprovedBy" name="ApprovedBy" required>
                                    @if (ViewBag.EmpList != null)
                                    {
                                        foreach (var data in ViewBag.EmpList)
                                        {
                                            if (Array.IndexOf(Model.ApprovedBy.ToString().Split(','), data.Text) >= 0)
                                            {
                                                <option value='@data.Value' selected>@data.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@data.Value'>@data.Text</option>
                                            }
                                        }
                                    }
                                </select>
                                <br />
                                @Html.ValidationMessageFor(m => m.ApprovedBy)
                            </td>
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.DocUploadPath)

                            </td>
                            <td class="col">

                                <input type="file" name="file" id="file" onchange="FileFormatValidation(this)" accept=".pdf, .doc, .docx,image/*" class="bootstrap-uploader" data-fouc />
                                @if (Model.DocUploadPath != "")
                                {
                                    <a href='@Url.Action("DisplayDocument", "Reports", new { Document = Model.DocUploadPath })' class="text-orange" target="_blank"><h5>Preview</h5></a>
                                }
                                @Html.ValidationMessage("fileUploader", "This field is required")
                            </td>
                        </tr>
                    </tbody>

                </table>
            </div>

        </div>

        <div class="card-footer bg-white d-flex justify-content-between align-items-center">

            @Html.ActionLink("Back to List", "AnnexureList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })

            <button type="submit" id="btnCreate" value="Update" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Update</button>
        </div>
    </div>
        }


        @section Scripts {
            <script>
                      //----zzz
    $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
    });
    //zzz----

                function FileFormatValidation(file) {
                    var ext = file.value.split(".").pop().toLowerCase();
                    if ($.inArray(ext, ["pdf", "xlsx", "xls", "doc", "docx"]) == -1) {
                        file.value = "";
                        bootbox.alert({
                            title: 'File type',
                            message: 'Invalid file format, please upload only pdf format.'
                        });
                    }
                }
            </script>
            @Scripts.Render("~/bundles/jqueryval")
        }
