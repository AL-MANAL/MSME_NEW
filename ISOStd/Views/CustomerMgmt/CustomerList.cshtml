@using PagedList;
@using PagedList.Mvc;

@model List<ISOStd.Models.CustomerModels>

    @{
        ViewBag.Title = "";
        ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
        var surveys = (IEnumerable<ISOStd.Models.SurveyModel>)ViewBag.Surveys;

    }
               @{

                   var ShowEdit = Obj.GetCurrentUserSession().AddCust.Contains("3") ? true : false;
                   var ShowDownld = Obj.GetCurrentUserSession().AddCust.Contains("4") ? true : false;
                   var ShowDel = Obj.GetCurrentUserSession().AddCust.Contains("5") ? true : false;

               }
    @section featured {
        <div class="page-header page-header-light">

            <div class="page-header-content header-elements-md-inline">
                <div class="page-title d-flex">
                    <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

                </div>
            </div>

            <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
                <div class="d-flex">
                    <div class="breadcrumb">
                        <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                            <span class="breadcrumb-item">Home</span>
                        </a>
                        <span class="breadcrumb-item active">Customer List</span>
                    </div>
                    <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
                </div>

                <div class="header-elements d-none">
                    <div class="breadcrumb justify-content-center">
                        @if (Obj.GetCurrentUserSession().AddCust.Contains("3"))
                        {
                            <button type="button" class="btn" data-toggle="modal" data-target="#modal_survey">Surveys <i class="icon-stack-text ml-2"></i></button>
                        }
                        @*<div class="breadcrumb-elements-item dropdown p-0">
                            <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                                <i class="icon-gear mr-2"></i>
                                Settings
                            </a>
                            <div class="dropdown-menu dropdown-menu-right">

                                <div class="dropdown-divider"></div>
                                <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                            </div>
                        </div>*@
                    </div>
                </div>
            </div>
        </div>
    }
    <style>
        .hidden {
            display: none !important;
        }
    </style>

    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Customer List</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>
                </div>
            </div>
        </div>
        @if (Obj.GetCurrentUserSession().AddCust.Contains("3"))
        {
            <div>
                <div class="card-header bg-white header-elements-sm-inline">
                    <div class="header-elements">
                        <a class="btn btn-outline bg-orange text-orange border-orange btn-ladda btn-ladda-progress ladda-button" data-style="radius" href='@Url.Action("AddCustomer", "CustomerMgmt")' title="Add New">
                            <span class="ladda-label">Add Customer Details</span>
                            <span class="ladda-spinner"></span>
                        </a>

                        <span style="margin-left: 20px"><input type="checkbox" id="selectall" class="selectall"></span> Select all
                        <span style="margin-left: 20px">
                            <input type="button" value="Send Mail" class="btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400" onclick="Send()" />
                        </span>
                    </div>
                </div>
            </div>
        }
        <div class="card-body">
            <div class="options d-flex flex-fill">
                @using (Html.BeginForm("CustomerList", "CustomerMgmt", FormMethod.Post, new { id = "form1", name = "form1", style = "width:25%" }))
                {
                    if (ViewBag.Branch != null)
                    {
                        <select class="form-control select-search select2-hidden-accessible" data-fouc id="branch_name" name="branch_name" onchange="getDetails()">
                            <option value='' hidden>Division</option>
                            @if (ViewBag.Branch != null)
                            {
                                foreach (var item in ViewBag.Branch)
                                {
                                    if (item.Value == ViewBag.Branch_name)
                                    {
                                        <option value='@item.Value' selected>@item.Text</option>
                                    }
                                    else
                                    {
                                        <option value='@item.Value'>@item.Text</option>
                                    }
                                }
                            }
                        </select>
                    }
                }
            </div>
        </div>

        <div class="card-body" id="checkboxes">
            <table class="table table-bordered table-striped table-hover datatable-responsive" id="customer">
                <thead>
                    <tr>
                        <th>
                            Sl No
                        </th>
                        <th>For Feedback</th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().CompanyName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().Cust_Code)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().Address)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().Email_Id)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().City)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().Country)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().PostalCode)
                        </th>
                        @*<th>
                            @Html.DisplayNameFor(model => model.First().FaxNumber)
                        </th>*@
                        <th>
                            @Html.DisplayNameFor(model => model.First().CustType)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().branch)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().Department)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().Location)
                        </th>

                        @*<th class="not-export-column">Edit</th>
                        <th class="not-export-column">Delete</th>*@
                        <th data-priority="2" class="text-center not-export-column">Actions</th>



                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Count() > 0)
                    {
                        int i = 0;
                        foreach (var item in Model)
                        {
                            i = i + 1;
                    <tr>
                        <td>
                            @Html.ActionLink(i.ToString(), "CustomerDetails", new { CustID = item.CustID.ToString() }, new { data_toggle = "popover", data_trigger = "hover", id = item.CustID, onclick = "HyperLinkProgressIconFunction()" })
                        </td>
                        <td>
                            <input type="checkbox" id="select" name="@item.Email_Id" value="@item.Email_Id">
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CompanyName)
                        </td>
                        <td style="width: 70px; min-width: 70px; max-width: 70px;">
                            @Html.DisplayFor(modelItem => item.Cust_Code)
                        </td>
                        <td>
                            @System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(item.Address)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email_Id)
                        </td>
                        <td>
                            @System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(item.City)
                        </td>

                        <td>
                            @System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(item.Country)
                        </td>
                        <td>
                            @System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(item.PostalCode)
                        </td>
                        @*<td>
                            @System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(item.FaxNumber)
                        </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.CustType)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.branch)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Department)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Location)
                        </td>
                        <td class="text-center">
                            <div class="list-icons">
                                <div class="list-icons-item dropdown">
                                    <a href="#" class="list-icons-item caret-0 dropdown-toggle" data-toggle="dropdown">
                                        <i class="icon-gear mr-2"></i>
                                    </a>

                                    <div class="dropdown-menu dropdown-menu-right">

                                        @if (ShowEdit)
                                        {
                                            <a class="dropdown-item" href='@Url.Action("CustomerEdit", "CustomerMgmt", new { CustID = item.CustID })' title="Edit" onclick="HyperLinkProgressIconFunction()">
                                                <i class="icon-pencil7"></i>Edit
                                            </a>
                                        }
                                        <div class="dropdown-divider"></div>
                                        @if (ShowDel)
                                        {
                                            <span class="dropdown-item text-center" title="Delete" onclick="DeleteItems(@item.CustID)" style="cursor:pointer;"><i class="icon-bin"></i>Delete</span>
                                        }

                                    </div>
                                </div>
                            </div>
                        </td>


                        @*<td>
                            <a href='@Url.Action("CustomerEdit", "CustomerMgmt", new { CustID = item.CustID })' title="Edit" onclick="HyperLinkProgressIconFunction()">
                                <span class="badge badge-info">Edit</span>
                            </a>
                        </td>
                        <td>
                            <span class="badge badge-danger" title="Delete" onclick="DeleteItems(@item.CustID)" style="cursor:pointer;">Delete</span>
                        </td>*@

                    </tr>
                        }
                    }

                </tbody>
            </table>
        </div>

    </div>

    @if (ViewBag.Surveys == null)
    {
        <div id="modal_survey" class="modal fade" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header bg-danger">
                        <h6 class="modal-title">Surveys Not Found</h6>
                        <button type="button" class="close" data-dismiss="modal">×</button>
                    </div>

                    <div class="modal-body">
                        <h6 class="font-weight-semibold">No Surveys have been found linked to this survey account , please check Register a survey.</h6>

                        <hr>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-link" data-dismiss="modal">Close</button>
                        <button type="button" class="btn bg-danger">Save changes</button>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {


        <div id="modal_survey" class="modal fade" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header bg-info">
                        <h6 class="modal-title">Surveys</h6>
                        <button type="button" class="close" data-dismiss="modal">×</button>
                    </div>

                    <div class="modal-body">
                        <h6 class="font-weight-semibold">Surveys</h6>
                        <div class="form-group" id="surveys">
                            @foreach (var survey in surveys)
                            {
                                if (survey.IsActive)
                                {




                                    <div class="form-check form-check-inline col-md-5">
                                        <label class="form-check-label">
                                            <input type="checkbox" class="form-check-input" name="@survey.Name" value="@survey.Id">
                                        </label>
                                        @survey.Name
                                    </div>

                                }

                            }
                        </div>


                        <div class="modal-footer">
                            <button type="button" class="btn btn-link" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>



    }

    @section scripts {
        <script type="text/javascript">
                    //----zzz




                    $(document).ready(function () {

        @if (TempData["alertdata"] != null ) {

           @: new Noty({
                                   @:     text: '@TempData["alertdata"]',
                                   @:     type: 'error'
                                   @: }).show();
                                        }

        @if (@TempData["Successdata"] != null ) {

        @:    new Noty({
                                 @:       text: '@TempData["Successdata"]',
                                 @:       type: 'success'
         @:}).show();
        }

                         @if (@TempData["InfoData"] != null ) {

        @:    new Noty({
                                 @:       text: '@TempData["InfoData"]',
                                 @:       type: 'info'
         @:}).show();
        }


                                          @if (@TempData["SurveyError"] != null ) {

        @:    new Noty({
                                 @:       text: '@TempData["SurveyError"]',
                                 @:       type: 'info'
         @:}).show();
        }

                        $("#selectall").click(function () {
                            if ($("#selectall").prop('checked')) {
                                $("#checkboxes input:checkbox").each(function () {
                                    $(this).prop('checked', true);
                                });
                            }
                            else {
                                $("#checkboxes input:checkbox").each(function () {
                                    $(this).prop('checked', false);
                                });
                            }
                        });


                        $("#select").click(function () {

                            if ($("#select").prop('checked')) {
                                {
                                    $(this).prop('checked', true);

                                }
                            }
                            else {

                                $(this).prop('checked', false);
                            }

                        });


                    });
                    //zzz----


                    function setData(id) {

                        var set_data = '';
                        var element = $(this);
                        var id = element.attr("id");
                        $.ajax({
                            url: '@Url.Action("CustomerInfo", "CustomerMgmt")',
                            methos: "post",
                            async: false,
                            data: { id: id },
                            success: function (data) {
                                set_data = data;

                            }

                        });

                        return set_data;
                    }


                    var customer = function () {

                       @*var ShowEdit = @(Obj.GetCurrentUserSession().AddCust.Contains("3") ? "true" : "false");
                var ShowDel = @(Obj.GetCurrentUserSession().AddCust.Contains("5") ? "true" : "false");*@

                        // Basic Datatable examples
                        var _componentDatatableBasic = function () {
                            if (!$().DataTable) {
                                console.warn('Warning - datatables.min.js is not loaded.');
                                return;
                            }

                            //Setting datatable defaults
                            $.extend($.fn.dataTable.defaults, {
                                autoWidth: false,
                                responsive: true,
                                columnDefs: [{
                                    orderable: false,
                                    //width: 100,
                                    targets: 'not-export-column'

                                }],
                                responsivePriority: 2, targets: -1,

                                colReorder: false,
                                dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                                //dom: 'lBfrtip',
                                language: {
                                    search: '<span>Filter:</span> _INPUT_',
                                    searchPlaceholder: 'Type to filter...',
                                    lengthMenu: '<span>Show:</span> _MENU_',
                                    paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                                }
                            });

                            var myClass = "";
                var Delclass= @(Obj.GetCurrentUserSession().AddCust.Contains("4") ? "true" : "false");
                if (Delclass == false) { myClass = 'hidden'  };

                            var table = $('#customer').DataTable({
                                drawCallback: function () {
                                    $('[data-toggle="popover"]').popover({

                                        html: true,
                                        content: setData,
                                        container: 'body'
                                        //data: setData,


                                    });
                                    var dropdownMenu;

                                    // and when you show it, move it to the body
                                    $('.datatable-responsive').on('show.bs.dropdown', function (e) {

                                        // grab the menu
                                        dropdownMenu = $(e.target).find('.dropdown-menu');

                                        // detach it and append it to the body
                                        $('body').append(dropdownMenu.detach());

                                        // grab the new offset position
                                        var eOffset = $(e.target).offset();

                                        // make sure to place it where it would normally go (this could be improved)
                                        dropdownMenu.css({
                                            'display': 'block',
                                            'top': eOffset.top + $(e.target).outerHeight(),
                                            'left': eOffset.left
                                        });
                                    });

                                    // and when you hide it, reattach the drop down, and hide it normally
                                    $('.datatable-responsive').on('hide.bs.dropdown', function (e) {
                                        $(e.target).append(dropdownMenu.detach());
                                        dropdownMenu.hide();
                                    });
                                },
                                lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                                colReorder: {
                                    fixedColumnsLeft: 1
                                },
                                stateSave: true,
                                //stateSaveParams: function (settings, data) {
                                //    for (var i = 0, ien = data.columns.length; i < ien; i++) {
                                //        delete data.columns[i].visible;
                                //        delete data.columns[i].search;
                                //    }
                                //},
                                //scrollY: '350px',
                                scrollCollapse: true,

                                keys: {
                                    className: 'focus focus-success'
                                },

                                buttons: {
                                    buttons: [
                                        {
                                            extend: 'copyHtml5',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'customer Data export',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },
                                        },
                                        {
                                            extend: 'excelHtml5',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'customer vist Data export',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },

                                        },
                                        {
                                            extend: 'pdfHtml5',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'customer Data export',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },
                                        },
                                        {
                                            extend: 'csvHtml5',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'customer Data export',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },
                                        },
                                        {
                                            extend: 'print',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'customer Data export',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },
                                        },

                                        {
                                            extend: 'colvis',
                                            text: '<i class="icon-three-bars"></i>',
                                            className: 'btn bg-blue btn-icon dropdown-toggle',
                                            columns: ':visible:not(.not-export-column)'
                                        }
                                    ]
                                }
                            });
                            // Adjust columns on window resize
                            setTimeout(function () {
                                $(window).on('resize', function () {
                                    table.columns.adjust();
                                });
                            }, 100);


                            //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                            $('.sidebar-control').on('click', function () {

                                setTimeout(function () {
                                    //alert("gii");

                                    table.columns.adjust().draw();
                                    $("#customer").resize();
                                }, 100);

                            });
                            //}

                            $('#customer').on('page.dt', function () {
                                //table.draw();
                                //alert("zzz1");
                                $("#customer").resize();

                            });

                            $('#customer').on('column-visibility.dt', function () {
                                //table.draw();
                                //alert("zzz2");
                                $("#customer").resize();

                            });

                            $('#customer').on('order.dt', function () {
                                //table.draw();
                                //alert("zzz3");
                                $("#customer").resize();

                            });


                            $('#customer').on('responsive-display.dt', function () {
                                //table.draw();
                                //alert("zzz4");
                                $("#customer").resize();

                            });


                            $('#customer').on('responsive-resize.dt', function () {
                                //table.draw();
                                //alert("zzz4");
                                $("#customer").resize();

                            });


                            //.on('order.dt', function () {
                            //    table.columns.adjust().draw();
                            //    $("#qhse").resize(); })
                            //.on('search.dt', function () {
                            //    table.columns.adjust().draw();
                            //    $("#qhse").resize(); })

                            //.on('column-visibility.dt', function () {
                            //    table.columns.adjust().draw();
                            //    $("#qhse").resize();
                            //})



                        };

                        // Select2 for length menu styling
                        var _componentSelect2 = function () {
                            if (!$().select2) {
                                console.warn('Warning - select2.min.js is not loaded.');
                                return;
                            }

                            // Initialize
                            $('.dataTables_length select').select2({
                                minimumResultsForSearch: Infinity,
                                dropdownAutoWidth: true,
                                width: 'auto'
                            });
                        };


                        //
                        // Return objects assigned to module
                        //

                        return {
                            init: function () {
                                _componentDatatableBasic();
                                _componentSelect2();
                            }
                        }
                    }();


                    // Initialize module
                    // ------------------------------

                    document.addEventListener('DOMContentLoaded', function () {
                        customer.init();
                    });



                    function Send() {
                        var selected = "";
                        var selectedSurveysId = "";
                        var selectedSurveysName = "";

                        $('#checkboxes input:checked').each(function () {
                            // selected.push($(this).attr('name'));
                            selected = selected + $(this).attr('name') + ",";
                        });

                        $('#surveys input:checked').each(function () {
                            // selected.push($(this).attr('name'));
                            selectedSurveysId = selectedSurveysId + $(this).attr('value') + ",";
                            selectedSurveysName = selectedSurveysName + $(this).attr('name') + ",";

                        });


                        //SendEmail(selected);
                        if (selected != "" && selectedSurveysName != "" && selectedSurveysId != "") {
                            if (selected.charAt(selected.length - 1) == ',') {
                                selected = selected.substr(0, selected.length - 1);
                            }


                            if (selectedSurveysName.charAt(selectedSurveysName.length - 1) == ',') {
                                selectedSurveysName = selectedSurveysName.substr(0, selectedSurveysName.length - 1);
                            }


                            if (selectedSurveysId.charAt(selectedSurveysId.length - 1) == ',') {
                                selectedSurveysId = selectedSurveysId.substr(0, selectedSurveysId.length - 1);
                            }


                            SendEmail(selected, selectedSurveysId, selectedSurveysName);
                            //jAlert("Selected Items: " + selected);
                        }
                        else if (selectedSurveysName == "" || selectedSurveysId == "")
                        {
                            bootbox.alert({
                                title: 'Surveys',
                                message: 'Please select atleast one Survey and then click Send'
                            });
                            $('#modal_survey').modal('show');

                        }
                        else {
                           //alert("Please select atleast one customer and then click Send");
                            bootbox.alert({
                                title: 'Try Again',
                                message: 'Please select atleast one customer and then click Send'
                            });
                        }
                    }

            function SendEmail(sEmailId, selectedSurveysId, selectedSurveysName) {
                        jQuery.ajax({
                            url: '@Url.Action("EmailFeedbackform", "CustomerMgmt")',
                type: 'POST',
                dataType: "json",
                            data: { 'EmailIds': sEmailId, 'selectedSurveysId': selectedSurveysId, 'selectedSurveysName': selectedSurveysName},
                success: function (result) {
                    //jAlert("Email sent successfully");
                    //window.location.href =
                    //    window.location.protocol + "//" +
                    //    window.location.host +
                    //    window.location.pathname;
                    window.location.reload();
                }
            });
        }

                    function DeleteItems(CustID) {
                        bootbox.confirm({
                            title: 'Confirm dialog',
                            message: 'Are you Sure you want to Delete the current Record?',
                            buttons: {
                                confirm: {
                                    label: 'Yes',
                                    className: 'btn-primary'
                                },
                                cancel: {
                                    label: 'Cancel',
                                    className: 'btn-link'
                                }
                            },
                            callback: function (r) {
                                if (r == true) {
                                    jQuery.ajax({

                                        url: '@Url.Action("CustomerDelete", "CustomerMgmt")',
                                type: 'POST',
                                dataType: "json",
                                data: { 'CustID': CustID },
                                success: function (result) {


                                    //// Add new params to the querystring dictionary


                                    window.location.href =
                                        window.location.protocol + "//" +
                                        window.location.host +
                                        window.location.pathname

                                }
                            });
                            return true;
                        }
                        else if (r == false) {
                            bootbox.hideAll();
                            return false;
                        }

                    }
                });
                    }

                function getDetails() {
                var branch_name = document.getElementById("branch_name").value;

                   var params = {
                                branch_name: branch_name
                            };
                            queryString = $.param(params);

                            window.location.href =
                                window.location.protocol + "//" +
                                window.location.host +
                                window.location.pathname +
                               '?' + queryString;

            }
        </script>

    }
