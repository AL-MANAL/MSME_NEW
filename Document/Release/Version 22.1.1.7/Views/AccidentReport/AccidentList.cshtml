@using PagedList;
@using PagedList.Mvc;

@model List<ISOStd.Models.AccidentReportModels>

@{
    ViewBag.Title = "AccidentList"; 
     Layout = "~/Views/Shared/_Layout.cshtml";
    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
}

@section featured {
    <div class="page-header page-header-light">
        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>
        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">
                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <span class="breadcrumb-item active">Incident Report</span>
                </div>
                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>   
    }

<style>
    .hidden {
        display: none !important;
    }
</style>

<div class="card">
    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">Incident Report</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>
            </div>
        </div>
    </div>
   
        <div class="card-body">
            <a class="btn btn-outline bg-orange text-orange border-orange btn-ladda btn-ladda-progress ladda-button" data-style="radius" href='@Url.Action("AddAccidentReport", "AccidentReport")' title="Add New">
                <span class="ladda-label">Add New</span>
                <span class="ladda-spinner"></span>
            </a>
        </div>
    
    <div class="card-body">
        <div class="options d-flex flex-fill">
            @using (Html.BeginForm("AccidentList", "AccidentReport", FormMethod.Post, new { id = "form1", name = "form1", style = "width:25%" }))
            {
                if (ViewBag.Branch != null)
                {
                    <select class="form-control select-search select2-hidden-accessible" data-fouc id="branch_name" name="branch_name" onchange="getDetails()">
                        <option value='' hidden>Division</option>
                        @if (ViewBag.Branch != null)
                        {
                            foreach (var item in ViewBag.Branch)
                            {
                                if (item.Value == ViewBag.Branch_name)
                                {
                                    <option value='@item.Value' selected>@item.Text</option>
                                }
                                else
                                {
                                    <option value='@item.Value'>@item.Text</option>
                                }
                            }
                        }
                    </select>
                }
            }
        </div>
    </div>

    <table class="table table-bordered table-striped table-hover datatable-responsive" id="Accident">

        <thead>

            <tr>
                <th>
                    Sl No
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().report_no)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().acc_date)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().reported_date)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().reported_by)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().branch)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Department)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().location)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().details)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().upload)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().damage)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().invest_need)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().invest_reportno)
                </th>
                @*<th class="not-export-column">Edit</th>
                <th class="not-export-column">Delete</th>*@
                <th data-priority="2" class="text-center not-export-column">Actions</th>

            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Count() > 0)
            {
                int i = 0;
                foreach (var item in Model)
                {
                    i = i + 1;
            <tr>
                <td>
                    @Html.ActionLink(i.ToString(), "AccidentReportDetails", new { id_accident_rept = item.id_accident_rept }, new { data_toggle = "popover", data_trigger = "hover", id = item.id_accident_rept, onclick = "HyperLinkProgressIconFunction()" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.report_no)
                </td>
                <td>
                    @if (item.acc_date > Convert.ToDateTime("01/01/0001"))
                    {
                        @item.acc_date.ToString("dd/MM/yyyy")
                    }
                </td>
                <td>
                    @if (item.reported_date > Convert.ToDateTime("01/01/0001"))
                    {
                        @item.reported_date.ToString("dd/MM/yyyy")
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.reported_by)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.branch)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Department)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.location)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.details)
                </td>
                <td>
                    @if (item.upload != "" && item.upload != null && item.upload.Length > 0)
                    {
                        foreach (var docs in item.upload.Trim(',').Split(','))
                        {
                            <a class="text-orange" href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank">Preview</a><br />
                        }
                    }
                    else
                    {

                        <span class="badge badge-info">No File attached</span>
                    }
                   
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.damage)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.invest_need)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.invest_reportno)
                </td>
                <td class="text-center">
                    <div class="list-icons">
                        <div class="list-icons-item dropdown">
                            <a href="#" class="list-icons-item caret-0 dropdown-toggle" data-toggle="dropdown">
                                <i class="icon-gear mr-2"></i>
                            </a>

                            <div class="dropdown-menu dropdown-menu-right">
                                @using (Html.BeginForm("AccidentReportDetails", "AccidentReport", FormMethod.Post, new { id = "form22", name = "form22" }))
                                {
                                @Html.AntiForgeryToken()
                                <input type="hidden" id="id_accident_rept" name="id_accident_rept" value="@item.id_accident_rept" />
                                <button class="dropdown-item">
                                    <i class="icon-printer2"></i>Report
                                </button>
                                }
                                <a class="dropdown-item" href='@Url.Action("AccidentReportEdit", "AccidentReport", new { id_accident_rept  = item.id_accident_rept  })' title="Edit Accident Report details" onclick="HyperLinkProgressIconFunction()">
                                    <i class="icon-pencil7"></i>Edit
                                </a>

                                <div class="dropdown-divider"></div>
                                <span class="dropdown-item text-center" title="Delete" onclick="DeleteItems(@item.id_accident_rept)" style="cursor:pointer;"><i class="icon-bin"></i>Delete</span>
                            </div>
                        </div>
                    </div>
                </td>

                @*<td>

                    <a href='@Url.Action("AccidentReportEdit", "AccidentReport", new { id_accident_rept  = item.id_accident_rept  })' title="Edit Accident Report details" onclick="HyperLinkProgressIconFunction()">
                        <span class="badge badge-info">Edit</span>
                    </a>
                </td>
                <td>
                    <span class="badge badge-danger" title="Delete Document" onclick="DeleteItems(@item.id_accident_rept)" style="cursor:pointer;">Delete</span>
                </td>*@
            </tr>
                }
            }

        </tbody>
    </table>
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        $(document).ready(function () {

        @if (TempData["alertdata"] != null ) {

           @: new Noty({
           @:     text: '@TempData["alertdata"]',
           @:     type: 'error'
           @: }).show();
        }

        @if (@TempData["Successdata"] != null ) {

        @:    new Noty({
         @:       text: '@TempData["Successdata"]',
         @:       type: 'success'
         @:   }).show();
        }
    });
    //zzz----


              function setData(id) {

                var set_data = '';
                var element = $(this);
                var id = element.attr("id");
                $.ajax({
                     url: '@Url.Action("AccidentReportInfo", "AccidentReport")',
                    methos: "post",
                    async: false,
                    data: { id: id },
                    success: function (data) {
                        set_data = data;
                    }

                });

                return set_data;
            }

            var Accident = function () {

                @*var ShowEdit = @(Obj.GetCurrentUserSession().ObservCard.Contains("3") ? "true" : "false");
                var ShowDel = @(Obj.GetCurrentUserSession().ObservCard.Contains("5") ? "true" : "false");*@
                //
                // Setup module components
                //

                // Basic Datatable examples
                var _componentDatatableBasic = function () {
                    if (!$().DataTable) {
                        console.warn('Warning - datatables.min.js is not loaded.');
                        return;
                    }

                    //Setting datatable defaults
                    $.extend($.fn.dataTable.defaults, {
                        autoWidth: false,
                        responsive: true,
                        columnDefs: [{
                            orderable: false,
                            //width: 100,
                            targets: 'not-export-column'

                        }],
                        responsivePriority: 2, targets: -1,
                        colReorder: false,
                        dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                        //dom: 'lBfrtip',
                        language: {
                            search: '<span>Filter:</span> _INPUT_',
                            searchPlaceholder: 'Type to filter...',
                            lengthMenu: '<span>Show:</span> _MENU_',
                            paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                        }
                    });

                @*var myClass = "";
                var Delclass= @(Obj.GetCurrentUserSession().ObservCard.Contains("4") ? "true" : "false");
                if (Delclass == false) { myClass = 'hidden'  };*@

                    var table = $('#Accident').DataTable({
                        drawCallback: function () {
                            $('[data-toggle="popover"]').popover({
                                html: true,
                                content: setData,
                                container: 'body'
                                //data: setData,
                            });
                            var dropdownMenu;

                            // and when you show it, move it to the body                                     
                            $('.datatable-responsive').on('show.bs.dropdown', function (e) {

                                // grab the menu        
                                dropdownMenu = $(e.target).find('.dropdown-menu');

                                // detach it and append it to the body
                                $('body').append(dropdownMenu.detach());

                                // grab the new offset position
                                var eOffset = $(e.target).offset();

                                // make sure to place it where it would normally go (this could be improved)
                                dropdownMenu.css({
                                    'display': 'block',
                                    'top': eOffset.top + $(e.target).outerHeight(),
                                    'left': eOffset.left
                                });
                            });

                            // and when you hide it, reattach the drop down, and hide it normally                                                   
                            $('.datatable-responsive').on('hide.bs.dropdown', function (e) {
                                $(e.target).append(dropdownMenu.detach());
                                dropdownMenu.hide();
                            });
                        },
                        lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                        colReorder: {
                            fixedColumnsLeft: 1
                        },
                        stateSave: true,
                        //stateSaveParams: function (settings, data) {
                        //    for (var i = 0, ien = data.columns.length; i < ien; i++) {
                        //        delete data.columns[i].visible;
                        //        delete data.columns[i].search;
                        //    }
                        //},
                        //scrollY: '350px',
                        scrollCollapse: true,


                        keys: {
                            className: 'focus focus-success'
                        },

                        buttons: {
                            buttons: [
                                {
                                    extend: 'copyHtml5',
                                    //className: myClass,
                                   // className: 'btn btn-light',
                                    title: 'Accident Report Data export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },
                                },
                                {
                                    extend: 'excelHtml5',
                                    //className: myClass,
                                  //  className: 'btn btn-light',
                                    title: 'Accident Report Data export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },

                                },
                                {
                                    extend: 'pdfHtml5',
                                    //className: myClass,
                                  //  className: 'btn btn-light',
                                    title: 'Accident Report Data export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },
                                },
                                {
                                    extend: 'csvHtml5',
                                   // className: myClass,
                                   // className: 'btn btn-light',
                                    title: 'Accident Report Data export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },
                                },
                                {
                                    extend: 'print',
                                    //className: myClass,
                                    //className: 'btn btn-light',
                                    title: 'Accident Report Data export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },
                                },

                                {
                                    extend: 'colvis',
                                    text: '<i class="icon-three-bars"></i>',
                                    className: 'btn bg-blue btn-icon dropdown-toggle',
                                    columns: ':visible:not(.not-export-column)'
                                }
                            ]
                        }

                    });
                    // Adjust columns on window resize
                    setTimeout(function () {
                        $(window).on('resize', function () {
                            table.columns.adjust();
                        });
                    }, 100);


                    //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                    $('.sidebar-control').on('click', function () {

                        setTimeout(function () {
                            //alert("gii");

                            table.columns.adjust().draw();
                            $("#Accident").resize();
                        }, 100);

                    });
                    //}

                    $('#Accident').on('page.dt', function () {
                        //table.draw();
                        //alert("zzz1");
                        $("#Accident").resize();

                    });

                    $('#Accident').on('column-visibility.dt', function () {
                        //table.draw();
                        //alert("zzz2");
                        $("#Accident").resize();

                    });

                    $('#Accident').on('order.dt', function () {
                        //table.draw();
                        //alert("zzz3");
                        $("#Accident").resize();

                    });


                    $('#Accident').on('responsive-display.dt', function () {

                        $("#Accident").resize();

                    });


                    $('#Accident').on('responsive-resize.dt', function () {

                        $("#Accident").resize();

                    });
                };


                // Select2 for length menu styling
                var _componentSelect2 = function () {
                    if (!$().select2) {
                        console.warn('Warning - select2.min.js is not loaded.');
                        return;
                    }

                    // Initialize
                    $('.dataTables_length select').select2({
                        minimumResultsForSearch: Infinity,
                        dropdownAutoWidth: true,
                        width: 'auto'
                    });
                };


                //
                // Return objects assigned to module
                //

                return {
                    init: function () {
                        _componentDatatableBasic();
                        _componentSelect2();
                    }
                }
            }();


            // Initialize module
            // ------------------------------

            document.addEventListener('DOMContentLoaded', function () {
                Accident.init();
            });



        function DeleteItems(id_accident_rept) {
            bootbox.confirm({
                title: 'Confirm dialog',
                message: 'Are you Sure you want to Delete the current Record?',
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-primary'
                    },
                    cancel: {
                        label: 'Cancel',
                        className: 'btn-link'
                    }
                },
                callback: function (r) {

                  if (r == true) {
                       jQuery.ajax({
                           url: '@Url.Action("AccidentReportDelete", "AccidentReport")',
                           type: 'POST',
                           dataType: "json",
                           data: { 'id_accident_rept': id_accident_rept },
                        success: function (result) {


                            //// Add new params to the querystring dictionary


                            window.location.href =
                                window.location.protocol + "//" +
                                window.location.host +
                                window.location.pathname

                        }
                    });
                    return true;
                }
                else if (r == false) {
                        bootbox.hideAll();
                        return false;
                    }

                }
            });
        }

     function getDetails() {
                var branch_name = document.getElementById("branch_name").value;

                   jQuery.ajax({
                        url: '@Url.Action("AccidentListSearch", "AccidentReport")',
                        type: 'POST',
                        dataType: "json",
                        data: { 'branch_name': branch_name },
                        success: function (result) {
                            var params = {
                                branch_name: branch_name
                            };
                            queryString = $.param(params);

                            window.location.href =
                                window.location.protocol + "//" +
                                window.location.host +
                                window.location.pathname +
                               '?' + queryString;

                        }
                    });
            }


    </script>

}




