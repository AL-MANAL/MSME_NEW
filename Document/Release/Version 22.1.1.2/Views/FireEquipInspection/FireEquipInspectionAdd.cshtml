@model ISOStd.Models.FireEquipInspectionModels

@{
    ViewBag.Title = "AddFireEquipInspection";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section featured {    
    <div class="page-header page-header-light">
        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>
        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("FireEquipInspectionList", "FireEquipInspection", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Fire Equip Inspection List</span>
                    </a>
                    <span class="breadcrumb-item active"> Add Fire Equip Inspection</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            <div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


}




@using (Html.BeginForm("FireEquipInspectionAdd", "FireEquipInspection", FormMethod.Post,
                         new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Add Fire Equip Inspection</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>

                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">

                <table class="table table-lg">

                    <tbody>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.Fire_DateTime)

                            </td>
                            <td class="col">

                                <input class="form-control" type="date" id="Fire_DateTime" name="Fire_DateTime" required />
                                <p>
                                    Hr: @Html.DropDownList("PlanTimeInHour", new SelectList(ViewBag.PlanTimeInHour, "PlanTimeInHour"), new { @class = "select-fixed-single" })
                                    Min: @Html.DropDownList("PlanTimeInMin", new SelectList(ViewBag.PlanTimeInMin, "PlanTimeInMin"), new { @class = "select-fixed-single" })
                                </p>

                            </td>

                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.FireNext_DateTime)

                            </td>
                            <td class="col">

                                <input class="form-control" type="date" id="FireNext_DateTime" name="FireNext_DateTime" required onchange="checkDate();" />

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.Location)<text style="color:red;">*</text>

                            </td>
                            <td class="col">

                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="Location" name="Location" onchange="getReportNo()" required>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.Location != null)
                                    {
                                        foreach (var item in ViewBag.Location)
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                </select>


                            </td>

                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.Project)

                            </td>
                            <td class="col">

                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="Project" name="Project" required>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.Project != null)
                                    {
                                        foreach (var item in ViewBag.Project)
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                </select>

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.ReportNo)

                            </td>
                            <td class="col">

                                <input class="form-control" type="text" id="ReportNo" name="ReportNo" readonly style="background: #efefe6;width:220px;" />

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.Smoke_Detector)<text style="color:red;">*</text>

                            </td>
                            <td class="col">

                                <input class="form-control" type="number" id="Smoke_Detector" name="Smoke_Detector" required min="1" max="30" />


                            </td>

                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.Smoke_Detector_Remarks)<text style="color:red;">*</text>

                            </td>
                            <td class="col">

                                @Html.TextAreaFor(model => model.Smoke_Detector_Remarks, new { @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position" })


                            </td>

                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.Fire_Alarm)<text style="color:red;">*</text>

                            </td>
                            <td class="col">

                                <input class="form-control" type="number" id="Fire_Alarm" name="Fire_Alarm" required min="1" max="30" />


                            </td>

                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.Fire_Alarm_Remarks)<text style="color:red;">*</text>

                            </td>
                            <td class="col">

                                @Html.TextAreaFor(model => model.Fire_Alarm_Remarks, new { @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position" })


                            </td>

                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.Fire_Water_Pumps)<text style="color:red;">*</text>

                            </td>
                            <td class="col">

                                <input class="form-control" type="number" id="Fire_Water_Pumps" name="Fire_Water_Pumps" required min="1" max="30" />


                            </td>

                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.Fire_Water_Pumps_Remarks)<text style="color:red;">*</text>

                            </td>
                            <td class="col">

                                @Html.TextAreaFor(model => model.Fire_Water_Pumps_Remarks, new { @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position" })


                            </td>

                        </tr>

                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.Fire_Box_No)<text style="color:red;">*</text>

                            </td>
                            <td class="col">

                                <input class="form-control" type="text" id="Fire_Box_No" name="Fire_Box_No" required />


                            </td>
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.Fire_Box_No_Remarks)<text style="color:red;">*</text>

                            </td>
                            <td class="col">

                                @Html.TextAreaFor(model => model.Fire_Box_No_Remarks, new { @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position" })


                            </td>

                        </tr>

                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.Fire_Box_No_Location)<text style="color:red;">*</text>

                            </td>
                            <td class="col">

                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="Fire_Box_No_Location" name="Fire_Box_No_Location" required="required">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.FireLocation != null)
                                    {
                                        foreach (var item in ViewBag.FireLocation)
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                </select>


                            </td>

                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.Fire_Box_No_Type)<text style="color:red;">*</text>

                            </td>
                            <td class="col">

                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="Fire_Box_No_Type" name="Fire_Box_No_Type" required="required">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.FireType != null)
                                    {
                                        foreach (var item in ViewBag.FireType)
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                </select>


                            </td>

                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.Fire_Hydrants)<text style="color:red;">*</text>

                            </td>
                            <td class="col">

                                <input class="form-control" type="number" id="Fire_Hydrants" name="Fire_Hydrants" required />

                            </td>
                        </tr>

                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.Fire_Box_No_Type_Remarks)<text style="color:red;">*</text>

                            </td>
                            <td class="col">

                                @Html.TextAreaFor(model => model.Fire_Box_No_Type_Remarks, new { @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position" })

                            </td>
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.Fire_Hydrants_Remarks)<text style="color:red;">*</text>

                            </td>
                            <td class="col">

                                @Html.TextAreaFor(model => model.Fire_Hydrants_Remarks, new { @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position" })

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.upload)                                
                            </td>
                            <td class="col">
                                <input type="file" name="upload" id="upload" onchange="FileFormatValidation(this)" accept=".pdf,.xls,.xlsx,.doc,.docx,image/*"  class="bootstrap-uploader" data-fouc multiple/>                                
                            </td>
                        </tr>

                    </tbody>

                </table>
            </div>

        </div>

        <div class="card-footer bg-white d-flex justify-content-between align-items-center">

            @Html.ActionLink("Back to List", "FireEquipInspectionList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })

            <button class="btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400" type="submit" value="Save" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Save</button>

        </div>
    </div>
   


}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
                                   //----zzz
                    $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
                    });

    //zzz----
        function FileFormatValidation(file) {
            var ext = file.value.split(".").pop().toLowerCase();
            if ($.inArray(ext, ["doc", "pdf", "docx", "jpg", "jpeg", "gif", "png"]) == -1) {
                file.value = "";
                jAlert("Invalid file format, please upload only doc, pdf, docx, jpg, jpeg, gif, png format");
            }
        }


        function checkDate() {


            var dt2 = document.getElementById("FireNext_DateTime").value;
            var dt1 = document.getElementById("Fire_DateTime").value;

            if (new Date(dt1).getTime() > new Date(dt2).getTime()) {

                bootbox.alert({
                    title: 'Follow up',
                    message: 'Follow up date cannot be before Planned date.'
                });
                $('#FireNext_DateTime').val("");
            }
        }
         function getReportNo()
           {
                var Location = $('#Location :selected').text();

                if (Location != "Select") {

                jQuery.ajax({
                    url: '@Url.Action("FunGetReportNo", "FireEquipInspection")',
                    type: 'POST',
                    dataType: "json",

                    data: { 'Location': Location },
                    success: function (result) {
                        document.getElementById("ReportNo").value = result;
                    }
                });
              }
           }

    </script>
}



