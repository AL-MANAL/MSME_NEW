@model ISOStd.Models.VehiclePassModels

@{
    ViewBag.Title = "InsuranceEdit";
}

<div class="groupedassets margin10">
    <span class="groupedassetshead margin10 onestphdcolor">Insurance Edit</span>
</div>

 <div id="divmsg">
        @if (TempData["alertdata"] != null)
        {
            <span class="errMsg" style="color: red;font-weight: bold;">@TempData["alertdata"]</span>
        }
        @if (TempData["Successdata"] != null)
        {
            <span class="errMsg" style="color: green; font-weight: bold;">@TempData["Successdata"]</span>
        }
    </div>

@using (Html.BeginForm("InsuranceEdit", "EquipmentCategory", FormMethod.Post,
                         new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <input type="hidden" id="id_vehicle_pass" name="id_vehicle_pass" value="@Model.id_vehicle_pass"/>
    
    <fieldset>
        <legend>IssueEdit</legend>
        <table id="tabcontent">
            <tr>                
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Insurance_type)<text style="color:red;">*</text>
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        <select id="Insurance_type" name="Insurance_type" required>
                            <option value='' hidden>Select</option>
                            @if (ViewBag.InsuranceType != null)
                            {
                                foreach (var item in ViewBag.InsuranceType)
                                {
                                    if (item.Text == Model.Insurance_type)
                                    {
                                        <option value='@item.Value' selected>@item.Text</option>
                                    }
                                    else
                                    {
                                        <option value='@item.Value'>@item.Text</option>
                                    }
                                }
                            }
                        </select>        
                    </div>
                </td>
                 <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Upload)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                       <input type="file" name="Upload" id="Upload" value="" onchange="FileFormatValidation(this)" accept=".pdf" style="height: 38px;"/>
                         @if (Model.Upload != "")
                         {
                              <a href='@Url.Action("DisplayDocument", "Reports", new { Document = Model.Upload })' target="_blank">Preview</a>                            
                         }
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Mulki_upload)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                       <input type="file" name="Mulki_upload" id="Mulki_upload" value="" onchange="FileFormatValidation(this)" accept=".pdf" style="height: 38px;"/>
                         @if (Model.Upload != "")
                         {
                              <a href='@Url.Action("DisplayDocument", "Reports", new { Document = Model.Mulki_upload })' target="_blank">Preview</a>                            
                         }
                    </div>
                </td>
                  <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Insurance_date)
                    </div>
                </td>
               <td>
                   <input type="text" id="Insurance_date" name="Insurance_date" value="@Model.Insurance_date.ToString("dd/MM/yyyy")" style="width:150px" />
               </td>
            </tr>
           <tr>
               <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Insurance_expdate)
                    </div>
                </td>
               <td>
                   <input type="text" id="Insurance_expdate" name="Insurance_expdate" value="@Model.Insurance_expdate.ToString("dd/MM/yyyy")" style="width:150px" />
               </td>
               <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Insurance_cover)
                           
                        </div>
                    </td>
                    <td>
                          <input type="text" id="Insurance_cover" name="Insurance_cover" value="@Model.Insurance_cover"/>
                        
                    </td>
           </tr>
            <tr>
                <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Company)
                           
                        </div>
                    </td>
                    <td>
                          <input type="text" id="Company" name="Company" value="@Model.Company"/>
                        
                    </td>
            </tr>
               
        </table>
    </fieldset>
    
    <div style="width: 100%; text-align: center;">
        @Html.ActionLink("Back to List", "InsuranceList", null, new {id_equipment=Model.id_equipment.ToString()},new {Class="ActionLink", onclick="HyperLinkProgressIconFunction()"})
        <input type="submit" value="Update" onclick="ProgressIconFunction('#form1')"/>
    </div>
}

@section Scripts {
     <script>
        
         function FileFormatValidation(file) {
             var ext = file.value.split(".").pop().toLowerCase();
             if ($.inArray(ext, ["pdf"]) == -1) {
                 file.value = "";
                 jAlert("Invalid file format, please upload only pdf format");
             }
         }
         $(function () {
             $('#Insurance_date').datepicker({
                 dateFormat: "dd/mm/yy",
                 buttonImageOnly: true,
                 buttonImage: '../Images/Calender.png',
                 showOn: 'both',
                 changeMonth: true,
                 changeYear: true,
                 gotoCurrent: true
             });
             $('#Insurance_expdate').datepicker({
                 dateFormat: "dd/mm/yy",
                 buttonImageOnly: true,
                 buttonImage: '../Images/Calender.png',
                 showOn: 'both',
                 changeMonth: true,
                 changeYear: true,
                 gotoCurrent: true
             });
         });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
