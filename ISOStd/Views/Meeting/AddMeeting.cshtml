@model ISOStd.Models.MeetingModels

@{
    ViewBag.Title = "AddMeeting";
}

@section featured {
    <div class="page-header page-header-light">
        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">
                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("MeetingList", "Meeting", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Meetings Schedule</span>
                    </a>
                    <span class="breadcrumb-item active">Add Meetings Schedule </span>
                </div>
                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">
                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>
                        <div class="dropdown-menu dropdown-menu-right">
                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}

@using (Html.BeginForm("AddMeeting", "Meeting", FormMethod.Post,
                         new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)


    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">@*MOM Details*@Add Meetings Schedule</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">

                <table id="tabcontent" class="table table-lg">
                    <tbody>
                        <tr class="row">
                            @*  <td class="col-xs-3 col-md-2">
                @Html.LabelFor(model => model.meeting_ref)<text style="color:red;">*</text>
            </td>
            <td class="col">
                @Html.EditorFor(model => model.meeting_ref, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.meeting_ref)
            </td>*@
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.meeting_date)
                            </td>
                            <td class="col-xs-3 col-md-3">
                                <input class="form-control" type="date" id="meeting_date" name="meeting_date" required />
                                @Html.ValidationMessageFor(model => model.meeting_date)
                                <p>
                                    Hr: @Html.DropDownList("PlanTimeInHour", new SelectList(ViewBag.PlanTimeInHour, "PlanTimeInHour"), new { @class = "form-control" })
                                    Min: @Html.DropDownList("PlanTimeInMin", new SelectList(ViewBag.PlanTimeInMin, "PlanTimeInMin"), new { @class = "form-control" })
                                </p>
                            </td>
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.NotificationPeriod)
                            </td>
                            <td class="col">
                                <div class="form-group form-group-float">
                                    <select class="form-control select-search select2-hidden-accessible" data-fouc id="NotificationPeriod" name="NotificationPeriod">
                                        @if (ViewBag.NotificationPeriod != null)
                                        {
                                            foreach (var item in ViewBag.NotificationPeriod)
                                            {
                                                <option value='@item.Key'>@item.Value</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="form-group form-group-float">
                                    <input class="form-control" type="number" id="NotificationValue" name="NotificationValue" value="0" required @*max="3"*@ />
                                    <span class="form-text text-muted"><code>(Alert on or before Target date)</code></span>
                                </div>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.AttendeesUser)<text style="color:red;">*</text>
                            </td>
                            <td class="col">
                                <select class="form-control select-fixed-multiple" data-fouc id="AttendeesUser" name="AttendeesUser" required="required" multiple>
                                    @if (ViewBag.EmpLists != null)
                                    {
                                        foreach (var item in ViewBag.EmpLists)
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(model => model.AttendeesUser)
                            </td>
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.Venue)<text style="color:red;">*</text>
                            </td>
                            <td class="col">
                                @Html.TextAreaFor(model => model.Venue, new { @required = "required", @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position" })
                                @Html.ValidationMessageFor(model => model.Venue)
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.ext_attendees)
                            </td>
                            <td class="col">
                                <input type="text" class="form-control" id="ext_attendees" name="ext_attendees" />
                                @*@Html.ValidationMessageFor(model => model.ext_attendees)*@
                            </td>
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.ext_email)
                            </td>
                            <td class="col">
                                <input type="text" class="form-control" id="ext_email" name="ext_email" />
                                @*@Html.ValidationMessageFor(model => model.ext_email)*@
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                MeetingType<text style="color:red;">*</text>
                            </td>
                            <td class="col">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="meeting_type_desc" name="meeting_type_desc" required onchange="PopulateAgenda()">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.MeetingType != null)
                                    {
                                        foreach (var item in ViewBag.MeetingType)
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(model => model.meeting_type_desc)
                                <input type="hidden" id="AgendaId" name="AgendaId" />
                            </td>
                            <td class="col-xs-3 col-md-2">
                                Last Meeting Ref
                            </td>
                            <td class="col">
                                <div id="PreviousMeeting" style="display: none;">
                                    <input type="hidden" id="last_meeting_id" name="last_meeting_id" />
                                    <a href="#" id="last_meeting_idRefLink" target="_blank"></a>
                                </div>
                            </td>
                        </tr>


                    </tbody>
                </table>
            </div>

            <div id="dvAgendaItems" style="display: none;">
                <div id="divAgendasTitle" style="display: none; font-weight: bold;">Agendas</div>

                <div id="divAgendaschk" style="display: none; font-weight: bold;">
                     <input type="checkbox" name="all" id="checkall" />Check All
                </div>
                <br />

                <table id="tbl_Agenda" class="table table-lg"></table>
            </div>
        </div>

        <div class="card-footer bg-white d-flex justify-content-between align-items-center">
           
            @Html.ActionLink("Back to List", "MeetingList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })

            <button type="submit" id="btnCreate" value="Save" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Save</button>

        
        </div>
    </div>   

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">              
                          //----zzz
    $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }  
    });
    //zzz----



           function PopulateAgenda() {
               var MeetingTypeId = $('#meeting_type_desc').val();

               jQuery.ajax({
                   url: '@Url.Action("GetAgendaList", "Meeting")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'sMeetingTypeId': MeetingTypeId },
                    success: function (result) {
                        var table = document.getElementById("tbl_Agenda");
                        document.getElementById("dvAgendaItems").style.display = "";
                        document.getElementById("divAgendasTitle").style.display = "";
                        document.getElementById("divAgendaschk").style.display = "";


                        while (table.rows.length > 0) {
                            table.deleteRow(0);
                        }

                        if (result != "") {

                            var theaderRow = table.insertRow();
                            theaderRow.className = "row";
                            theaderRow.style = "background-color: #4cc4dd; color: #fff; font-weight: bold;";
                            var cellth0 = theaderRow.insertCell(0);
                            var cellth1 = theaderRow.insertCell(1);
                            cellth0.className = "col-6";

                            cellth1.className = "col-6";
                            cellth0.innerHTML = "Name";
                            cellth1.innerHTML = "Details";

                            var list = result;
                            $.each(list, function (index, item) {

                                // Create an empty <tr> element and add it to the 1st position of the table:
                                var row = table.insertRow();
                                row.className = "row";
                                // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
                                var cell0 = row.insertCell(0);
                                var cell1 = row.insertCell(1);
                                cell0.className = "col-6";
                                cell1.className = "col-6";
                                
                                var AgendaName = item.Text;
                                var Id = item.Value;

                                var data = item.Text;
                                var dataarray = new Array();
                                dataarray = data.split("_");

                                cell0.innerHTML = "<input type='checkbox' id='Agendas' name='Agendas' value='" + Id + "' required />" + dataarray[0];
                                //cell0.innerHTML = " <input type='text' id='item_desc " + Id + "' name='item_desc " + Id + "' value='" + dataarray[0] + "'/>";
                                cell1.innerHTML = "<input type='hidden' id='Agenda_Details' name='Agenda_Details' value='" + dataarray[1] + "' />" + dataarray[1];
                            });
                        }
                        else {  
                            bootbox.alert({
                                title: 'Agenda',
                                message: 'No Agenda exists, please add agenda and then try again.'
                            });
                        }
                    }
                });

                GetPreviousMeetingRef(MeetingTypeId);
            }


            function GetPreviousMeetingRef(MeetingTypeId) {

                //var MeetingTypeId = $('#MeetingType').val();
                //alert(AuditDepartment);
                jQuery.ajax({
                    url: '@Url.Action("GetPreviousMeetingRef", "Meeting")',
                type: 'POST',
                dataType: "json",
                data: { 'sMeetingTypeId': MeetingTypeId },
                success: function (result) {
                    if (result != "") {
                        document.getElementById("PreviousMeeting").style.display = "";

                        document.getElementById("last_meeting_idRefLink").href = "/Meeting/MeetingDetails?meeting_ref=" + result;
                        document.getElementById("last_meeting_idRefLink").innerText = result;
                        document.getElementById("last_meeting_id").value = result;
                    }
                }
            });
        }

        $('#checkall:checkbox').change(function () {
            if ($(this).prop("checked")) $('input:checkbox').prop('checked', 'checked');
            else $('input:checkbox').prop('checked', false);
        });
    </script>
}
