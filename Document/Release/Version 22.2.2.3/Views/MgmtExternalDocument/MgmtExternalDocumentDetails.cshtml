@model ISOStd.Models.MgmtExternalDocumentModels

@{
    ViewBag.Title = "MgmtExternalDocumentDetails";
    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
}

@section featured {
    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("MgmtExternalDocumentList", "MgmtExternalDocument", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">External Documents</span>
                    </a>
                    <span class="breadcrumb-item active"> External Documents Details</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
 }

    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">External Documents Details</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>

                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="mt-2 mt-sm-0">
                @Html.ActionLink("Back to List", "MgmtExternalDocumentList", null, new { @class = "btn btn-outline bg-orange text-orange border-orange", onclick = "HyperLinkProgressIconFunction()" })
                @if (Obj.GetCurrentUserSession().ExternalDoc.Contains("3"))
                {
                    <a class="btn bg-orange btn-labeled btn-labeled-left" data-style="radius" href='@Url.Action("MgmtExternalDocumentEdit", "MgmtExternalDocument", new { Mgmt_doc_External_Id = Model.Mgmt_doc_External_Id })' title="Edit" onclick="HyperLinkProgressIconFunction()">
                        <b>  <i class="icon-add-to-list"></i></b> Edit
                    </a>
                }
            </div>
        </div>

        <div class="container-fluid">
            <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                <thead></thead>
                <tbody>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.branch)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.branch)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.DeptId)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.DeptId)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Location)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Location)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.DocName)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.DocName)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.DocRef)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.DocRef)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Doc_Origin)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Doc_Origin)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.IssueNo)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.IssueNo)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        @*<td>
                <div class="display-label">
                    @Html.DisplayNameFor(model => model.RevNo)
                </div>
            </td>
            <td>
                <div class="display-field">
                    @Html.DisplayFor(model => model.RevNo)
                </div>
            </td>*@
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded ">
                                @Html.DisplayNameFor(model => model.DocDate)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @if (Model.DocDate != null && Model.DocDate > Convert.ToDateTime("01/01/0001"))
                                {
                                    @Html.Label(Model.DocDate.ToString("dd/MM/yyyy"))
                                }
                            </p>
                        </td>

                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded ">
                                @Html.DisplayNameFor(model => model.Eve_Date)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @if (Model.Eve_Date != null && Model.Eve_Date > Convert.ToDateTime("01/01/0001"))
                                {
                                    @Html.Label(Model.Eve_Date.ToString("dd/MM/yyyy"))
                                }
                            </p>
                        </td>
                    </tr>
                    @*<tr>*@
                    @*<td>
            <div class="display-label">
                @Html.DisplayNameFor(model => model.DeptId)
            </div>
            </td>
        <td>
            <div class="display-field">
                @Html.DisplayFor(model => model.DeptId)
            </div>
        </td>*@
                    @* <td>
            <div class="display-label">
                @Html.DisplayNameFor(model => model.CustodyOf)
            </div>
        </td>
        <td>
            <div class="display-field">
                @Html.DisplayFor(model => model.CustodyOf)
            </div>
        </td>*@



                    @*    <td>
            <div class="display-label">
                @Html.DisplayNameFor(model => model.MethodOf_Updating)
            </div>
        </td>
        <td>
            <div class="display-field">
                @Html.DisplayFor(model => model.MethodOf_Updating)
            </div>
        </td>*@
                    @*</tr>*@
                    <tr class="row">
                        @*<td>
                <div class="display-label">
                    @Html.DisplayNameFor(model => model.Updated_Thru)
                </div>
            </td>
            <td>
                <div class="display-field">
                    @Html.DisplayFor(model => model.Updated_Thru)
                </div>
            </td>*@
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Person_Responsible)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Person_Responsible)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.NotificationPeriod)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.NotificationValue)
                                @Html.DisplayFor(model => model.NotificationPeriod)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.UploadedDate)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.UploadedDate)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.UploadedBy)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.UploadedBy)
                            </p>

                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">

                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Remarks)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Remarks)
                            </p>
                        </td>
                        @if (Obj.GetCurrentUserSession().ExternalDoc.Contains("4"))
                        {
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.DisplayNameFor(model => model.SoftCopy_Path)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @if (Model.SoftCopy_Path != "")
                                    {
                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = Model.SoftCopy_Path })' target="_blank" class="text-orange-800">Preview</a>
                                    }

                                </p>
                            </td>
                        }
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.branch)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.branch)
                            </p>
                        </td>
                    </tr>
                </tbody>

            </table>

        </div>
    </div>

@section scripts {
    <script>
    //----zzz
    $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
    });
    //zzz----


    </script>


}
