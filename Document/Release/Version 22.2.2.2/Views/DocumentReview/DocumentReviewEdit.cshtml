@model ISOStd.Models.DocumentReviewModels

@{
    ViewBag.Title = "DocumentReviewEdit";
}

@section featured {
    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("DocumentReviewList", "DocumentReview", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Document Review Frequency</span>
                    </a>
                    <span class="breadcrumb-item active">Update Document Review Frequency</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>

}

@using (Html.BeginForm("DocumentReviewEdit", "DocumentReview", FormMethod.Post,
                     new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Update Document Review Frequency</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">
                <input type="hidden" id="id_doc_review" name="id_doc_review" value="@Model.id_doc_review" />
                <table class="table table-lg">
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            @Html.LabelFor(model => model.division) <text style="color:red">*</text>
                        </td>
                        <td class="col">
                            <select class="form-control select-fixed-multiple" data-fouc id="division" name="division" onchange="GetEmployeeDetails()" required>
                                @if (ViewBag.Branch != null)
                                {
                                    foreach (var data in ViewBag.Branch)
                                    {
                                        if (Array.IndexOf(Model.division.ToString().Split(','), data.Value) >= 0)
                                        {
                                            <option value='@data.Value' selected>@data.Text</option>
                                        }
                                        else
                                        {
                                            <option value='@data.Value'>@data.Text</option>
                                        }
                                    }
                                }
                            </select>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.review_date)<text style="color:red;">*</text>
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                @if (Model.review_date != null && Model.review_date > Convert.ToDateTime("01/01/0001"))
                                {
                                    <input type="date" class="form-control" name="review_date" value="@Model.review_date.ToString("yyyy-MM-dd")" required />
                                }
                                else
                                {
                                    <input type="date" class="form-control" name="review_date" value="review_date" required />
                                }
                            </div>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.doc_level)
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                @Html.DisplayFor(model => model.doc_level)
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.doc_type)
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                               @Html.DisplayFor(model => model.doc_type)
                            </div>

                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.frequency)<text style="color: red;">*</text>
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="frequency" name="frequency" required>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.Frequency != null)
                                    {
                                        foreach (var item in ViewBag.Frequency)
                                        {
                                            if (item.Value == Model.frequency)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.criteria)
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                <select class="form-control select-fixed-multiple" data-fouc id="criteria" name="criteria" required>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.Criteria != null)
                                    {
                                        foreach (var item in ViewBag.Criteria)
                                        {
                                            if (item.Value == Model.criteria)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </div>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.approvedby)
                            </div>
                        </td>
                        <td class="col-xs-6 col-md-4">
                            <div class="editor-field">
                                <select class="form-control select-fixed-multiple" data-fouc id="approvedby" name="approvedby" multiple="multiple" required>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.EmpLists != null)
                                    {
                                        foreach (var item in ViewBag.EmpLists)
                                        {
                                            if (Array.IndexOf(Model.approvedby.ToString().Split(','), item.Value) >= 0)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
        </div>

        <div class="card-footer bg-white d-flex justify-content-between align-items-center">
            @Html.ActionLink("Back to List", "DocumentReviewList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })

            <button type="submit" id="btnCreate" value="Update" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Report</button>
        </div>
    </div>
}


@section Scripts {
    <script>
        $(document).ready(function () {
         
        });

        function GetEmployeeDetails() {
            var division = $('#division option:selected').val();
            jQuery.ajax({
                url: '@Url.Action("FunGetAllEmpList", "EmployeeDetails")',
                type: 'POST',
                dataType: "json",
                data: { 'branch': division },
                success: function (result) {
                    $("#approvedby").children('option').remove();
                    $("#approvedby").trigger('change');
                    if (result != null && result.length > 0) {
                        $.each(result, function (index, item) {
                            $("#approvedby").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            $("#approvedby").trigger('change');
                        });
                        return;
                    }
                }
            });
        }

    </script>
    @Scripts.Render("~/bundles/jqueryval")
}

