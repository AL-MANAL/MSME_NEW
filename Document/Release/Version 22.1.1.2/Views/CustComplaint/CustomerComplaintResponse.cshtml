@model ISOStd.Models.CustComplaintModels

@{
    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
   
    ViewBag.Title = "CustomerComplaintResponse";
}

@section featured {
    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("CustomerComplaintList", "CustComplaint", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Customer Complaint</span>
                    </a>
                    <span class="breadcrumb-item active">Customer Complaint Response</span>
                </div>
                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                    <div class="breadcrumb justify-content-center">
                        <div class="breadcrumb-elements-item dropdown p-0">
                            <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                                <i class="icon-gear mr-2"></i>
                                Settings
                            </a>
                            <div class="dropdown-menu dropdown-menu-right">
                                <div class="dropdown-divider"></div>
                                <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                            </div>
                        </div>
                    </div>
                </div>*@
        </div>
    </div>
}
<!-- Basic setup -->
<div class="card">
    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">Customer Complaint Response</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="container-fluid">
            @*<h6>Customer Complaint Response</h6>*@
            <fieldset>
                <table class="table table-lg">
                    @*------------------Start Meta data-----------------------*@
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.DisplayNameFor(model => model.ComplaintNo)
                            </div>
                        </td>
                        <td class="col">
                            @Html.DisplayFor(model => model.ComplaintNo)
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.DisplayNameFor(model => model.registered_on)
                            </div>
                        </td>
                        <td class="col">
                            @if (Model.registered_on != null && Model.registered_on > Convert.ToDateTime("01/01/0001"))
                            {
                                @Html.Label(Model.registered_on.ToString("yyyy-MM-dd"))
                            }
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.DisplayNameFor(model => model.CustomerName)
                            </div>
                        </td>
                        <td class="col">
                            @Html.DisplayFor(model => model.CustomerName)
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.DisplayNameFor(model => model.ProjectName)
                            </div>
                        </td>
                        <td class="col">
                            @Html.DisplayFor(model => model.ProjectName)
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.DisplayNameFor(model => model.CustomerRef)
                            </div>
                        </td>
                        <td class="col">
                            @Html.DisplayFor(model => model.CustomerRef)
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.DisplayNameFor(model => model.ModeOfComplaint)
                            </div>
                        </td>
                        <td class="col">
                            @Html.DisplayFor(model => model.ModeOfComplaint)
                        </td>
                    </tr>
                    <tr class="row"> <td class="col" style="text-align:center"><b>Complaint Reported by</b></td></tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.DisplayNameFor(model => model.ReportedBy)
                            </div>
                        </td>
                        <td class="col">
                            @Html.DisplayFor(model => model.ReportedBy)
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.DisplayNameFor(model => model.reportedby_email)
                            </div>
                        </td>
                        <td class="col">
                            @Html.DisplayFor(model => model.reportedby_email)
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.DisplayNameFor(model => model.reportedby_no)
                            </div>
                        </td>
                        <td class="col">
                            @Html.DisplayFor(model => model.reportedby_no)
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.DisplayNameFor(model => model.reportedby_desig)
                            </div>
                        </td>
                        <td class="col">
                            @Html.DisplayFor(model => model.reportedby_desig)
                        </td>
                    </tr>
                    @*------------------End Meta data-----------------------*@
                </table>
                @using (Html.BeginForm("CustomerComplaintResponse", "CustComplaint", FormMethod.Post,
                         new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
                {

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    <input type="hidden" id="id_complaint" name="id_complaint" value="@Model.id_complaint" />

                    <table class="table table-lg">

                        <tr class="row"> <td class="col" style="text-align:center"><b>Customer Complaint Response </b></td></tr>

                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.DisplayNameFor(model => model.c_response)<text style="color:red">*</text>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    <select class="form-control select-fixed-multiple" data-fouc id="c_response" name="c_response" required>
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.CustomerResponse != null)
                                        {
                                            foreach (var item in ViewBag.CustomerResponse)
                                            {
                                                if (item.Value == Model.c_response)
                                                {
                                                    <option value='@item.Value' selected>@item.Text</option>
                                                }
                                                else
                                                {
                                                    <option value='@item.Value'>@item.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                </div>
                            </td>
                            <td class="col-xs-3 col-md-2">
                                @Html.DisplayNameFor(model => model.c_response_date) <text style="color:red">*</text>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    @if (Model.c_response_date != null && Model.c_response_date > Convert.ToDateTime("01/01/0001"))
                                    {
                                        <input class="form-control" type="date" id="c_response_date" name="c_response_date" value="@Model.c_response_date.ToString("yyyy-MM-dd")" required />
                                    }
                                    else
                                    {
                                        <input type="date" class="form-control" name="c_response_date" id="c_response_date" required />
                                    }

                                </div>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.DisplayNameFor(model => model.c_response_details)
                                </div>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="c_response_details" name="c_response_details"> @Model.c_response_details</textarea>
                                </div>
                            </td>

                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.c_reponse_upload)
                            </td>
                            <td class="col">
                                <input type="file" name="c_reponse_upload" id="c_reponse_upload" title="Documents" multiple="multiple" onchange="FileFormatValidation(this)" accept=".pdf, .doc, .docx, .jpg, .jpeg,.png,.xls,.xlsx,image/*" class="bootstrap-uploader" />
                                <span class="form-text text-muted"><code>(Hold Ctrl Key in case of multiple files)</code></span>
                                @if (Model.c_reponse_upload != null && Model.c_reponse_upload != "" && Model.c_reponse_upload.Length > 0)
                                {
                                    <div class="editor-label">
                                        <p style="font-weight: bold; margin: 0px;"> Docs. List:</p>
                                    </div>
                                    <p style="font-size: 11px; margin: 0px; color: red;">(Uncheck in case to remove a uploaded file)</p>
                                    foreach (var docs in Model.c_reponse_upload.Trim(',').Split(','))
                                    {
                                        <p style="margin: 0px;">
                                            <input type="checkbox" id="QCDocsVal" name="QCDocsVal" class="QCDocsVal" value="@docs.Trim(',')" checked title="Uncheck in case to remove a uploaded file" />
                                            <input type="hidden" id="QCDocsValselectall" name="QCDocsValselectall" />
                                            <span class="bg-dark py-1 px-2 rounded">
                                                <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs})' target="_blank">Preview</a>
                                            </span>
                                        </p>
                                    }
                                }
                            </td>
                        </tr>

                    </table>
                    <div class="card-footer bg-white d-flex justify-content-between align-items-center">
                        @Html.ActionLink("Back to List", "CustomerComplaintList", new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })
                        <div class="mt-2 mt-sm-0">
                            <button type="submit" id="btnCreate" value="Save" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Save</button>
                         </div>
                    </div>
                }
            </fieldset>           
        </div>
    </div>
</div>


@section Scripts {
    <script>

    $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }

    });

     function FileFormatValidation(file) {
        var ext = file.value.split(".").pop().toLowerCase();
        if ($.inArray(ext, ["pdf", "xlsx", "xls", "doc", "docx","jpg","jpeg","png","gif"]) == -1) {
            file.value = "";
            bootbox.alert({
                title: 'File type',
                message: 'Invalid file format, please upload only doc, xlx, xlsx, pdf, docx, jpg, jpeg, gif, png format'
            });
        }
    }

    $("#QCDocsVal").click(function () {
        if ($("#QCDocsVal").prop('checked')) {
            {
                $(this).prop('checked', true);
            }
        }
        else {
            $(this).prop('checked', false);
            document.getElementById("QCDocsValselectall").value = "DeleteQC";
        }
    });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}