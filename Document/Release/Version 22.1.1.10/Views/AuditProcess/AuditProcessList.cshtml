@using PagedList;
@using PagedList.Mvc;

@model List<ISOStd.Models.AuditProcessModels>

    @{
        ViewBag.Title = "AuditProcessList";
        Layout = "~/Views/Shared/_Layout.cshtml";
        ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
    }

    @section featured {
        <div class="page-header page-header-light">

            <div class="page-header-content header-elements-md-inline">
                <div class="page-title d-flex">
                    <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

                </div>
            </div>

            <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
                <div class="d-flex">
                    <div class="breadcrumb">

                        <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                            <span class="breadcrumb-item"> Home</span>
                        </a>

                        <span class="breadcrumb-item active">Internal Audit Planning</span>
                    </div>

                   
                </div>

              
            </div>
        </div>    }

    <style>
        .hidden {
            display: none !important;
        }
    </style>

    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Internal Audit Planning</h5>
            <div class="header-elements float-right group"> 
                    <div class="list-icons">
                        <a class="list-icons-item" data-action="collapse"></a>
                    </div>
                </div>
            </div>

        <div class="card-body">
            <a class="btn btn-outline bg-orange text-orange border-orange btn-ladda btn-ladda-progress ladda-button" data-style="radius" href='@Url.Action("AuditPlan", "AuditProcess")' title="Create Audit Plan">
                <span class="ladda-label">Create Audit Plan</span>
                <span class="ladda-spinner"></span>
            </a>
            <br />
            <hr />

            @if (ViewBag.Branch != null)
            {
        <div class="row">
            <div class="col-md-4">
                <select class="form-control select-search select2-hidden-accessible" data-fouc id="branch_name" name="branch_name" onchange="getDetails()">
                    <option value='' hidden>Division</option>
                    @if (ViewBag.Branch != null)
                    {
                        foreach (var item in ViewBag.Branch)
                        {
                            if (item.Value == ViewBag.Branch_name)
                            {
                                <option value='@item.Value' selected>@item.Text</option>
                            }
                            else
                            {
                                <option value='@item.Value'>@item.Text</option>
                            }
                        }
                    }
                </select>
            </div>
            </div>
            }
        </div>

        <table class="table table-bordered table-striped table-hover datatable-responsive" id="AuditSchedule">

            <thead>
                <tr>
                    <th>
                        Sl No
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Audit_no)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().AuditDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Audit_Status)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().branch)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().group_name)
                    </th>
                    @*<th>
                        @Html.DisplayNameFor(model => model.First().team)
                    </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.First().Approved_Status)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().checklist)
                    </th>

                    <th data-priority="2" class="text-center not-export-column">Actions</th>

                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Count() > 0)
                {
                    int i = 0;
                    foreach (var item in Model)
                    {
                        i = i + 1;
                <tr>
                    <td>
                        @Html.ActionLink(i.ToString(), "AuditDetails", new { Audit_Id = item.Audit_Id.ToString() }, new { onclick = "HyperLinkProgressIconFunction()" })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Audit_no)
                    </td>
                    <td>
                        @if (item.AuditDate > Convert.ToDateTime("01/01/0001"))
                        {
                            var audit_date = item.AuditDate.ToString("dd/MM/yyyy");
                            var frm_time = item.fromtime;
                            var to_time = item.totime;
                            var auditdate = audit_date + "  " + frm_time + " - " + to_time;
                            @auditdate
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Audit_Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.branch)
                    </td>
               
                    <td>
                        @Html.DisplayFor(modelItem => item.group_name)
                    </td>
                    @*<td>
                        @Html.DisplayFor(modelItem => item.team)
                    </td>*@
                    <td>
                        @Html.DisplayFor(modelItem => item.Approved_Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.checklist)
                    </td>


                    <td class="text-center">
                        <div class="list-icons">
                            <div class="list-icons-item dropdown">
                                <a href="#" class="list-icons-item caret-0 dropdown-toggle" data-toggle="dropdown">
                                    <i class="icon-gear mr-2"></i>
                                </a>

                                <div class="dropdown-menu dropdown-menu-right">
                                    @using (Html.BeginForm("AuditPlanPDF", "AuditProcess", FormMethod.Post, new { id = "form1", name = "form1" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" id="Audit_Id" name="Audit_Id" value="@item.Audit_Id" />
                                        <button class="dropdown-item"><i class="icon-printer2"></i>Generate Audit Plan </button>
                                    }
                                        <a  class="dropdown-item" data-toggle="popover_approver" data-trigger="hover" id="@item.Audit_Id" title="">
                                            <i class="icon-pencil7"></i>Approver List
                                        </a>
                                        <a class="dropdown-item"  data-toggle="popover" data-trigger="hover" id="@item.Plan_Id" title="">
                                            <i class="icon-pencil7"></i>Auditee List
                                        </a>
                                        <a class="dropdown-item" data-toggle="popover_auditor" data-trigger="hover" id="@item.Plan_Id" title="">
                                            <i class="icon-pencil7"></i>Auditor List
                                        </a>
                                       @if (item.Approved_Status == "Approved")
                                       {
                                        <a class="dropdown-item" href='@Url.Action("AuditStatusUpdate", "AuditProcess", new { Plan_Id = item.Plan_Id })' title="Update Audit Status" onclick="HyperLinkProgressIconFunction()">
                                            <i class="icon-pencil7"></i>Audit Status
                                        </a>
                                       }
                                       @if (item.Approved_Status == "Pending for Approval")
                                       {
                                        <a class="dropdown-item" href='@Url.Action("AuditProcessEdit", "AuditProcess", new { Audit_Id = item.Audit_Id })' title="Edit Audit" onclick="HyperLinkProgressIconFunction()">
                                            <i class="icon-pencil7"></i>Edit Audit
                                        </a>
                                       }
                                    @*@if (item.Audit_Status == "Approved")
                                    {
                                        <a class="dropdown-item" href='@Url.Action("PerformAudit", "AuditProcess", new { Audit_Id  = item.Audit_Id  })' title="Perform Audit" onclick="HyperLinkProgressIconFunction()">
                                            <i class="icon-stack-check"></i>Perform Audit
                                        </a>

                                        <span class="dropdown-item text-center" title="Reschedule" onclick="RescheduleItems(@item.Audit_Id)" style="cursor:pointer;"><i class="icon-pencil5"></i>Reschedule Audit</span>
                                        
                                    }*@
                                    @*@if (item.Audit_Status == "In progress" || item.Audit_Status == "Completed")
                                    {
                                        <a class="dropdown-item" href='@Url.Action("PerformAuditEdit", "AuditProcess", new { Audit_Id = item.Audit_Id })' title="Perform Audit" onclick="HyperLinkProgressIconFunction()">
                                            <i class="icon-stack-check"></i>Perform Audit
                                        </a>
                                    }*@
                                    <span class="dropdown-item text-center" title="Delete" onclick="DeleteItems(@item.Audit_Id)" style="cursor:pointer;"><i class="icon-bin"></i>Delete</span>
                                 </div>
                            </div>
                        </div>
                    </td>
                </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    @*<div id="modal_Rescedule" class="modal fade" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-info">
                    <h6 class="modal-title">Rescedule Reasons</h6>
                    <button type="button" class="close" data-dismiss="modal">×</button>
                </div>
                <div class="modal-body">
                    <form>
                        <input type="hidden" id="reschedule_id" name="reschedule_id" value="-1" />

                        <div class="form-group row">
                            <div class="col-sm-4">
                                <label>Audit Reschedule Reason</label>
                                <text style="color: red;"> *</text>
                            </div>
                            <div class="col-sm-8">
                                <textarea maxlength="225" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="Rescedule_Reason" name="Rescedule_Reason"></textarea>
                                <span class="field-validation-error"><span id="Rescedule-message_Update" style="display: none;">Audit Rescedule reason is required.</span></span>
                            </div>
                        </div>      
                    </form>
                </div>

                <div class="modal-footer">
                    <button type="button" id="btnUpdate" onclick="Reschedule()" class="btn btn-success">Save</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>*@


    @section scripts {
        @Scripts.Render("~/bundles/jqueryval")
           <script type="text/javascript">

        $(document).ready(function () {

        @if (TempData["alertdata"] != null ) {

           @: new Noty({
           @:     text: '@TempData["alertdata"]',
           @:     type: 'error'
           @: }).show();
        }

        @if (@TempData["Successdata"] != null ) {

        @:    new Noty({
         @:       text: '@TempData["Successdata"]',
         @:       type: 'success'
         @:   }).show();
        }
    });

               function setDataApprover(id) {
                   var set_data = '';
                   var element = $(this);
                   var id = element.attr("id");
                   $.ajax({
                       url: '@Url.Action("ApproverListInfo", "AuditProcess")',
                       methos: "post",
                       async: false,
                       data: { id: id },
                       success: function (data) {
                           set_data = data;

                       }
                   });
                   return set_data;
               }
               function setData(id) {
                   var set_data = '';
                   var element = $(this);
                   var id = element.attr("id");
                   $.ajax({
                       url: '@Url.Action("AuditeeListInfo", "AuditProcess")',
                       methos: "post",
                       async: false,
                       data: { id: id },
                       success: function (data) {
                           set_data = data;

                       }
                   });
                   return set_data;
               }
               function setDataAuditor(id) {
                   var set_data = '';
                   var element = $(this);
                   var id = element.attr("id");
                   $.ajax({
                       url: '@Url.Action("AuditorListInfo", "AuditProcess")',
                       methos: "post",
                       async: false,
                       data: { id: id },
                       success: function (data) {
                           set_data = data;

                       }
                   });
                   return set_data;
               }

            var AuditSchedule = function () {
                var _componentDatatableBasic = function () {
                    if (!$().DataTable) {
                        console.warn('Warning - datatables.min.js is not loaded.');
                        return;
                    }
                    //Setting datatable defaults
                    $.extend($.fn.dataTable.defaults, {
                        autoWidth: false,
                        responsive: true,
                        columnDefs: [{
                            orderable: false,
                            //width: 100,
                            targets: 'not-export-column'

                        }],
                        responsivePriority: 2, targets: -1,
                        colReorder: false,
                        dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                        //dom: 'lBfrtip',
                        language: {
                            search: '<span>Filter:</span> _INPUT_',
                            searchPlaceholder: 'Type to filter...',
                            lengthMenu: '<span>Show:</span> _MENU_',
                            paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                        }
                    });

                    var table = $('#AuditSchedule').DataTable({
                        drawCallback: function () {
                            $('[data-toggle="popover"]').popover({
                                html: true,

                                content: setData,
                                container: 'body',

                                //data: setData,
                            });
                            $('[data-toggle="popover_auditor"]').popover({
                                html: true,

                                content: setDataAuditor,
                                container: 'body',

                                //data: setData,
                            });
                            $('[data-toggle="popover_approver"]').popover({
                                html: true,
                                content: setDataApprover,
                                container: 'body',

                                //data: setData,
                            });
                            var dropdownMenu;

                            // and when you show it, move it to the body
                            $('.datatable-responsive').on('show.bs.dropdown', function (e) {

                                // grab the menu
                                dropdownMenu = $(e.target).find('.dropdown-menu');

                                // detach it and append it to the body
                                $('body').append(dropdownMenu.detach());

                                // grab the new offset position
                                var eOffset = $(e.target).offset();

                                // make sure to place it where it would normally go (this could be improved)
                                dropdownMenu.css({
                                    'display': 'block',
                                    'top': eOffset.top + $(e.target).outerHeight(),
                                    'left': eOffset.left
                                });
                            });

                            // and when you hide it, reattach the drop down, and hide it normally
                            $('.datatable-responsive').on('hide.bs.dropdown', function (e) {
                                $(e.target).append(dropdownMenu.detach());
                                dropdownMenu.hide();
                            });
                        },
                        lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                        colReorder: {
                            fixedColumnsLeft: 1
                        },
                        stateSave: true,
                        //stateSaveParams: function (settings, data) {
                        //    for (var i = 0, ien = data.columns.length; i < ien; i++) {
                        //        delete data.columns[i].visible;
                        //        delete data.columns[i].search;
                        //    }
                        //},
                        //scrollY: '350px',
                        scrollCollapse: true,


                        keys: {
                            className: 'focus focus-success'
                        },

                        buttons: {
                            buttons: [
                                {
                                    extend: 'copyHtml5',
                                    //className: myClass,
                                   // className: 'btn btn-light',
                                    title: 'Audit  Report Data export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },
                                },
                                {
                                    extend: 'excelHtml5',
                                    //className: myClass,
                                  //  className: 'btn btn-light',
                                    title: 'Audit  Report Data export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },

                                },
                                {
                                    extend: 'pdfHtml5',
                                    //className: myClass,
                                  //  className: 'btn btn-light',
                                    title: 'Audit  Report Data export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },
                                },
                                {
                                    extend: 'csvHtml5',
                                   // className: myClass,
                                   // className: 'btn btn-light',
                                    title: 'Audit  Report Data export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },
                                },
                                {
                                    extend: 'print',
                                    //className: myClass,
                                    //className: 'btn btn-light',
                                    title: 'AuditSchedule Report Data export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },
                                },

                                {
                                    extend: 'colvis',
                                    text: '<i class="icon-three-bars"></i>',
                                    className: 'btn bg-blue btn-icon dropdown-toggle',
                                    columns: ':visible:not(.not-export-column)'
                                }
                            ]
                        }

                    });
                    // Adjust columns on window resize
                    setTimeout(function () {
                        $(window).on('resize', function () {
                            table.columns.adjust();
                        });
                    }, 100);


                    //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                    $('.sidebar-control').on('click', function () {

                        setTimeout(function () {
                            //alert("gii");

                            table.columns.adjust().draw();
                            $("#AuditSchedule").resize();
                        }, 100);

                    });
                    //}

                    $('#AuditSchedule').on('page.dt', function () {
                        //table.draw();
                        //alert("zzz1");
                        $("#AuditSchedule").resize();

                    });

                    $('#AuditSchedule').on('column-visibility.dt', function () {
                        //table.draw();
                        //alert("zzz2");
                        $("#AuditSchedule").resize();

                    });

                    $('#AuditSchedule').on('order.dt', function () {
                        //table.draw();
                        //alert("zzz3");
                        $("#AuditSchedule").resize();

                    });


                    $('#AuditSchedule').on('responsive-display.dt', function () {

                        $("#AuditSchedule").resize();

                    });


                    $('#AuditSchedule').on('responsive-resize.dt', function () {

                        $("#AuditSchedule").resize();

                    });
                };


                // Select2 for length menu styling
                var _componentSelect2 = function () {
                    if (!$().select2) {
                        console.warn('Warning - select2.min.js is not loaded.');
                        return;
                    }

                    // Initialize
                    $('.dataTables_length select').select2({
                        minimumResultsForSearch: Infinity,
                        dropdownAutoWidth: true,
                        width: 'auto'
                    });
                };


                //
                // Return objects assigned to module
                //

                return {
                    init: function () {
                        _componentDatatableBasic();
                        _componentSelect2();
                    }
                }
            }();


            // Initialize module
            // ------------------------------

            document.addEventListener('DOMContentLoaded', function () {
                AuditSchedule.init();
            });



        function DeleteItems(id_audit_schedule) {
            bootbox.confirm({
                title: 'Confirm dialog',
                message: 'Are you Sure you want to Delete the current Record?',
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-primary'
                    },
                    cancel: {
                        label: 'Cancel',
                        className: 'btn-link'
                    }
                },
                callback: function (r) {

                  if (r == true) {
                       jQuery.ajax({
                           url: '@Url.Action("AuditProcessDelete", "AuditProcess")',
                           type: 'POST',
                           dataType: "json",
                           data: { 'id_audit_schedule': id_audit_schedule },
                        success: function (result) {


                            //// Add new params to the querystring dictionary


                            window.location.href =
                                window.location.protocol + "//" +
                                window.location.host +
                                window.location.pathname

                        }
                    });
                    return true;
                }
                else if (r == false) {
                        bootbox.hideAll();
                        return false;
                    }

                }
            });
        }



               function RescheduleItems(id_audit_schedule) {

                   $('#modal_Rescedule').modal('show');
                   $('#Rescedule-message_Update').hide();

                   document.getElementById("reschedule_id").value = id_audit_schedule;
                   document.getElementById("Rescedule_Reason").value = "";
               }

            function Reschedule()
                {
                if (document.getElementById("Rescedule_Reason").value != "") {

                    jQuery.ajax({
                        url: '@Url.Action("AuditProcessRescedule", "AuditProcess")',
                        type: 'POST',
                        dataType: "json",
                        data: { 'id_audit_schedule': document.getElementById("reschedule_id").value, 'Rescedule_Reason': document.getElementById("Rescedule_Reason").value },
                        success: function (result) {
                            //// Add new params to the querystring dictionary
                            window.location.href =
                                window.location.protocol + "//" +
                                window.location.host +
                                window.location.pathname
                        }
                    });
                }
                else {
                    $('#Rescedule-message_Update').show();
                }
            }

     function getDetails() {
                var branch_name = document.getElementById("branch_name").value;
                     var params = {
                                branch_name: branch_name
                            };
                            queryString = $.param(params);

                            window.location.href =
                                window.location.protocol + "//" +
                                window.location.host +
                                window.location.pathname +
                               '?' + queryString;
            }
           </script>
    }
