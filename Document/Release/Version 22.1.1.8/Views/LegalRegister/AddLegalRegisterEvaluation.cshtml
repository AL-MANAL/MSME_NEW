@model ISOStd.Models.LegalRegisterModel

@{

    ViewBag.Title = "AddLegalRegisterEvaluation";

    DateTime dtTodate = Convert.ToDateTime(ViewBag.LegalRegister_Eval_On);

 

    dtTodate=dtTodate.AddDays(1);

}


<div class="groupedassets margin10">
    <span class="groupedassetshead margin10 onestphdcolor">Add Legal Register Evaluation</span>
</div>

<div id="divmsg">

        @if (TempData["alertdata"] != null)

        {

            <span class="errMsg" style="color: red;font-weight: bold;">@TempData["alertdata"]</span>

        }

        @if (TempData["Successdata"] != null)

        {

            <span class="errMsg" style="color: green; font-weight: bold;">@TempData["Successdata"]</span>

        }

    </div>

 

@using (Html.BeginForm("AddLegalRegisterEvaluation", "LegalRegister", FormMethod.Post,

                         new { enctype = "multipart/form-data", id = "form1", name = "form1" }))

{

    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true)

 

    <fieldset>

        <legend>LegalRegisterModel</legend>

        <input type="hidden" id="id_requirements" name="id_requirements" value="@ViewBag.id_requirements" />

@*        <input type="hidden" id="LegalRegister_Eval_On" name="LegalRegister_Eval_On" value="@ViewBag.LegalRegister_Eval_On" />

        <input type="hidden" id="Duedate" name="Target_Date" value="@ViewBag.Duedate" />*@

     @*   <input type="hidden" id="ToDate" name="ToDate" value="@dtTodate" />*@

 

        <table id="tabcontent">

 

            <tr>

                  <td>

                    <div class="editor-label">

                        @Html.LabelFor(model => model.LegalRegister_Eval_On)

                    </div>

            @*    </td>

                                  <td>
                   
                            <div class="editor-field">
                                <input type="text" id="LegalRegister_Eval_On" name="LegalRegister_Eval_On"  />
                                <span class="field-validation-error"><span id="LegalRegister_Eval_On-message" style="display: none;"> Evaluation Date Required</span></span>
                                @Html.ValidationMessageFor(model => model.LegalRegister_Eval_On)
                            </div>
                      
                </td>*@
                        <td>
                            <div class="editor-field">
                                <input type="text" id="LegalRegister_Eval_On" name="LegalRegister_Eval_On" style="width: 140px;" required/>
                                <span class="field-validation-error"><span id="LegalRegister_Eval_On-message" style="display: none;">Project LegalRegister_Eval_On is required.</span></span>
                            
                            </div>
                        </td>
                <td>
                           
           

                    <div class="editor-label">

                        @Html.LabelFor(model => model.comply)

                    </div>

                </td>

                       <td>
                        <div class="editor-field">
                            <select id="comply" name="comply"  onclick="cal()">
                                <option value='' hidden>Select</option>
                                @if (ViewBag.comply != null)
                                {
                                    foreach (var item in ViewBag.comply)
                                    {
                                        <option value='@item'>@item</option>
                                    }
                                }

                            </select>
                        </div>
                    </td>
                </tr>

 

            <tr>

                <td>

                    <div class="editor-label">

                        @Html.LabelFor(model => model.yes_comply_reason)

                    </div>

                </td>

                <td>

                    <div class="editor-field">
                        

                        <input type="text"  style="height:80px;width:200px;background:#efefe6" id="yes_comply_reason" name="yes_comply_reason"    disabled   />
                       
                

                    </div>

                </td>          

                <td>

                    <div class="editor-label">

                        @Html.LabelFor(model => model.no_comply_reason)

                    </div>

                </td>

                <td>

                    <div class="editor-field">

                         <input type="text" style="height:80px;width:200px;background:#efefe6" id="no_comply_reason" name="no_comply_reason"      aria-multiline="true"  disabled />

                    </div>
                    </td>

            </tr>

            <tr>

                <td>

                    <div class="editor-label">

                        @Html.LabelFor(model => model.Evidence)

                    </div>

                </td>

                <td>

                    <input type="file" name="Evidence" id="Evidence" title="Objective Evidence" onchange="FileFormatValidation(this)" accept=".pdf, .doc, .docx,image/*"

                        style="height: 38px;"/>

                </td>
                 <td>

                    <div class="editor-label">

                        @Html.LabelFor(model => model.Comply_action)

                    </div>

                </td>

                <td>

                    <div class="editor-field">

                         <input type="text" id="Comply_action" name="Comply_action" />

                    </div>
                    </td>

            </tr>
            
            <tr>

                  <td>

                    <div class="editor-label">

                        @Html.LabelFor(model => model.Duedate)

                    </div>

                </td>
@*        <td>
                   
                            <div class="editor-field">
                                <input type="text" id="Duedate" name="Duedate"  />
                                <span class="field-validation-error"><span id="Duedate-message" style="display: none;"> Due Date Required</span></span>
                                @Html.ValidationMessageFor(model => model.Duedate)
                            </div>
                      
                </td>*@
                  <td>
                            <div class="editor-field">
                                <input type="text" id="Duedate" name="Duedate" style="width: 140px;"/>
                                <span class="field-validation-error"><span id="Duedate-message" style="display: none;">Project Duedate is required.</span></span>
                            
                            </div>
                        </td>
               
                     <td>

                    <div class="editor-label">

                        @Html.LabelFor(model => model.personel_responsible)

                    </div>

            @*    </td>
                                       <td>
                          <div class="editor-field">
                            <select id="personel_responsible" name="personel_responsible" required="">
                                <option value='' hidden>Select</option>
                                @if (ViewBag.EmpLists != null)
                                {
                                    foreach (var item in ViewBag.EmpLists)
                                    {
                                        <option value='@item.Value'>@item.Text</option>
                                    }
                                }
                            </select>
                        </div>
                    </td>*@

                <td>

                    <div class="editor-field">

                         <input type="text" id="personel_responsible" name="personel_responsible"  />

                    </div>
                    </td>
                </tr>

        </table>

        <div style="width: 100%; text-align: center;">

            @Html.ActionLink("Back","LegalRegisterEvaluationList", new {   id_requirements = ViewBag.id_requirements, LegalRequirement_Id= ViewBag.LegalRequirement_Id })

            <input type="submit" value="Create" />

        </div>

    </fieldset>

}

 

 

 

@section Scripts {

   

    <script >

     



         
        $(function () {
            $('#LegalRegister_Eval_On').datepicker({
                dateFormat: "dd-mm-yy",
                buttonImageOnly: true,
                buttonImage: '../Images/Calender.png',
                showOn: 'both',
                changeMonth: true,
                changeYear: true,
                gotoCurrent: true               
            });

            $('#Duedate').datepicker({
                dateFormat: "dd-mm-yy",
                buttonImageOnly: true,
                buttonImage: '../Images/Calender.png',
                showOn: 'both',
                changeMonth: true,
                changeYear: true,
                gotoCurrent: true
            });

        })
                    


            //$("#LegalRegister_Eval_On").datepicker("setDate", new Date());

            //$("#Duedate").datepicker("setDate", new Date());

        


            function FileFormatValidation(file) {

                var ext = file.value.split(".").pop().toLowerCase();

                if ($.inArray(ext, ["pdf", "jpg", "jpeg", "gif", "png"]) == -1) {

                    file.value = "";

                    jAlert("Invalid file format, please upload only pdf, jpg, jpeg, gif, png format");

                }
            }


            function cal() {
                var x = document.getElementById("comply").value;
              

                if (x == "Yes") {
                    document.getElementById("yes_comply_reason").disabled = false
                //    document.getElementById("yes_comply_reason").style.color = "white";
                    document.getElementById("no_comply_reason").value = "";
                    document.getElementById("yes_comply_reason").style.background = "white";

                }
                else {
                    document.getElementById("yes_comply_reason").disabled = true
                    document.getElementById("yes_comply_reason").style.background = "#efefe6";
                
                }
                   
                if(x == "No"){
                    document.getElementById("no_comply_reason").disabled = false
                    document.getElementById("yes_comply_reason").value = "";
                    document.getElementById("no_comply_reason").style.background = "white";
                }
                else {
                    document.getElementById("no_comply_reason").disabled = true
                    document.getElementById("no_comply_reason").style.background = "#efefe6";
                    
                }

            }
        
                
    </script>

    @Scripts.Render("~/bundles/jqueryval")

}