@using PagedList;
@using PagedList.Mvc;

@model List<ISOStd.Models.NearMissModels>

    @{
        ViewBag.Title = "NearMissList";
        ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
    }
    @section featured {

        <div class="page-header page-header-light">

            <div class="page-header-content header-elements-md-inline">
                <div class="page-title d-flex">
                    <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

                </div>
            </div>

            <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
                <div class="d-flex">
                    <div class="breadcrumb">

                        <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                            <span class="breadcrumb-item"> Home</span>
                        </a>
                        <span class="breadcrumb-item active"> Near Miss List</span>
                    </div>

                    <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
                </div>

                <div class="header-elements d-none">
                    <div class="breadcrumb justify-content-center">


                        <div class="breadcrumb-elements-item dropdown p-0">
                            <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                                <i class="icon-gear mr-2"></i>
                                Settings
                            </a>

                            <div class="dropdown-menu dropdown-menu-right">

                                <div class="dropdown-divider"></div>
                                <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


    }
        <style>
            .hidden {
                display: none !important;
            }
        </style>

    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Near Miss List</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>

                </div>
            </div>
        </div>
        <div class="card-body">
            @if (Obj.GetCurrentUserSession().NearMissRept.Contains("3"))
            {
                <a class="btn btn-outline bg-orange text-orange border-orange btn-ladda btn-ladda-progress ladda-button" data-style="radius" href='@Url.Action("AddNearMiss", "NearMiss")' title="Add New">
                    <span class="ladda-label">Add New</span>
                    <span class="ladda-spinner"></span>
                </a>
            }
                <div class="card-body">
                    <div class="options d-flex flex-fill">
                        @using (Html.BeginForm("NearMissList", "NearMiss", FormMethod.Post, new { id = "form1", name = "form1", style = "width:25%" }))
                        {
                            if (ViewBag.Branch != null)
                            {
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="branch_name" name="branch_name" onchange="getDetails()">
                                    <option value='' hidden>Division</option>
                                    @if (ViewBag.Branch != null)
                                    {
                                        foreach (var item in ViewBag.Branch)
                                        {
                                            if (item.Value == ViewBag.Branch_name)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            }
                        }
                    </div>
                </div>
            </div>

        <table class="table table-bordered table-striped table-hover" id="table1">
            <thead>
                <tr>
                    <th>
                        Sl No
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().report_no)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().incident_date)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().reported_date)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().reported_by)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().reported_by_position)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().reported_by_dept)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().location)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().reviewed_by)
                    </th>
                    <th class="not-export-column">
                        NearMiss Action
                    </th>
                    <th class="not-export-column">Edit</th>
                    <th class="not-export-column">Delete</th>
                    

                </tr>
                </thead>
            <tbody>
                @if (Model != null && Model.Count() > 0)
                {
                    int i = 0;
                    foreach (var item in Model)
                    {
                        i = i + 1;
                        <tr>
                            <td>
                                @i
                            </td>
                            <td>
                                @Html.ActionLink(item.report_no.ToString(), "NearMissDetails", new { id_nearmiss = item.id_nearmiss.ToString() }, new { data_toggle = "popover", data_trigger = "hover", id = item.id_nearmiss, onclick = "HyperLinkProgressIconFunction()" })
                            </td>
                            <td>
                                @if (item.incident_date > Convert.ToDateTime("01/01/0001"))
                                {
                                    @item.incident_date.ToString("dd/MM/yyyy HH:mm:ss")
                                }
                            </td>
                            <td>
                                @if (item.reported_date > Convert.ToDateTime("01/01/0001"))
                                {
                                    @item.reported_date.ToString("dd/MM/yyyy")
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.reported_by)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.reported_by_position)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.reported_by_dept)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.location)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.reviewed_by)
                            </td>
                            <td>
                                @if (Obj.GetCurrentUserSession().NearMissRept.Contains("3"))
                                {
                                    <a href='@Url.Action("ActionNearMiss", "NearMiss", new { id_nearmiss = item.id_nearmiss })' title="Action NearMiss" onclick="HyperLinkProgressIconFunction()">
                                        <i class="icon-add" title="Action NearMiss"></i>
                                    </a>
                                }
                                <a href='@Url.Action("NearMissActionList", "NearMiss", new { id_nearmiss = item.id_nearmiss })' title="NearMiss Action List" onclick="HyperLinkProgressIconFunction()">
                                    <i class="icon-list3" title="NearMiss Action List"></i>
                                </a>
                            </td>
                            <td>
                                <a href='@Url.Action("NearMissEdit", "NearMiss", new { id_nearmiss = item.id_nearmiss })' title="Edit NearMiss" onclick="HyperLinkProgressIconFunction()">
                                    <span class="badge badge-info">Edit</span>
                                </a>
                            </td>
                               <td> 
                                    <span class="badge badge-danger" title="Delete Document" onclick="DeleteItems(@item.id_nearmiss)" style="cursor:pointer;">Delete</span>
                                </td>
                            
                        </tr>
                    }
                }

            </tbody>
        </table>
    </div>

    @section scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script type="text/javascript">
              //----zzz
    $(document).ready(function () {

        @if (TempData["alertdata"] != null ) {

           @: new Noty({
           @:     text: '@TempData["alertdata"]',
           @:     type: 'error'
           @: }).show();
        }

        @if (@TempData["Successdata"] != null ) {

        @:    new Noty({
         @:       text: '@TempData["Successdata"]',
         @:       type: 'success'
         @:   }).show();
        }
    });
    //zzz----

            function setData(id) {
                var set_data = '';
                var element = $(this);
                var id = element.attr("id");
                $.ajax({
                    url: '@Url.Action("NearMissInfo", "NearMiss")',
                    methos: "post",
                    async: false,
                    data: { id: id },
                    success: function (data) {
                        set_data = data;
                    }

                });
                return set_data;
            }   




        var table1 = function () {
                var ShowEdit = @(Obj.GetCurrentUserSession().NearMissRept.Contains("3") ? "true" : "false");
                var ShowDownld = @(Obj.GetCurrentUserSession().NearMissRept.Contains("4") ? "true" : "false");
                var ShowDel = @(Obj.GetCurrentUserSession().NearMissRept.Contains("5") ? "true" : "false");

            //
            // Setup module components
            //

            // Basic Datatable examples
            var _componentDatatableBasic = function () {
                if (!$().DataTable) {
                    console.warn('Warning - datatables.min.js is not loaded.');
                    return;
                }

                //Setting datatable defaults
                $.extend($.fn.dataTable.defaults, {
                    autoWidth: false,
                    responsive:true,
                    columnDefs: [{
                        orderable: false,
                        width: 100,
                        targets: [9,10,11]
                    }, {
                            'targets': [11],
                            'visible': ShowDel
                        }, {
                            'targets': [10],
                            'visible': ShowEdit                        
                        }],

                    colReorder: false,
                    dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                    //dom: 'lBfrtip',
                    language: {
                        search: '<span>Filter:</span> _INPUT_',
                        searchPlaceholder: 'Type to filter...',
                        lengthMenu: '<span>Show:</span> _MENU_',
                        paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                    }
                });

                var myClass = "";
                var Delclass= @(Obj.GetCurrentUserSession().NearMissRept.Contains("4") ? "true" : "false");
                if (Delclass == false) { myClass = 'hidden'  };


                var table = $('#table1').DataTable({
                    drawCallback: function () {
                        $('[data-toggle="popover"]').popover({

                            html: true,
                            content: setData,
                            container: 'body'
                            //data: setData,


                        });
                    },
                    lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                    colReorder: {
                        fixedColumnsLeft: 1
                    },
                    stateSave: true,
                    stateSaveParams: function (settings, data) {
                        for (var i = 0, ien = data.columns.length; i < ien; i++) {
                            delete data.columns[i].visible;
                            delete data.columns[i].search;
                        }
                    },
                    scrollY: '350px',
                    scrollCollapse: true,


                    keys: {
                        className: 'focus focus-success'
                    },

                    buttons: {
                        buttons: [
                            {
                                extend: 'copyHtml5',
                                className: myClass,
                               // className: 'btn btn-light',
                                title: 'Near Miss Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },
                            {
                                extend: 'excelHtml5',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'Near Miss Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },

                            },
                            {
                                extend: 'pdfHtml5',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'Near Miss Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },
                            {
                                extend: 'csvHtml5',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'Near Miss Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },
                            {
                                extend: 'print',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'Near Miss Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },

                            {
                                extend: 'colvis',
                                text: '<i class="icon-three-bars"></i>',
                                className: 'btn bg-blue btn-icon dropdown-toggle',
                                columns: ':visible:not(.not-export-column)',
                            }
                        ]
                    }




                });
                // Adjust columns on window resize
                setTimeout(function () {
                    $(window).on('resize', function () {
                        table.columns.adjust();
                    });
                }, 100);


                //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                $('.sidebar-control').on('click', function () {

                    setTimeout(function () {
                        //alert("gii");

                        table.columns.adjust().draw();
                        $("#table1").resize();
                    } , 100);

                    });
                //}

                $('#table1').on('page.dt', function () {
                    //table.draw();
                    //alert("zzz1");
                    $("#table1").resize();

                });

                $('#table1').on('column-visibility.dt', function () {
                    //table.draw();
                    //alert("zzz2");
                    $("#table1").resize();

                });

                $('#table1').on('order.dt', function () {
                    //table.draw();
                    //alert("zzz3");
                    $("#table1").resize();

                });


                $('#table1').on('responsive-display.dt', function () {
                    //table.draw();
                    //alert("zzz4");
                    $("#table1").resize();

                });

                $('#table1').on('responsive-resize.dt', function () {
                    //table.draw();
                    //alert("zzz4");
                    $("#table1").resize();

                });
            };

            // Select2 for length menu styling
            var _componentSelect2 = function () {
                if (!$().select2) {
                    console.warn('Warning - select2.min.js is not loaded.');
                    return;
                }

                // Initialize
                $('.dataTables_length select').select2({
                    minimumResultsForSearch: Infinity,
                    dropdownAutoWidth: true,
                    width: 'auto'
                });
            };


            //
            // Return objects assigned to module
            //

            return {
                init: function () {
                    _componentDatatableBasic();
                    _componentSelect2();
                }
            }
        }();

        // Initialize module
        // ------------------------------

        document.addEventListener('DOMContentLoaded', function () {
            table1.init();
        });

        function DeleteItems(id_nearmiss) {

            bootbox.confirm({
                title: 'Confirm dialog',
                message: 'Are you Sure you want to Delete the current Record?',
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-primary'
                    },
                    cancel: {
                        label: 'Cancel',
                        className: 'btn-link'
                    }
                },
                callback: function (r) {
                   if (r == true) {
                    jQuery.ajax({
                          url: '@Url.Action("NearMissDelete", "NearMiss")',
                        type: 'POST',
                        dataType: "json",
                        data: { 'id_nearmiss': id_nearmiss },
                        success: function (result) {
                            window.location.href =
                                window.location.protocol + "//" +
                                window.location.host +
                                window.location.pathname
                        }
                    });
                    return true;
                }
                   else if (r == false) {

                       bootbox.hideAll();
                       return false;
                }

                }
            });
        }

            function getDetails() {
                var branch_name = document.getElementById("branch_name").value;

                   jQuery.ajax({
                                url: '@Url.Action("NearMissListSearch", "NearMiss")',
                        type: 'POST',
                        dataType: "json",
                        data: { 'branch_name': branch_name },
                        success: function (result) {
                            var params = {
                                branch_name: branch_name
                            };
                            queryString = $.param(params);

                            window.location.href =
                                window.location.protocol + "//" +
                                window.location.host +
                                window.location.pathname +
                               '?' + queryString;

                        }
                    });  
            }
        </script>

    }
