@model ISOStd.Models.QualitySurveyModels

@{
    ViewBag.Title = "QUalitySurveyDetails";
    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
}

@section featured {

    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("QualitySurveyList", "QualitySurvey", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Quality Survey List</span>
                    </a>
                    <span class="breadcrumb-item active"> Air/Water/Noise Quality Test Survey Details</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            <div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Air/Water/Noise Quality Test Survey Details</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>
                </div>
            </div>
        </div>
        <div>
            <div class="card-header bg-white header-elements-sm-inline">

                <div class="header-elements">
                    @if (Obj.GetCurrentUserSession().AirNoise.Contains("3"))
                    {
                        <a class="btn bg-orange btn-labeled btn-labeled-left" data-style="radius" href='@Url.Action("QualitySurveyEdit", "QualitySurvey", new { id_qualitysurvey = Model.id_qualitysurvey.ToString() }  )' title="Edit" onclick="HyperLinkProgressIconFunction()">
                            <b>  <i class="icon-add-to-list"></i></b> Edit
                        </a>
                    }
                    @Html.ActionLink("Back to List", "QualitySurveyList", null, new { @class = "btn btn-outline bg-orange text-orange border-orange ml-3", onclick = "HyperLinkProgressIconFunction()" })
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">
                <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                    <thead></thead>
                    <tbody>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded ">
                                    @Html.DisplayNameFor(model => model.Survey_date)
                                </p>
                            </td>
                            <td class="col">
                                @if (Model.Survey_date > Convert.ToDateTime("01/01/0001"))
                                {
                                    <p class="bg-dark py-1 px-2 rounded">
                                        @Model.Survey_date.ToString("dd/MM/yyyy")
                                    </p>
                                }
                            </td>
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded ">
                                    @Html.DisplayNameFor(model => model.Survey_for)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.Survey_for)
                                </p>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded ">
                                    @Html.DisplayNameFor(model => model.ThirdParty)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.ThirdParty)
                                </p>

                            </td>
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded ">
                                    @Html.DisplayNameFor(model => model.ConductedBy)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.ConductedBy)
                                </p>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded ">
                                    @Html.DisplayNameFor(model => model.Criteria)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.Criteria)
                                </p>
                            </td>
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded ">
                                    @Html.DisplayNameFor(model => model.VerifiedBy)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.VerifiedBy)
                                </p>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded ">
                                    @Html.DisplayNameFor(model => model.Report)
                                </p>
                            </td>
                            <td class="col">

                                @if (Model.Report != null && Model.Report != "" && Model.Report.Length > 0)
                                {
                                    foreach (var docs in Model.Report.Trim(',').Split(','))
                                    {

                                        <p class="bg-dark py-1 px-2 rounded">
                                            <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" style="color: orange;">
                                                @System.IO.Path.GetFileName(docs)
                                            </a>
                                        </p>
                                    }
                                }

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded ">
                                    @Html.DisplayNameFor(model => model.ExpDate)
                                </p>
                            </td>
                            <td class="col">

                                @if (Model.ExpDate > Convert.ToDateTime("01/01/0001"))
                                {
                                    <p class="bg-dark py-1 px-2 rounded">
                                        @Model.ExpDate.ToString("dd/MM/yyyy")
                                    </p>
                                }


                            </td>
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded ">
                                    @Html.DisplayNameFor(model => model.ReviewDate)
                                </p>
                            </td>
                            <td class="col">

                                @if (Model.ReviewDate > Convert.ToDateTime("01/01/0001"))
                                {
                                    <p class="bg-dark py-1 px-2 rounded">
                                        @Model.ReviewDate.ToString("dd/MM/yyyy")
                                    </p>
                                }


                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded ">
                                    @Html.DisplayNameFor(model => model.Location)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.Location)
                                </p>

                            </td>
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded ">
                                    @Html.DisplayNameFor(model => model.IsLimit)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.IsLimit)
                                </p>
                            </td>
                        </tr>
                        @if (Model.IsLimit.ToLower() == "no")
                        {
                            <tr class="row">
                                <td class="col-xs-3 col-md-2">
                                    <p class="bg-brown py-1 px-2 rounded ">
                                        @Html.DisplayNameFor(model => model.Remarks)
                                    </p>
                                </td>
                                <td class="col">
                                    <p class="bg-dark py-1 px-2 rounded">
                                        @Html.DisplayFor(model => model.Remarks)
                                    </p>

                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>



    </div>





@section scripts {
    <script>
    //----zzz
    $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
    });
    //zzz----


    </script>


}
