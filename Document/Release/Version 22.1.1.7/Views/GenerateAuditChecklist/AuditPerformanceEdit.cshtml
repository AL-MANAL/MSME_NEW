@model ISOStd.Models.GenerateAuditChecklistModels
@using System.Data;
@{
    ViewBag.Title = "EditAuditPerformance";
    System.Data.DataSet dsrating = new System.Data.DataSet();
    DataSet dsAudit = new DataSet();

    if (ViewBag.AuditRating != null)
    {
        dsrating = ViewBag.AuditRating;
    }

    if (ViewBag.dsAudit != null)
    {
        dsAudit = ViewBag.dsAudit;

    }
    ISOStd.Models.AuditPerformanceModelsList objAuditPerformanceEvalList = new ISOStd.Models.AuditPerformanceModelsList();

    if (ViewBag.PerformanceElement != null)
    {
        objAuditPerformanceEvalList = ViewBag.PerformanceElement;
    }

    Dictionary<string, string> dicPerformanceElements = new Dictionary<string, string>();
    if (ViewBag.dicPerformanceElement != null)
    {
        dicPerformanceElements = ViewBag.dicPerformanceElement;
    }
}

<div class="groupedassets margin10">
    <span class="groupedassetshead margin10 onestphdcolor"></span>
</div>
@section featured {




    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>


        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>

                    <a href="@Url.Action("AuditChecklistList", "GenerateAuditChecklist", new { id_AuditChecklist = Model.id_AuditChecklist })" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Audit Checklists</span>
                    </a>


                    <span class="breadcrumb-item active"> Update Audit Performance</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            <div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>


                            @using (Html.BeginForm("PerformAuditReport", "GenerateAuditChecklist", FormMethod.Post, new { id = "form2", name = "form2" }))
                            {
                                @Html.AntiForgeryToken()

                                <input type="hidden" id="id_AuditChecklist" name="id_AuditChecklist" value="@Model.id_AuditChecklist" />
                                <input type="hidden" id="Department" name="Department" value="@Model.Department" />



                                <button type="submit" class="dropdown-item">
                                    <i class="icon-printer2"></i> Report
                                </button>

                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


}
@using (Html.BeginForm("AuditPerformanceEdit", "GenerateAuditChecklist", FormMethod.Post, new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()


    <input type="hidden" id="idt_checklist" name="idt_checklist" value="@Model.idt_checklist" />
    <input type="hidden" id="id_AuditChecklist" name="id_AuditChecklist" value="@Model.id_AuditChecklist" />


    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Generate Audit Checklist</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>

                </div>
            </div>
        </div>


        <select id="Department" name="Department" hidden>
            <option value='' hidden>Select</option>
            @if (ViewBag.Department != null)
            {
                foreach (var item in ViewBag.Department)
                {
                    if (item.Text == Model.Department)
                    {
                        <option value='@item.Value' selected>@item.Text</option>
                    }
                    else
                    {
                        <option value='@item.Value'>@item.Text</option>
                    }

                }
            }
        </select>



        <div class="card-body">
            <div class="container-fluid">

                <table class="table table-lg">

                    <tr class="row">
                        <td class="col-xs-3 col-md-2">

                            @Html.DisplayNameFor(model => model.AuditCriteria)

                        </td>
                        <td class="col">

                            @Html.DisplayFor(model => model.AuditCriteria)

                        </td>
                        <td class="col-xs-3 col-md-2">


                            @Html.DisplayNameFor(model => model.AuditNo)<text style="color:red;">*</text>

                        </td>
                        <td class="col">

                            <select class="form-control select-search select2-hidden-accessible" data-fouc id="AuditNo" name="AuditNo" required onchange="SetAudit()">
                                <option value='' hidden>Select</option>
                                @if (ViewBag.AuditNo != null)
                                {
                                    foreach (var item in ViewBag.AuditNo)
                                    {
                                        if (item.Text == Model.AuditNo)
                                        {
                                            <option value='@item.Value' selected>@item.Text</option>
                                        }
                                        else
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }

                                    }
                                }
                            </select>

                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">

                            @Html.DisplayNameFor(model => model.AuditDate)<text style="color:red;">*</text>

                        </td>
                        <td class="col">


                            <input class="form-control" type="date" id="AuditDate" name="AuditDate" value="@Model.AuditDate.ToString("yyyy-MM-dd")" required" />

                        </td>
                        <td class="col-xs-3 col-md-2">


                            @Html.DisplayNameFor(model => model.Department)

                        </td>
                        <td class="col">

                            <select class="form-control select-search select2-hidden-accessible" data-fouc id="Department1" name="Department1" disabled>
                                <option value='' hidden>Select</option>
                                @if (ViewBag.Department != null)
                                {
                                    foreach (var item in ViewBag.Department)
                                    {
                                        if (item.Text == Model.Department)
                                        {
                                            <option value='@item.Value' selected>@item.Text</option>
                                        }
                                        else
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }

                                    }
                                }
                            </select>

                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">

                            @Html.DisplayNameFor(model => model.Auditors)

                        </td>
                        <td class="col">

                            @Html.TextAreaFor(model => model.Auditors, new { @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position" })

                        </td>
                        <td class="col-xs-3 col-md-2">

                            @Html.DisplayNameFor(model => model.Auditee)

                        </td>
                        <td class="col">

                            @Html.TextAreaFor(model => model.Auditee, new { @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position" })

                        </td>
                    </tr>


                </table>


              
              @*  @if (ViewBag.AuditQuestions != null)
                {
                    int iSrno = 0, itmctn = 0;


                    foreach (var item in ViewBag.AuditQuestions)
                    {
                        iSrno = iSrno + 1;
                        itmctn = itmctn + 1;

                        if (ncount >= 1)
                        {

                            ncount--;
                        }
                        else
                        {
                            n = 1;
                            c = 2;
                        }




                        if (n == c)
                        {



                            <div class="card-group-control card-group-control-left border-*-3" id="accordion-control">
                                <div class="card">
                                    <div class="card-header">
                                        <h6 class="card-title">
                                            <a data-toggle="collapse" class="text-default" href="#accordion-control-group_@itmctn" aria-expanded="true">
                                               @item.Text
                                                <input type="hidden" id="Audit_Elements @item.Value" name="Audit_Elements @item.Value" value="@item.Value" />
                                            </a>
                                        </h6>
                                    </div>

                                    <div id="accordion-control-group_@itmctn" class="collapse show" data-parent="#accordion-control">
                                        <div class="card-body">
                                            @if (dsrating.Tables.Count > 0 && dsrating.Tables[0].Rows.Count > 0)
                                            {
                                                <fieldset class="border p-2">
                                                    <legend class="font-weight-semibold"><i class="icon-file-text mr-2"></i> Rating details</legend>
                                                    @if (dicPerformanceElements.ContainsKey(item.Value))
                                                    {
                                                        for (int rating = 0; rating < dsrating.Tables[0].Rows.Count; rating++)
                                                        {

                                                            if (ViewBag.PerformanceElement != null)
                                                            {

                                                                if (dicPerformanceElements[item.Value] == dsrating.Tables[0].Rows[rating]["id_auditratings"].ToString())
                                                                {



                                                                    <div class="form-check">
                                                                        <label class="form-check-label">
                                                                            <input type="radio" id="id_auditratings @item.Value" name="id_auditratings @item.Value" class="id_auditratings @item.Value"
                                                                                   value="@dsrating.Tables[0].Rows[rating]["id_auditratings"].ToString()" checked />@dsrating.Tables[0].Rows[rating]["Options"].ToString()
                                                                            </label>
                                                                        </div>
                                                                    }
                                                                    else
                                                                    {<div class="form-check">
                                                                            <label class="form-check-label">
                                                                                <input type="radio" id="id_auditratings @item.Value" name="id_auditratings @item.Value" class="id_auditratings @item.Value"
                                                                                       value="@dsrating.Tables[0].Rows[rating]["id_auditratings"].ToString()" />@dsrating.Tables[0].Rows[rating]["Options"].ToString()
                                                                                </label>
                                                                            </div>
                                                                        }
                                                                        <input type="hidden" id="id_AuditPerformanceChecklist @item.Value" name="id_AuditPerformanceChecklist @item.Value" value="@item.Value" />

                                                                        <br />

                                                                        <br />
                                                                    }
                                                                }



                                                            }
                                                </fieldset>
                                            }












                                            else
                                            {
                                                <fieldset class="border p-2">
                                                    <legend class="font-weight-semibold"><i class="icon-file-text mr-2"></i> Rating details</legend>
                                                    @for (int rating = 0; rating < dsrating.Tables[0].Rows.Count; rating++)
                                                    {

                                                        if (ViewBag.PerformanceElement != null)
                                                        {
                                                            <div class="form-check">
                                                                <label class="form-check-label">
                                                                    <input type="radio" id="id_auditratings @item.Value" name="id_auditratings @item.Value" class="id_auditratings @item.Value"
                                                                           value="@dsrating.Tables[0].Rows[rating]["id_auditratings"].ToString()" />@dsrating.Tables[0].Rows[rating]["Options"].ToString()
                                                                    </label>
                                                                </div>
                                                            }


                                                        }
                                                </fieldset>
                                            }








                                            <br />

                                            <br />





                                            <div class="form-group row">
                                                <label class="col-lg-3 col-form-label">Comment:</label>
                                                <div class="col-lg-9">
                                                    <input class="form-control" type="text" id="comment @itmctn" name="comment @itmctn" value="@dsAudit.Tables[0].Rows[n]["comment"].ToString()" />
                                                </div>
                                            </div>




                                         

                                            <div class="form-group row">
                                                <label class="col-lg-3 col-form-label">Evidence:</label>

                                                <div class="col-lg-9">
                                                    <input class="form-control" type="file" name="evidence_upload @itmctn" id="evidence_upload @itmctn" value="@dsAudit.Tables[0].Rows[n]["evidence_upload"].ToString()" onchange="FileFormatValidation(this,@itmctn)" accept=".pdf" />
                                                    <input type="hidden" id="id_AuditPerformanceChecklist @itmctn" name="id_AuditPerformanceChecklist @itmctn" value="@dsAudit.Tables[0].Rows[n]["id_AuditPerformanceChecklist"].ToString()" />
                                                    @if (dsAudit.Tables[0].Rows[n]["evidence_upload"].ToString() != "")
                                                    {
                                                        <br />
                                                       
                                                        <div class="ml-3 align-content-end">
                                                            <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsAudit.Tables[0].Rows[n]["evidence_upload"].ToString() })' target="_blank">
                                                                <i class="icon-file-stats icon-2x text-pink-300 top-0"></i>
                                                                Preview
                                                            </a>
                                                        </div>


                                                    }
                                                </div>
                                            </div>








                                        </div>
                                            </div>
                                </div>




                            </div>
                        }
                         
                           
                                c = c + 1;
                                n = n + 1;

                          

                        }



                        <input type="hidden" id="itmctn" name="itmctn" value="@itmctn" />

                    }




                    @*<table class="table table-bordered table-striped table-hover datatable-responsive" id="table1">
                <thead>
                    <tr>
                        <th style="background-color: #e5eafe; color: #0099ff;">
                            Sr. No.
                        </th>
                        <th style="background-color: #e5eafe; color: #0099ff;">
                            Element
                        </th>
                        @if (dsrating.Tables.Count > 0 && dsrating.Tables[0].Rows.Count > 0)
                        {
                            for (int item = 0; item < dsrating.Tables[0].Rows.Count; item++)
                            {
                                <th style="background-color: #e5eafe; color: #0099ff;">
                                    @dsrating.Tables[0].Rows[item]["Options"].ToString()
                                </th>
                            }
                        }
                        <th style="background-color: #e5eafe; color: #0099ff;">
                            Comment
                        </th>
                        <th style="background-color: #e5eafe; color: #0099ff;">
                            Evidence
                        </th>
                    </tr>

                </thead>
                <tbody>
                    @{
                        int ncount = dsAudit.Tables[0].Rows.Count;
                        int n = 0, c = 0;
                    }
                    @if (ViewBag.AuditQuestions != null)
                    {
                        int iSrno = 0, itmctn = 0;


                        foreach (var item in ViewBag.AuditQuestions)
                        {
                            iSrno = iSrno + 1;
                            itmctn = itmctn + 1;

                            if (ncount >= 1)
                            {

                                ncount--;
                            }
                            else
                            {
                                n = 1;
                                c = 2;
                            }



                            <tr>
                                @if (n == c)
                                {
                                    <td>
                                        @iSrno
                                    </td>
                                    <td>
                                        @item.Text
                                        <input type="hidden" id="Audit_Elements @item.Value" name="Audit_Elements @item.Value" value="@item.Value" />
                                    </td>


                                    if (dsrating.Tables.Count > 0 && dsrating.Tables[0].Rows.Count > 0)
                                    {

                                        if (dicPerformanceElements.ContainsKey(item.Value))
                                        {
                                            for (int rating = 0; rating < dsrating.Tables[0].Rows.Count; rating++)
                                            {
                                                <td>
                                                    @if (ViewBag.PerformanceElement != null)
                                                    {

                                                        if (dicPerformanceElements[item.Value] == dsrating.Tables[0].Rows[rating]["id_auditratings"].ToString())
                                                        {
                                                            <input type="radio" id="id_auditratings @item.Value" name="id_auditratings @item.Value" class="id_auditratings @item.Value"
                                                                   value="@dsrating.Tables[0].Rows[rating]["id_auditratings"].ToString()" checked />
                                                        }
                                                        else
                                                        {
                                                            <input type="radio" id="id_auditratings @item.Value" name="id_auditratings @item.Value" class="id_auditratings @item.Value"
                                                                   value="@dsrating.Tables[0].Rows[rating]["id_auditratings"].ToString()" />
                                                        }
                                                        <input type="hidden" id="id_AuditPerformanceChecklist @item.Value" name="id_AuditPerformanceChecklist @item.Value" value="@item.Value" />
                                                    }

                                                </td>
                                            }
                                        }
                                        else
                                        {
                                            for (int rating = 0; rating < dsrating.Tables[0].Rows.Count; rating++)
                                            {
                                                <td>
                                                    @if (ViewBag.PerformanceElement != null)
                                                    {
                                                        <input type="radio" id="id_auditratings @item.Value" name="id_auditratings @item.Value" class="id_auditratings @item.Value"
                                                               value="@dsrating.Tables[0].Rows[rating]["id_auditratings"].ToString()" />
                                                    }

                                                </td>
                                            }
                                        }


                                    }
                                }
                                @if (n == c)
                                {

                                    <td>

                                        <input type="text" id="comment @itmctn" name="comment @itmctn" value="@dsAudit.Tables[0].Rows[n]["comment"].ToString()" />
                                    </td>
                                    <td>
                                        @if (dsAudit.Tables[0].Rows[n]["evidence_upload"].ToString() != "")
                                        {
                                            <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsAudit.Tables[0].Rows[n]["evidence_upload"].ToString() })' target="_blank">Preview</a>
                                        }
                                        <input type="file" name="evidence_upload @itmctn" id="evidence_upload @itmctn" value="@dsAudit.Tables[0].Rows[n]["evidence_upload"].ToString()" onchange="FileFormatValidation(this,@itmctn)" accept=".pdf" />
                                        <input type="hidden" id="id_AuditPerformanceChecklist @itmctn" name="id_AuditPerformanceChecklist @itmctn" value="@dsAudit.Tables[0].Rows[n]["id_AuditPerformanceChecklist"].ToString()" />
                                    </td>







                                }

                                @{
                                    c = c + 1;
                                    n = n + 1;

                                }
                            </tr>
                        }



                        <input type="hidden" id="itmctn" name="itmctn" value="@itmctn" />

                    }

                </tbody>
            </table>*@

                   
                 @*   <table class="table table-lg">
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.DisplayNameFor(model => model.Notes)

                            </td>
                        </tr>
                        <tr>
                            <td class="col" colspan="6">

                                @Html.TextAreaFor(model => model.Notes, new { @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position" })

                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-3 col-md-2">

                                @Html.DisplayNameFor(model => model.Remarks)

                            </td>
                        </tr>
                        <tr>
                            <td class="col" colspan="6">

                                @Html.TextAreaFor(model => model.Remarks, new { @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position" })

                            </td>
                        </tr>
                    </table>*@




                  

                </div>


                </div>

            </div>
          <div class="card">
    <div class="card-body">
    <div style="overflow-x:auto;">
          <table class="table table-lg">
                    <thead>

            <tr>
                <th>Sr. No.
                </th>
                <th>Element
                </th>
                @if (dsrating.Tables.Count > 0 && dsrating.Tables[0].Rows.Count > 0)
                {
                    for (int item = 0; item < dsrating.Tables[0].Rows.Count; item++)
                    {
                    <th>
                        @dsrating.Tables[0].Rows[item]["Options"].ToString()
                    </th>
                    }
                }
                 <th>Comment
                </th>
                <th>Evidence
                </th>
            </tr>
                        </thead>
           @{
             int ncount = dsAudit.Tables[0].Rows.Count;
               int n = 0,c=0;
            }
              <tbody>
            @if (ViewBag.AuditQuestions != null)
            {
                int iSrno = 0, itmctn = 0;

                
                foreach (var item in ViewBag.AuditQuestions)
                {
                    iSrno = iSrno + 1;
                    itmctn = itmctn + 1;

                    if (ncount >= 1)
                    {
                       
                        ncount--;
                    }
                    else
                    {
                        n = 1;
                        c = 2;
                    }
                        

                        
                <tr>
                      @if (n == c)
                      { 
                    <td>
                        @iSrno
                    </td>
                    <td>
                        @item.Text
                        <input type="hidden" id="Audit_Elements @item.Value" name="Audit_Elements @item.Value" value="@item.Value"/>
                    </td>


                    if (dsrating.Tables.Count > 0 && dsrating.Tables[0].Rows.Count > 0)
                    {

                        if (dicPerformanceElements.ContainsKey(item.Value))
                        {
                            for (int rating = 0; rating < dsrating.Tables[0].Rows.Count; rating++)
                            {                            
                        <td>
                            @if (ViewBag.PerformanceElement != null)
                            {

                                if (dicPerformanceElements[item.Value] == dsrating.Tables[0].Rows[rating]["id_auditratings"].ToString())
                                {                                            
                                <input type="radio" id="id_auditratings @item.Value" name="id_auditratings @item.Value" class="id_auditratings @item.Value" 
                                                value="@dsrating.Tables[0].Rows[rating]["id_auditratings"].ToString()" checked/>
                                }
                                else
                                {
                                <input type="radio" id="id_auditratings @item.Value" name="id_auditratings @item.Value" class="id_auditratings @item.Value" 
                                                value="@dsrating.Tables[0].Rows[rating]["id_auditratings"].ToString()" />
                                }
                                <input type="hidden" id="id_AuditPerformanceChecklist @item.Value" name="id_AuditPerformanceChecklist @item.Value" value="@item.Value"/>
                            }

                        </td>
                            }
                        }
                        else
                        {
                            for (int rating = 0; rating < dsrating.Tables[0].Rows.Count; rating++)
                            {                            
                                <td>
                                    @if (ViewBag.PerformanceElement != null)
                                    {                                       
                                                <input type="radio" id="id_auditratings @item.Value" name="id_auditratings @item.Value" class="id_auditratings @item.Value" 
                                                value="@dsrating.Tables[0].Rows[rating]["id_auditratings"].ToString()" />                                        
                                    }
                               
                                </td>
                            }
                        }
                        

                    }
                      }
                    @if (n == c)
                    {     
                               
                    <td>
                        
                        <input type="text" class="form-control" id="comment @itmctn" name="comment @itmctn" value="@dsAudit.Tables[0].Rows[n]["comment"].ToString()" style="height:60px;width:200px"/>
                    </td>
                        <td>
                             @if (dsAudit.Tables[0].Rows[n]["evidence_upload"].ToString() != "")
                              {
                                <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsAudit.Tables[0].Rows[n]["evidence_upload"].ToString() })' target="_blank">Preview</a>
                              }
                      <input type="file" name="evidence_upload @itmctn" id="evidence_upload @itmctn" value="@dsAudit.Tables[0].Rows[n]["evidence_upload"].ToString()" onchange="FileFormatValidation(this,@itmctn)" accept=".pdf" style="height: 38px;"/>
                        </td>
                         <td>
                        
                        <input type="hidden" id="id_AuditPerformanceChecklist @itmctn" name="id_AuditPerformanceChecklist @itmctn" value="@dsAudit.Tables[0].Rows[n]["id_AuditPerformanceChecklist"].ToString()" style="height:60px;width:200px"/>
                    </td>
      
                    }
                  
                   @{
                    c = c + 1;
                    n = n + 1;
                       
                   }
                </tr>
                }
                  <tr>
                   <td>
                        <input type="hidden" id="itmctn" name="itmctn" value="@itmctn" />
                       
                   </td>
               </tr>
            }
          </tbody>
        </table>
        </div>
        </div>
               <div class="card">
           <div class="card-body">
                <table class="table table-lg">
             <tr class="row">
                        <td class="col-xs-3 col-md-2">



                            @Html.DisplayNameFor(model => model.Notes)

                        </td>
                    </tr>
                    <tr>
                        <td class="col">
                            @Html.TextAreaFor(model => model.Notes, new { @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position" })

                        </td>
                    </tr>
                    <tr>
                        <td class="col-xs-3 col-md-2">

                            @Html.DisplayNameFor(model => model.Remarks)

                        </td>
                    </tr>
                    <tr>
                        <td class="col">

                            @Html.TextAreaFor(model => model.Remarks, new { @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position" })

                        </td>
                    </tr>
        </table>
               </div>
          </div>
                 <div class="card-footer bg-white d-flex justify-content-between align-items-center">
          @Html.ActionLink("Back to List", "AuditList", null,new {id_AuditChecklist=Model.id_AuditChecklist}, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })
  
          <button type="submit" id="btnCreate" value="Save" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Add</button>
      </div>

                   </div>
            <div id="dvItems" style="overflow: auto; display: none;">
                <table id="team-list" style="width: 100%">
                    <tr>
                        <th>Evidence</th>
                    </tr>
                </table>
            </div>
        }

@section Scripts {
    <script>
       
         //----zzz
    $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
    });
    //zzz----

         function FileFormatValidation(file, cnt) {

             var ext = file.value.split(".").pop().toLowerCase();
             if ($.inArray(ext, ["doc", "pdf", "docx", "jpg", "jpeg", "gif"]) == -1) {
                 file.value = "";
                 bootbox.alert({
                     title: 'File type',
                     message: 'Invalid file format, please upload only pdf format.'
                 });
             }
             else {

                 AddEvidence(cnt)
             }

         }
         function AddEvidence(cnt) {



             var table = document.getElementById("team-list");
             var row = table.insertRow();
             var cell0 = row.insertCell(0);
             var n = "evidence_upload" + " " + cnt;
             var evidence_upload = document.getElementById(n).value;

             evidence_uploadServerPath = UploadDocument(cnt);
             cell0.innerHTML = "<input type='hidden' id='evidence_upload" + cnt + "' name='evidence_upload" + cnt + "' value='" + evidence_uploadServerPath + "'>" + evidence_upload;

         }

         function UploadDocument(ind) {


             var evidence_upload = ($("#evidence_upload" + " " + ind)).files; //$('#testfile').file;

             var formData = new FormData();

             var totalFiles = document.getElementById("evidence_upload" + " " + ind).files.length;

             for (var i = 0; i < totalFiles; i++) {
                 var file = document.getElementById("evidence_upload" + " " + ind).files[i];
                 formData.append("evidence_upload", file);
             }
             jQuery.ajax({
                 url: '@Url.Action("UploadDocument", "GenerateAuditChecklist")',
                     type: 'POST',
                     contentType: false,
                     processData: false,
                     data: formData,
                     success: function (result) {

                         //document.getElementById("evidence_upload" + " " + ind).value = result;
                         document.getElementById("evidence_upload" + ind).value = result;
                         evidence_uploadServerPath = result;
                         return result;
                     }

                 });
         }

         function SetAudit() {
             var AuditNo = $('#AuditNo').chosen().val();
             var dept = $('#Department1').chosen().val();
             jQuery.ajax({
                 url: '@Url.Action("FungetAuditDetail", "GenerateAuditChecklist")',
                 type: 'POST',
                 dataType: "json",
                 data: { 'AuditNo': AuditNo, 'dept': dept },
                 success: function (result) {
                     document.getElementById("Auditee").value = result.Auditee;
                     document.getElementById("Auditors").value = result.Auditor
                 }
             });
        }





        var table1 = function () {


            //
            // Setup module components
            //

            // Basic Datatable examples
            var _componentDatatableBasic = function () {
                if (!$().DataTable) {
                    console.warn('Warning - datatables.min.js is not loaded.');
                    return;
                }

                //Setting datatable defaults
                $.extend($.fn.dataTable.defaults, {
                    autoWidth: false,
                    responsive: true,
                    paging: false,
                    ordering: false,
                    info: false,
                    searching: false,
                    colReorder: false,

                });


                var table = $('#table1').DataTable({


                    stateSave: true,

                    scrollY: '350px',
                    scrollCollapse: true,


                    keys: {
                        className: 'focus focus-success'
                    },






                });
                // Adjust columns on window resize
                setTimeout(function () {
                    $(window).on('resize', function () {
                        table.columns.adjust();
                    });
                }, 100);


                //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                $('.sidebar-control').on('click', function () {

                    setTimeout(function () {
                        //alert("gii");

                        table.columns.adjust().draw();
                        $("#table1").resize();
                    }, 100);

                });
                //}

                $('#table1').on('page.dt', function () {
                    //table.draw();
                    //alert("zzz1");
                    $("#table1").resize();

                });

                $('#table1').on('column-visibility.dt', function () {
                    //table.draw();
                    //alert("zzz2");
                    $("#table1").resize();

                });

                $('#table1').on('order.dt', function () {
                    //table.draw();
                    //alert("zzz3");
                    $("#table1").resize();

                });


                $('#table1').on('responsive-display.dt', function () {
                    //table.draw();
                    //alert("zzz4");
                    $("#table1").resize();

                });


                $('#table1').on('responsive-resize.dt', function () {
                    //table.draw();
                    //alert("zzz4");
                    $("#table1").resize();

                });






            };






            // Select2 for length menu styling
            var _componentSelect2 = function () {
                if (!$().select2) {
                    console.warn('Warning - select2.min.js is not loaded.');
                    return;
                }

                // Initialize
                $('.dataTables_length select').select2({
                    minimumResultsForSearch: Infinity,
                    dropdownAutoWidth: true,
                    width: 'auto'
                });
            };


            //
            // Return objects assigned to module
            //

            return {
                init: function () {
                    _componentDatatableBasic();
                    _componentSelect2();
                }
            }
        }();


        // Initialize module
        // ------------------------------

        document.addEventListener('DOMContentLoaded', function () {
            table1.init();
        });













    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
