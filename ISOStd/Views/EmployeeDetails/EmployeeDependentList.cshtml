@using PagedList;
@using PagedList.Mvc;

@model List<ISOStd.Models.EmployeeDependentModels>

    @{
    ViewBag.Title = "";
    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
    }

    @section featured {
    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>
        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action(" Index", "Home" , null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Home</span>
                    </a>
                    <a href="@Url.Action("EmployeeList", "EmployeeDetails" , null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Employee Management</span>
                    </a>
                    <span class="breadcrumb-item active">Employee Dependents List</span>
                </div>
                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>
            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">
                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">
                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
    }


    <style>
        .hidden {
            display: none !important;
        }
    </style>

    <div class="card">

        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Employee Dependents List</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>
                </div>
            </div>
        </div>


        <div class="card-body">
            <table class="table table-bordered table-striped table-hover datatable-responsive" id="employee">
                <thead>

                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.First().FirstName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().LastName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().DOB)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().Gender)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().Relationship)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().PassportNo)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().PassportExpDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().VisaNo)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().VisaExpDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().EIDNo)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().EIDExpDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().HealthInsProvider)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().HealthInsExp)
                        </th>
                        <th class="not-export-column">Edit</th>
                        <th class="not-export-column">Delete</th>

                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Count() > 0)
                    {
                    int i = 0;
                    foreach (var item in Model)
                    {
                    i = i + 1;
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.FirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LastName)
                        </td>
                        <td>
                            @if (item.DOB > Convert.ToDateTime("01/01/0001"))
                            {
                                @item.DOB.ToString("dd/MM/yyyy")
                            }

                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Gender)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Relationship)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PassportNo)
                        </td>
                        <td>
                            @if (item.PassportExpDate > Convert.ToDateTime("01/01/0001"))
                            {
                                @item.PassportExpDate.ToString("dd/MM/yyyy")
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.VisaNo)
                        </td>
                        <td>
                            @if (item.VisaExpDate > Convert.ToDateTime("01/01/0001"))
                            {
                                @item.VisaExpDate.ToString("dd/MM/yyyy")
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EIDNo)
                        </td>
                        <td>

                            @if (item.EIDExpDate > Convert.ToDateTime("01/01/0001"))
                            {
                                @item.EIDExpDate.ToString("dd/MM/yyyy")
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.HealthInsProvider)
                        </td>
                        <td>

                            @if (item.HealthInsExp > Convert.ToDateTime("01/01/0001"))
                            {
                                @item.HealthInsExp.ToString("dd/MM/yyyy")
                            }
                        </td>

                        <td>
                            <a href='@Url.Action("EmployeeDependentsEdit", "EmployeeDetails", new { id_hr_emp_dependents= item.id_hr_emp_dependents })' title="Edit" onclick="HyperLinkProgressIconFunction()">
                                <span class="badge badge-info">Edit</span>
                            </a>
                        </td>
                        <td>
                            <span class="badge badge-danger" title="Delete" onclick="DeleteItems(@item.id_hr_emp_dependents,@item.emp_no)" style="cursor:pointer;">Delete</span>
                        </td>
                    </tr>
                    }
                    }

                </tbody>
            </table>
        </div>
    </div>

    @section scripts {
    <script type="text/javascript">

       //----zzz
                    $(document).ready(function () {

        @if (TempData["alertdata"] != null) {

           @: new Noty({
                                   @:     text: '@TempData["alertdata"]',
                                   @:     type: 'error'
                                   @: }).show();
                                        }

        @if (@TempData["Successdata"] != null ) {

        @:    new Noty({
                                 @:       text: '@TempData["Successdata"]',
                                 @:       type: 'success'
         @:}).show();
        }
                    });
                    //zzz----


        var employee = function () {

            var ShowEdit = @(Obj.GetCurrentUserSession().Emp.Contains("3") ? "true" : "false");
            var ShowDel = @(Obj.GetCurrentUserSession().Emp.Contains("5") ? "true" : "false");


            // Basic Datatable examples
            var _componentDatatableBasic = function () {
                if (!$().DataTable) {
                    console.warn('Warning - datatables.min.js is not loaded.');
                    return;
                }

                //Setting datatable defaults
                $.extend($.fn.dataTable.defaults, {
                    autoWidth: false,
                    responsive: true,
                    columnDefs: [{
                        orderable: false,
                        width: 100,
                        targets: [13, 14]
                    }, {
                            'targets': [14],
                            'visible': ShowDel
                        }, {
                            'targets': [13],
                            'visible': ShowEdit
                        }],


                    colReorder: false,
                    dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                    //dom: 'lBfrtip',
                    language: {
                        search: '<span>Filter:</span> _INPUT_',
                        searchPlaceholder: 'Type to filter...',
                        lengthMenu: '<span>Show:</span> _MENU_',
                        paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                    }
                });

                var myClass = "";
                var Delclass = @(Obj.GetCurrentUserSession().Emp.Contains("4") ? "true" : "false");
                if (Delclass == false) { myClass = 'hidden' };


                var table = $('#employee').DataTable({

                    lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                    colReorder: {
                        fixedColumnsLeft: 1
                    },
                    stateSave: true,
                    stateSaveParams: function (settings, data) {
                        for (var i = 0, ien = data.columns.length; i < ien; i++) {
                            delete data.columns[i].visible;
                            delete data.columns[i].search;
                        }
                    },
                    scrollY: '350px',
                    scrollCollapse: true,
                   
                    keys: {
                        className: 'focus focus-success'
                    },

                    buttons: {
                        buttons: [
                            {
                                extend: 'copyHtml5',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'employee Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },
                            {
                                extend: 'excelHtml5',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'employee Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },

                            },
                            {
                                extend: 'pdfHtml5',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'employee Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },
                            {
                                extend: 'csvHtml5',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'employee Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },
                            {
                                extend: 'print',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'employee Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },

                            {
                                extend: 'colvis',
                                text: '<i class="icon-three-bars"></i>',
                                className: 'btn bg-blue btn-icon dropdown-toggle',
                                columns: ':visible:not(.not-export-column)'
                            }
                        ]
                    }
                });
                // Adjust columns on window resize
                setTimeout(function () {
                    $(window).on('resize', function () {
                        table.columns.adjust();
                    });
                }, 100);


                //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                $('.sidebar-control').on('click', function () {

                    setTimeout(function () {
                        //alert("gii");

                        table.columns.adjust().draw();
                        $("#employee").resize();
                    }, 100);

                });
                //}

                $('#employee').on('page.dt', function () {
                    //table.draw();
                    //alert("zzz1");
                    $("#employee").resize();

                });

                $('#employee').on('column-visibility.dt', function () {
                    //table.draw();
                    //alert("zzz2");
                    $("#employee").resize();

                });

                $('#employee').on('order.dt', function () {
                    //table.draw();
                    //alert("zzz3");
                    $("#employee").resize();

                });
                
                $('#employee').on('responsive-display.dt', function () {
                    //table.draw();
                    //alert("zzz4");
                    $("#employee").resize();

                });
                
                $('#employee').on('responsive-resize.dt', function () {
                    //table.draw();
                    //alert("zzz4");
                    $("#employee").resize();

                });

            };

            // Select2 for length menu styling
            var _componentSelect2 = function () {
                if (!$().select2) {
                    console.warn('Warning - select2.min.js is not loaded.');
                    return;
                }

                // Initialize
                $('.dataTables_length select').select2({
                    minimumResultsForSearch: Infinity,
                    dropdownAutoWidth: true,
                    width: 'auto'
                });
            };


            //
            // Return objects assigned to module
            //

            return {
                init: function () {
                    _componentDatatableBasic();
                    _componentSelect2();
                }
            }
        }();


        // Initialize module
        // ------------------------------

        document.addEventListener('DOMContentLoaded', function () {
            employee.init();
        });

        function DeleteItems(id_hr_emp_dependents, emp_no) {
            bootbox.confirm({
                title: 'Confirm dialog',
                message: 'Are you Sure you want to Delete the current Record?',
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-primary'
                    },
                    cancel: {
                        label: 'Cancel',
                        className: 'btn-link'
                    }
                },
                callback: function (r) {
                    if (r == true) {
                        jQuery.ajax({

                            url: '@Url.Action("DependentsDelete", "EmployeeDetails")',
                            type: 'POST',
                            dataType: "json",
                            data: { 'id_hr_emp_dependents': id_hr_emp_dependents, 'emp_no': emp_no },
                            success: function (result) {

                                var params = {
                                    emp_no: emp_no
                                };
                                //// Add new params to the querystring dictionary

                                queryString = $.param(params);

                                window.location.href =
                                    window.location.protocol + "//" +
                                    window.location.host +
                                    window.location.pathname +
                                    '?' + queryString;

                            }
                        });
                        return true;
                    }
                    else if (r == false) {
                        bootbox.hideAll();
                        return false;
                    }
                }
            });
        }
    </script>
}
   
