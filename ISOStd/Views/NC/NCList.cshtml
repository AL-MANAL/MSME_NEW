@using PagedList;
@using PagedList.Mvc;

@model List<ISOStd.Models.NCModels>

@{
    ViewBag.Title = "NCList";
    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
}
@{
    var ShowEdit = Obj.GetCurrentUserSession().NC.Contains("3") ? true : false;
    var ShowDel = Obj.GetCurrentUserSession().NC.Contains("5") ? true : false;
}
@section featured {

    <div class="page-header page-header-light">
        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <span class="breadcrumb-item active"> Nonconformance & Corrective Action</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">

                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">
                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}
<style>
    .hidden {
        display: none !important;
    }
</style>

<div class="card">
    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">Nonconformance & Corrective Action</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>
            </div>
        </div>
    </div>
    @if (Obj.GetCurrentUserSession().NC.Contains("3"))
    {
        <div>
            <div class="card-header bg-white header-elements-sm-inline">
                <div class="header-elements">
                    <a class="btn btn-outline bg-orange text-orange border-orange btn-ladda btn-ladda-progress ladda-button" data-style="radius" href='@Url.Action("AddNC", "NC")' title="Add New">
                        <span class="ladda-label">Report NC</span>
                        <span class="ladda-spinner"></span>
                    </a>
                </div>
            </div>
        </div>
    }
    <div class="card-body">
        <div class="options d-flex flex-fill">
            @using (Html.BeginForm("NCList", "NC", FormMethod.Post, new { id = "form1", name = "form1", style = "width:25%" }))
            {
                if (ViewBag.Branch != null)
                {
                    <select class="form-control select-search select2-hidden-accessible" data-fouc id="branch_name" name="branch_name" onchange="getDetails()">
                        <option value='' hidden>Division</option>
                        @if (ViewBag.Branch != null)
                        {
                            foreach (var item in ViewBag.Branch)
                            {
                                if (item.Value == ViewBag.Branch_name)
                                {
                                    <option value='@item.Value' selected>@item.Text</option>
                                }
                                else
                                {
                                    <option value='@item.Value'>@item.Text</option>
                                }
                            }
                        }
                    </select>
                }
            }
        </div>
    </div>

    <div class="card-body">
        <table class="table table-bordered table-striped table-hover datatable-responsive" id="nonconfirmance">

            <thead>
                <tr>
                    <th>
                        Sl No.
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().nc_no)
                    </th>
                    @*<th>
                        @Html.DisplayNameFor(model => model.First().division)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().department)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().location)
                    </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.First().nc_reported_date)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().nc_issuedto_status)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().nc_risk)
                    </th>
                    <th data-priority="2" class="text-center not-export-column">Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Count() > 0)
                {
                    int i = 0;
                    foreach (var item in Model)
                    {
                        i = i + 1;
                <tr>

                    <td>
                        @Html.ActionLink(i.ToString(), "NCDetails", new { id_nc = item.id_nc.ToString() }, new { onclick = "HyperLinkProgressIconFunction()" })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.nc_no)
                    </td>
                    @*<td>
                        @Html.DisplayFor(modelItem => item.division)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.department)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.location)
                    </td>*@
                    <td>
                        @if (item.nc_reported_date != null && item.nc_reported_date > Convert.ToDateTime("01/01/0001"))
                        {
                            @Html.Label(item.nc_reported_date.ToString("dd/MM/yyyy"))
                        }
                    </td>
                    <td>
                        @if (item.nc_issuedto_statusId == "1" || item.nc_issuedto_statusId == "2")
                        {
                            @Html.DisplayFor(modelItem => item.nc_issuedto_status)
                        }
                        else if (item.nc_issuedto_statusId == "0")
                        {
                            <text>Pending</text>
                        }
                        else
                        {
                            <text>Partially Accepted</text>
                        }

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.nc_risk)
                    </td>
                    <td class="text-center">
                        <div class="list-icons">
                            <div class="list-icons-item dropdown">
                                <a href="#" class="list-icons-item caret-0 dropdown-toggle" data-toggle="dropdown">
                                    <i class="icon-gear mr-2"></i>
                                </a>

                                <div class="dropdown-menu dropdown-menu-right">
                                    @if (item.nc_initial_statusId == "1")
                                    {
                                        <a class="dropdown-item" href='@Url.Action("AddDisposition", "NC", new { id_nc = item.id_nc.ToString() })' title="Immediate Actions(Disposition)" onclick="HyperLinkProgressIconFunction()">
                                            <i class="icon-history"></i>Immediate Actions
                                        </a>
                                        <a class="dropdown-item" href='@Url.Action("AddTeam", "NC", new { id_nc = item.id_nc.ToString() })' title="Team formation" onclick="HyperLinkProgressIconFunction()">
                                            <i class="icon-history"></i>Team formation
                                        </a>
                                        <a class="dropdown-item" href='@Url.Action("AddRCA", "NC", new { id_nc = item.id_nc.ToString() })' title="Root Cause Analysis" onclick="HyperLinkProgressIconFunction()">
                                            <i class="icon-history"></i>Root Cause Analysis
                                        </a>
                                        <a class="dropdown-item" href='@Url.Action("AddCA", "NC", new { id_nc = item.id_nc.ToString() })' title="Corrective Action" onclick="HyperLinkProgressIconFunction()">
                                            <i class="icon-history"></i>Corrective Action
                                        </a>
                                        if (item.ca_verfiry_duedate.ToString() != "" && item.ca_verfiry_duedate > Convert.ToDateTime("01/01/0001"))
                                        {
                                            <a class="dropdown-item" href='@Url.Action("AddVerification", "NC", new { id_nc = item.id_nc.ToString() })' title="Verification" onclick="HyperLinkProgressIconFunction()">
                                                <i class="icon-history"></i>Verification
                                            </a>
                                        }
                                        <a class="dropdown-item" href='@Url.Action("NCPDF", "NC", new { id_nc = item.id_nc.ToString() })' title="PDF Report">
                                            <i class="icon-history"></i>Generate Report
                                        </a>

                                    }

                                    @**@
                                    @if (item.nc_initial_statusId != "1")
                                    {
                                        if (ShowEdit)
                                        {
                                            <a class="dropdown-item" href='@Url.Action("NCEdit", "NC", new { id_nc = item.id_nc })' title="Edit NC details" onclick="HyperLinkProgressIconFunction()">
                                                <i class="icon-pencil7"></i>Edit
                                            </a>
                                        }
                                    @*<div class="dropdown-divider"></div>*@
                                    if (ShowDel)
                                    {
                                        <span class="dropdown-item text-center" title="Delete Document" onclick="DeleteItems(@item.id_nc)" style="cursor:pointer;"><i class="icon-bin"></i>Delete</span>
                                    }
                                }

                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@section scripts {

    <script type="text/javascript">

                       //----zzz
    $(document).ready(function () {

        @if (TempData["alertdata"] != null ) {

           @: new Noty({
           @:     text: '@TempData["alertdata"]',
           @:     type: 'error'
           @: }).show();
        }

        @if (@TempData["Successdata"] != null ) {

        @:    new Noty({
         @:       text: '@TempData["Successdata"]',
         @:       type: 'success'
         @:   }).show();
        }
    });
    //zzz----

 @*function setData(id) {

                var set_data = '';
                var element = $(this);
                var id = element.attr("id");
                $.ajax({
                    url: '@Url.Action("RiskMgmtInfo", "RiskMgmt")',
                    methos: "post",
                    async: false,
                    data: { id: id },
                    success: function (data) {
                        set_data = data;

                    }
                });
     return set_data;
 }*@



        var nonconfirmance = function () {
                       var ShowEdit = @(Obj.GetCurrentUserSession().NC.Contains("3") ? "true" : "false");
                       var ShowDel = @(Obj.GetCurrentUserSession().NC.Contains("5") ? "true" : "false");

                        // Basic Datatable examples
                        var _componentDatatableBasic = function () {
                            if (!$().DataTable) {
                                console.warn('Warning - datatables.min.js is not loaded.');
                                return;
                            }

                            //Setting datatable defaults
                            $.extend($.fn.dataTable.defaults, {
                                autoWidth: false,
                                responsive: true,
                                columnDefs: [{
                                    orderable: false,
                                    //width: 100,
                                    targets: 'not-export-column'

                                }],
                                responsivePriority: 2, targets: -1,
                                colReorder: false,
                                dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                                //dom: 'lBfrtip',
                                language: {
                                    search: '<span>Filter:</span> _INPUT_',
                                    searchPlaceholder: 'Type to filter...',
                                    lengthMenu: '<span>Show:</span> _MENU_',
                                    paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                                }
                            });

                var myClass = "";
                var Delclass= @(Obj.GetCurrentUserSession().Risk.Contains("4") ? "true" : "false");
                if (Delclass == false) { myClass = 'hidden' };

                            var table = $('#nonconfirmance').DataTable({
                                drawCallback: function () {
                                    $('[data-toggle="popover"]').popover({

                                        html: true,
                                        //content: setData,
                                        container: 'body'                                        
                                    });
                                    var dropdownMenu;

                                    // and when you show it, move it to the body
                                    $('.datatable-responsive').on('show.bs.dropdown', function (e) {

                                        // grab the menu
                                        dropdownMenu = $(e.target).find('.dropdown-menu');

                                        // detach it and append it to the body
                                        $('body').append(dropdownMenu.detach());

                                        // grab the new offset position
                                        var eOffset = $(e.target).offset();

                                        // make sure to place it where it would normally go (this could be improved)
                                        dropdownMenu.css({
                                            'display': 'block',
                                            'top': eOffset.top + $(e.target).outerHeight(),
                                            'left': eOffset.left
                                        });
                                    });

                                    // and when you hide it, reattach the drop down, and hide it normally
                                    $('.datatable-responsive').on('hide.bs.dropdown', function (e) {
                                        $(e.target).append(dropdownMenu.detach());
                                        dropdownMenu.hide();
                                    });
                                },
                                lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                                colReorder: {
                                    fixedColumnsLeft: 1
                                },
                                stateSave: true,
                                //stateSaveParams: function (settings, data) {
                                //    for (var i = 0, ien = data.columns.length; i < ien; i++) {
                                //        delete data.columns[i].visible;
                                //        delete data.columns[i].search;
                                //    }
                                //},
                                //scrollY: '350px',
                                scrollCollapse: true,


                                keys: {
                                    className: 'focus focus-success'
                                },

                                buttons: {
                                    buttons: [
                                        {
                                            extend: 'copyHtml5',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'NC Data export',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },
                                        },
                                        {
                                            extend: 'excelHtml5',
                                            className: myClass,
                                          //  className: 'btn btn-light',
                                            title: 'NC Data export',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },

                                        },
                                        {
                                            extend: 'pdfHtml5',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'NC Data export',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },
                                        },
                                        {
                                            extend: 'csvHtml5',
                                            className: myClass,
                                           // className: 'btn btn-light',
                                            title: 'NC Data export',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },
                                        },
                                        {
                                            extend: 'print',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'Risk Data export',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },
                                        },

                                        {
                                            extend: 'colvis',
                                            text: '<i class="icon-three-bars"></i>',
                                            className: 'btn bg-blue btn-icon dropdown-toggle',
                                            columns: ':visible:not(.not-export-column)'
                                        }
                                    ]
                                }
                            });

                            // Adjust columns on window resize
                            setTimeout(function () {
                                $(window).on('resize', function () {
                                    table.columns.adjust();
                                });
                            }, 100);


                            //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                            $('.sidebar-control').on('click', function () {

                                setTimeout(function () {
                                    //alert("gii");

                                    table.columns.adjust().draw();
                                    $("#nonconfirmance").resize();
                                }, 100);

                            });
                            //}

                            $('#nonconfirmance').on('page.dt', function () {
                                //table.draw();
                                //alert("zzz1");
                                $("#nonconfirmance").resize();

                            });

                            $('#nonconfirmance').on('column-visibility.dt', function () {
                                //table.draw();
                                //alert("zzz2");
                                $("#nonconfirmance").resize();

                            });

                            $('#nonconfirmance').on('order.dt', function () {
                                //table.draw();
                                //alert("zzz3");
                                $("#nonconfirmance").resize();

                            });

                            $('#nonconfirmance').on('responsive-display.dt', function () {
                                //table.draw();
                                //alert("zzz4");
                                $("#nonconfirmance").resize();

                            });

                            $('#nonconfirmance').on('responsive-resize.dt', function () {
                                //table.draw();
                                //alert("zzz4");
                                $("#nonconfirmance").resize();
                            });

                            //.on('order.dt', function () {
                            //    table.columns.adjust().draw();
                            //    $("#qhse").resize(); })
                            //.on('search.dt', function () {
                            //    table.columns.adjust().draw();
                            //    $("#qhse").resize(); })

                            //.on('column-visibility.dt', function () {
                            //    table.columns.adjust().draw();
                            //    $("#qhse").resize();
                            //})

                        };

                        // Select2 for length menu styling
                        var _componentSelect2 = function () {
                            if (!$().select2) {
                                console.warn('Warning - select2.min.js is not loaded.');
                                return;
                            }

                            // Initialize
                            $('.dataTables_length select').select2({
                                minimumResultsForSearch: Infinity,
                                dropdownAutoWidth: true,
                                width: 'auto'
                            });
                        };

                        //
                        // Return objects assigned to module
                        //

                        return {
                            init: function () {
                                _componentDatatableBasic();
                                _componentSelect2();
                            }
                        }
                    }();


                    // Initialize module
                    // ------------------------------

                    document.addEventListener('DOMContentLoaded', function () {
                        nonconfirmance.init();
                    });


           function DeleteItems(id_nc) {
            bootbox.confirm({
                title: 'Confirm dialog',
                message: 'Are you Sure you want to Delete the current Record?',
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-primary'
                    },
                    cancel: {
                        label: 'Cancel',
                        className: 'btn-link'
                    }
                },
                callback: function (r) {
                    if (r == true) {
                             jQuery.ajax({
                                 url: '@Url.Action("NCDocDelete", "NC")',
                                 data: { id_nc: id_nc },
                        type: 'POST',
                        dataType: "json",
                        success: function (result) {
                            //// Add new params to the querystring dictionary
                            window.location.href =
                                window.location.protocol + "//" +
                                window.location.host +
                                window.location.pathname

                        }
                    });
                    return true;
                }
                else if (r == false) {
                        bootbox.hideAll();
                        return false;
                    }

                }
               });
           }

              function getDetails() {
                var branch_name = document.getElementById("branch_name").value;

                   @*jQuery.ajax({
                                url: '@Url.Action("NCList", "NC")',
                        type: 'POST',
                        dataType: "json",
                        data: { 'branch_name': branch_name },
                        success: function (result) {*@
                            var params = {
                                branch_name: branch_name
                            };
                            queryString = $.param(params);

                            window.location.href =
                                window.location.protocol + "//" +
                                window.location.host +
                                window.location.pathname +
                               '?' + queryString;

                    //    }
                    //});
            }

    </script>

}

