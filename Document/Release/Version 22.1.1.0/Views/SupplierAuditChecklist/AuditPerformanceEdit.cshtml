@model ISOStd.Models.SupplierAuditChecklistModels
@using System.Data;
@{
    ViewBag.Title = "EditAuditPerformance";
    System.Data.DataSet dsrating = new System.Data.DataSet();
    DataSet dsAudit = new DataSet();

    if (ViewBag.AuditRating != null)
    {
        dsrating = ViewBag.AuditRating;
    }

    if (ViewBag.dsAudit != null)
    {
        dsAudit = ViewBag.dsAudit;
        
    }
    ISOStd.Models.SupplierAuditPerformanceModelsList objAuditPerformanceEvalList = new ISOStd.Models.SupplierAuditPerformanceModelsList();

    if (ViewBag.PerformanceElement != null)
    {
        objAuditPerformanceEvalList = ViewBag.PerformanceElement;
    }
   
    Dictionary<string, string> dicPerformanceElements = new Dictionary<string, string>();
    if (ViewBag.dicPerformanceElement != null)
    {
        dicPerformanceElements = ViewBag.dicPerformanceElement;
    }
}

<div class="groupedassets margin10">
    <span class="groupedassetshead margin10 onestphdcolor">Update Audit Performance</span>
</div>
 <div id="divmsg">
        @if (TempData["alertdata"] != null)
        {
            <span class="errMsg" style="color: red;font-weight: bold;">@TempData["alertdata"]</span>
        }
        @if (TempData["Successdata"] != null)
        {
            <span class="errMsg" style="color: green; font-weight: bold;">@TempData["Successdata"]</span>
        }
    </div>
@using (Html.BeginForm("AuditPerformanceEdit", "SupplierAuditChecklist", FormMethod.Post, new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()

    <fieldset>
        <legend>EmployeeCompetenceEvalModels</legend>
        <input type="hidden" id="idt_checklist" name="idt_checklist" value="@Model.idt_checklist" />
         <input type="hidden" id="id_AuditChecklist" name="id_AuditChecklist" value="@Model.id_AuditChecklist" />
         <select id="Department" name="Department" hidden>
                                <option value='' hidden>Select</option>
                                @if (ViewBag.Department != null)
                                {
                                    foreach (var item in ViewBag.Department)
                                    {
                                        if(item.Text==Model.Department)
                                        {
                                        <option value='@item.Value' selected>@item.Text</option>
                                        }
                                        else
                                        {
                                         <option value='@item.Value'>@item.Text</option>
                                        }
                                        
                                    }
                                }
                            </select>
        <table id="tabcontent">
            <tr>
                <td>
                    <div class="editor-label">
                          @Html.LabelFor(model => model.AuditCriteria)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.DisplayFor(model => model.AuditCriteria)
                    </div>
                </td>
                <td>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.AuditNo)<text style="color:red;">*</text>
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                       <select id="AuditNo" name="AuditNo"  required>
                                <option value='' hidden>Select</option>
                                @if (ViewBag.AuditNo != null)
                                {
                                    foreach (var item in ViewBag.AuditNo)
                                    {
                                        if(item.Text==Model.AuditNo)
                                        {
                                         <option value='@item.Value' selected>@item.Text</option>
                                        }
                                        else{
                                        <option value='@item.Value'>@item.Text</option>
                                        }
                                       
                                    }
                                }
                            </select>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                      @Html.LabelFor(model => model.AuditDate)<text style="color:red;">*</text>
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                       
                        <input type="text" id="AuditDate" name="AuditDate" value="@Model.AuditDate.ToString("dd/MM/yyyy")"  required style="width: 150px;"/>
                    </div>
                </td>
                <td>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.Department)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                     <select id="Department1" name="Department1" disabled>
                                <option value='' hidden>Select</option>
                                @if (ViewBag.Department != null)
                                {
                                    foreach (var item in ViewBag.Department)
                                    {
                                        if(item.Text==Model.Department)
                                        {
                                        <option value='@item.Value' selected>@item.Text</option>
                                        }
                                        else
                                        {
                                         <option value='@item.Value'>@item.Text</option>
                                        }
                                        
                                    }
                                }
                            </select>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                         @Html.LabelFor(model => model.Auditors)<text style="color:red;">*</text>
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model.Auditors, new { htmlAttributes = new { @required = "required" } }) 
                    </div>
                </td>
                  <td>
                    <div class="editor-label">
                          @Html.LabelFor(model => model.Auditee)<text style="color:red;">*</text>
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                       <select id="Auditee" name="Auditee" multiple style="height: 100px; width: 200px;" required>
                                <option value='' hidden>Select</option>
                                @if (ViewBag.EmpLists != null)
                                {
                                    foreach (var item in ViewBag.EmpLists)
                                    {
                                        if(Model.Auditee.Contains(item.Text))
                                        {
                                         <option value='@item.Value' selected>@item.Text</option>
                                        }
                                        else
                                        {
                                        <option value='@item.Value'>@item.Text</option>
                                        }
                                   
                                    }
                                }
                            </select>
                    </div>
                </td>
            </tr>
         
          
            </table>
        <table style="width: 90%;">
            <tr>
                <th style="background-color: #e5eafe; color: #0099ff;">Sr. No.
                </th>
                <th style="background-color: #e5eafe; color: #0099ff;">Element
                </th>
                @if (dsrating.Tables.Count > 0 && dsrating.Tables[0].Rows.Count > 0)
                {
                    for (int item = 0; item < dsrating.Tables[0].Rows.Count; item++)
                    {
                    <th style="background-color: #e5eafe; color: #0099ff;">
                        @dsrating.Tables[0].Rows[item]["Options"].ToString()
                    </th>
                    }
                }
                 <th style="background-color: #e5eafe; color: #0099ff;">Comment
                </th>
                <th style="background-color: #e5eafe; color: #0099ff;">Evidence
                </th>
            </tr>
           @{
             int ncount = dsAudit.Tables[0].Rows.Count;
               int n = 0,c=0;
            }
            @if (ViewBag.AuditQuestions != null)
            {
                int iSrno = 0, itmctn = 0;

                
                foreach (var item in ViewBag.AuditQuestions)
                {
                    iSrno = iSrno + 1;
                    itmctn = itmctn + 1;

                    if (ncount >= 1)
                    {
                       
                        ncount--;
                    }
                    else
                    {
                        n = 1;
                        c = 2;
                    }
                        

                        
                <tr>
                    
                    <td>
                        @iSrno
                    </td>
                    <td style="width: 500px; min-width: 500px; max-width: 500px;">
                        @item.Text
                        <input type="hidden" id="Audit_Elements @item.Value" name="Audit_Elements @item.Value" value="@item.Value"/>
                    </td>


                    @if (dsrating.Tables.Count > 0 && dsrating.Tables[0].Rows.Count > 0)
                    {

                        if (dicPerformanceElements.ContainsKey(item.Value))
                        {
                            for (int rating = 0; rating < dsrating.Tables[0].Rows.Count; rating++)
                            {                            
                        <td>
                            @if (ViewBag.PerformanceElement != null)
                            {

                                if (dicPerformanceElements[item.Value] == dsrating.Tables[0].Rows[rating]["id_auditratings"].ToString())
                                {                                            
                                <input type="radio" id="id_auditratings @item.Value" name="id_auditratings @item.Value" class="id_auditratings @item.Value" 
                                                value="@dsrating.Tables[0].Rows[rating]["id_auditratings"].ToString()" checked/>
                                }
                                else
                                {
                                <input type="radio" id="id_auditratings @item.Value" name="id_auditratings @item.Value" class="id_auditratings @item.Value" 
                                                value="@dsrating.Tables[0].Rows[rating]["id_auditratings"].ToString()" />
                                }
                                <input type="hidden" id="id_AuditPerformanceChecklist @item.Value" name="id_AuditPerformanceChecklist @item.Value" value="@item.Value"/>
                            }

                        </td>
                            }
                        }
                        else
                        {
                            for (int rating = 0; rating < dsrating.Tables[0].Rows.Count; rating++)
                            {                            
                                <td>
                                    @if (ViewBag.PerformanceElement != null)
                                    {                                       
                                                <input type="radio" id="id_auditratings @item.Value" name="id_auditratings @item.Value" class="id_auditratings @item.Value" 
                                                value="@dsrating.Tables[0].Rows[rating]["id_auditratings"].ToString()" />                                        
                                    }
                               
                                </td>
                            }
                        }
                        

                    }

                    @if (n == c)
                    {     
                               
                    <td>
                        
                        <input type="text" id="comment @itmctn" name="comment @itmctn" value="@dsAudit.Tables[0].Rows[n]["comment"].ToString()" style="height:60px;width:200px"/>
                    </td>
                        <td>
                             @if (dsAudit.Tables[0].Rows[n]["evidence_upload"].ToString() != "")
                              {
                                <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsAudit.Tables[0].Rows[n]["evidence_upload"].ToString() })' target="_blank">Preview</a>
                              }
                      <input type="file" name="evidence_upload @itmctn" id="evidence_upload @itmctn" value="@dsAudit.Tables[0].Rows[n]["evidence_upload"].ToString()" onchange="FileFormatValidation(this,@itmctn)" accept=".pdf" style="height: 38px;"/>
                        </td>
                         <td>
                        
                        <input type="hidden" id="id_AuditPerformanceChecklist @itmctn" name="id_AuditPerformanceChecklist @itmctn" value="@dsAudit.Tables[0].Rows[n]["id_AuditPerformanceChecklist"].ToString()" style="height:60px;width:200px"/>
                    </td>
                   
                       
                        
                    }
                  
                   @{
                    c = c + 1;
                    n = n + 1;
                       
                   }
                </tr>
                }
                  <tr>
                   <td>
                        <input type="hidden" id="itmctn" name="itmctn" value="@itmctn" />
                       
                   </td>
               </tr>
            }
             <tr>
                 <td colspan="6">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Notes)
                    </div>
                </td>
                 </tr>
             <tr>
                <td colspan="6">
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model.Notes, new { @Style = "height:500px; width:1300px;" }) 
                    </div>
                </td>
             </tr>
             <tr>
                  <td colspan="6">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Remarks)
                    </div>
                </td>
                 </tr>
             <tr>
                <td colspan="6">
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model.Remarks, new { @Style = "height:500px; width:1300px;" }) 
                    </div>
                </td>
             </tr>
        </table>
        </fieldset>
        <div style="width: 100%; text-align: center;">
            @Html.ActionLink("Back to List", "AuditList", null,new {id_AuditChecklist=Model.id_AuditChecklist}, new {@class = "ActionLink", onclick="HyperLinkProgressIconFunction()"})
            <input type="submit" value="Update" onclick="ProgressIconFunction('#form1')"/>
         </div>
    
     <div id="dvItems" style="overflow: auto; display: none;">
         <table id="team-list" style="width: 100%">
            <tr> 
                <th>Evidence</th>
                             
            </tr>
        </table>
         </div>
}

@section Scripts {
     <script>
         $(function () {

             $('#AuditDate').datepicker({
                 dateFormat: "dd/mm/yy",
                 buttonImageOnly: true,
                 buttonImage: '../Images/Calender.png',
                 showOn: 'both',
                 changeMonth: true,
                 changeYear: true,
                 gotoCurrent: true,
                 //maxDate: 0
             });

             $("#AuditDate").datepicker("setDate", new Date());

         });


         function FileFormatValidation(file, cnt) {

             var ext = file.value.split(".").pop().toLowerCase();
             if ($.inArray(ext, ["doc", "pdf", "docx", "jpg", "jpeg", "gif"]) == -1) {
                 file.value = "";
                 jAlert("Invalid file format, please upload only doc, pdf, docx, jpg, jpeg, gif format");
             }
             else {

                 AddEvidence(cnt)
             }

         }
         function AddEvidence(cnt) {



             var table = document.getElementById("team-list");
             var row = table.insertRow();
             var cell0 = row.insertCell(0);
             var n = "evidence_upload" + " " + cnt;
             var evidence_upload = document.getElementById(n).value;

             evidence_uploadServerPath = UploadDocument(cnt);
             cell0.innerHTML = "<input type='hidden' id='evidence_upload" + cnt + "' name='evidence_upload" + cnt + "' value='" + evidence_uploadServerPath + "'>" + evidence_upload;

         }

         function UploadDocument(ind) {


             var evidence_upload = ($("#evidence_upload" + " " + ind)).files; //$('#testfile').file;

             var formData = new FormData();

             var totalFiles = document.getElementById("evidence_upload" + " " + ind).files.length;

             for (var i = 0; i < totalFiles; i++) {
                 var file = document.getElementById("evidence_upload" + " " + ind).files[i];
                 formData.append("evidence_upload", file);
             }
             jQuery.ajax({
                 url: '@Url.Action("UploadDocument", "SupplierAuditChecklist")',
                     type: 'POST',
                     contentType: false,
                     processData: false,
                     data: formData,
                     success: function (result) {

                         //document.getElementById("evidence_upload" + " " + ind).value = result;
                         document.getElementById("evidence_upload" + ind).value = result;
                         evidence_uploadServerPath = result;
                         return result;
                     }

                 });
             }
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
