@using PagedList;
@using PagedList.Mvc;

@model IPagedList<ISOStd.Models.BiddingModels>

@{
    ViewBag.Title = "BiddingList";
}

<div class="groupedassets margin10">
    <span class="groupedassetshead margin10 onestphdcolor">Bidding List </span>
</div>

@* <div class = "ActionLink">@Html.ActionLink("Add New", "AddEquipment", null,null, new { @class = "ActionLink", onclick="HyperLinkProgressIconFunction()" })</div>*@
<div id="divmsg">
    @if (TempData["alertdata"] != null)
    {
        <span class="errMsg" style="color: red;font-weight: bold;">@TempData["alertdata"]</span>
    }
    @if (TempData["Successdata"] != null)
    {
        <span class="errMsg" style="color: green; font-weight: bold;">@TempData["Successdata"]</span>
    }
</div>
    <br />
<div>
 @Html.ActionLink("Add New", "AddBiddingDocument", null, null, new { @class = "ActionLink", onclick = "HyperLinkProgressIconFunction()" })
 <span style="margin-left: 20px"> <img src="@Url.Content("~/Images/excel.png")" title="Export as Excel" style="cursor:pointer; " id="downloadLink" />Download</span>
    </div>
<br />
@Html.PagedListPager(Model, page => Url.Action("BiddingList",
    new
    {
        page,
        Equipment_status = Request.QueryString["Equipment_status"],
        SearchText = Request.QueryString["SearchText"]
    }),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true })
<div id="content">
    <table id="table1">
   
            <tr>
                 <th  style="min-width:190px;width:190px;max-width:190px">
                    @Html.DisplayNameFor(model => model.First().client)
                </th>
                <th  style="min-width:150px;width:150px;max-width:150px">
                    @Html.DisplayNameFor(model => model.First().folderref)
                </th>
                <th  style="min-width:180px;width:180px;max-width:180px">
                    @Html.DisplayNameFor(model => model.First().projectname)
                </th> 
                 <th  style="min-width:80px;width:80px;max-width:80px">
                    @Html.DisplayNameFor(model => model.First().submission_date)
                </th>     
                 <th  style="min-width:150px;width:150px;max-width:150px">
                    @Html.DisplayNameFor(model => model.First().preparedby)
                </th> 
                 <th  style="min-width:150px;width:150px;max-width:150px">
                    @Html.DisplayNameFor(model => model.First().checkedby)
                </th> 
                 <th  style="min-width:150px;width:150px;max-width:150px">
                    @Html.DisplayNameFor(model => model.First().proposalref)
                </th> 
                 <th  style="min-width:100px;width:100px;max-width:100px">
                    @Html.DisplayNameFor(model => model.First().proposal_date)
                </th> 
                 <th  style="min-width:100px;width:100px;max-width:100px">
                    @Html.DisplayNameFor(model => model.First().proposal_status)
                </th>           
               <th style="width: 40px; min-width: 40px; max-width: 40px;">Action</th>
                @if (ViewBag.DeleteFlg != null && ViewBag.DeleteFlg == true)
                {
                    <th style="width: 40px; min-width: 40px; max-width: 40px;">Delete</th>
                }
            </tr>
     

            @if (Model != null && Model.Count() > 0)
            {

                foreach (var item in Model)
                {
                    <tr>
                         <td  style="min-width:190px;width:190px;max-width:190px">
                           
                              @Html.ActionLink(item.client.ToString(), "BiddingDetails", new { id_bidding = item.id_bidding.ToString() }, new { onclick="HyperLinkProgressIconFunction()"})
                        </td>
                        <td style="min-width:150px;width:150px;max-width:150px">
                            @Html.DisplayFor(modelItem => item.folderref)
                        </td>
                        <td style="min-width:180px;width:180px;max-width:180px">
                            @Html.DisplayFor(modelItem => item.projectname)
                        </td>
                        <td style="min-width:80px;width:80px;max-width:80px">
                            @if (item.submission_date > Convert.ToDateTime("01/01/0001"))
                            {
                            @item.submission_date.ToString("dd/MM/yyyy")
                            }
                        </td>
                        <td style="min-width:150px;width:150px;max-width:150px">
                            @Html.DisplayFor(modelItem => item.preparedby)
                        </td>
                         <td style="min-width:150px;width:150px;max-width:150px">
                            @Html.DisplayFor(modelItem => item.checkedby)
                        </td>
                         <td style="min-width:150px;width:150px;max-width:150px">
                            @Html.DisplayFor(modelItem => item.proposalref)
                        </td>
                         <td style="min-width:100px;width:100px;max-width:100px">
                             @if (item.proposal_date > Convert.ToDateTime("01/01/0001"))
                             {
                            @item.proposal_date.ToString("dd/MM/yyyy")
                             }
                        </td>
                         <td style="min-width:100px;width:100px;max-width:100px">
                            @Html.DisplayFor(modelItem => item.proposal_status)
                        </td>
                        <td style="width: 40px; min-width: 40px; max-width: 40px;">
                            <a href='@Url.Action("BiddingEdit", "Bidding", new { id_bidding = item.id_bidding })' title="Edit Detail" onclick="HyperLinkProgressIconFunction()">
                                <span class="glyphicon glyphicon glyphicon-edit iocnstatus-edit" onclick="HyperLinkProgressIconFunction()"></span>
                            </a>
                        </td>  
                        @if (ViewBag.DeleteFlg != null && ViewBag.DeleteFlg == true)
                        {
                            <td style="width: 40px; min-width: 40px; max-width: 40px;">

                                @*<a href='@Url.Action("CustomerEnquiryDelete", "CustomerEnquiry", new { enquiry_id = item.Enquiry_id.ToString() })' title="Delete Enquiry" >*@
                                <img src="@Url.Content("~/Images/delete.png")" title="Delete Document" onclick="DeleteItems(@item.id_bidding)" style="cursor:pointer;" />
                            </td>
                        }
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="10">
                        <div style="text-align: center;">
                            <h4 style="color: grey;">No data exists</h4>
                        </div>
                    </td>
                </tr>
            }
       </table>

</div>
@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        function DeleteItems(id_bidding) {
            jConfirm('Do you want to delete?', 'Are you Sure?', function (r) {
                if (r == true) {
                    jQuery.ajax({
                        url: '@Url.Action("BiddingDelete", "Bidding")',
                        type: 'POST',
                        dataType: "json",
                        data: { 'id_bidding': id_bidding },
                        success: function (result) {
                            var params = {
                                View: 1
                            };

                            //// Add new params to the querystring dictionary
                            queryString = $.param(params);

                            window.location.href =
                                window.location.protocol + "//" +
                                window.location.host +
                                window.location.pathname +
                               '?' + queryString;
                        }
                    });
                    return true;
                }
                else if (r == false) {
                    return false;
                }
            });
        }

        function downloadInnerHtml(filename, elId) {
            var $table = $('#table1');
            $rows = $table.find('tr');

            var csvData = "";

            for (var i = 0; i < $rows.length; i++) {
                var $cells = $($rows[i]).children('th,td'); //header or content cells

                for (var y = 0; y < $cells.length; y++) {
                    if (y > 0) {
                        csvData += ",";
                    }

                    var txt = ($($cells[y]).text()).toString().trim();

                    if (txt.indexOf(',') >= 0 || txt.indexOf('\"') >= 0 || txt.indexOf('\n') >= 0) {
                        txt = "\"" + txt.replace(/\"/g, "\"\"") + "\"";
                    }
                    csvData += txt;
                }
                csvData += '\n';
            }


            var elHtml = csvData;
            var link = document.createElement('a');
            mimeType = 'application/csv;charset=utf-8';

            link.setAttribute('download', filename);
            link.setAttribute('href', 'data:' + mimeType + ';charset=utf-8,' + encodeURIComponent(elHtml));
            link.click();
        }

        var fileName = 'BiddingList.csv'; // You can use the .txt extension if you want

        $('#downloadLink').click(function () {
            downloadInnerHtml(fileName, 'content');
        });

    </script>

}
