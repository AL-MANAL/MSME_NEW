@using PagedList;
@using PagedList.Mvc;

@model IPagedList<ISOStd.Models.DieselConsumptionModels>

@*<div id="myDIV" class="groupedassets margin10">
        <span class="groupedassetshead margin10 onestphdcolor"><strong> Fuel Consumption List </strong> </span>
    </div>*@
<div class="groupedassets margin10">
    <span class="groupedassetshead margin10 onestphdcolor">Fuel Consumption List </span>
</div>

@*<div class = "ActionLink"><img src="@Url.Content("~/Images/icon_add.png")" title="Add Consumption" onclick="Consumption('add')" style="cursor:pointer;"/>Add new Consumption</div>*@
@*<img src="@Url.Content("~/Images/icon_add.png")" title="Add Consumption" onclick="Consumption('add')" style="cursor:pointer;" />*@
 <div id="divmsg">
        @if (TempData["alertdata"] != null)
        {
            <span class="errMsg" style="color: red;font-weight: bold;">@TempData["alertdata"]</span>
        }
        @if (TempData["Successdata"] != null)
        {
            <span class="errMsg" style="color: green; font-weight: bold;">@TempData["Successdata"]</span>
        }
    </div>

<div id="AddItem" style="display: none; border:1px grey solid;">
    @using (Html.BeginForm("DieselConsumption", "DieselEquipment", FormMethod.Post, new { id = "formDiesel", name = "formDiesel" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <input type="hidden" id="OperationFlg" name="OperationFlg" value="add" />
        <input type="hidden" id="Consumption_Id" name="Consumption_Id"/>
        <table id="tabcontent">
             <tr>
                    <td colspan="4" style="background-color: #4cc4dd; color: #fff; font-weight: bold; font-size: 14px;">
                        <label id="lblAdd" style="display:block;float:left;"> Add Disesel Consumption</label>
                        <label id="lblEdit" style="display:none;float:left;"> Edit Disesel Consumption</label>
                        <span onclick="HideControls()" style="cursor:pointer; float:right;">[-]Hide</span>
                    </td>
                    
                </tr>
            <tr>               
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.First().Diesel_Equip_Id)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        <select id="Diesel_Equip_Id" name="Diesel_Equip_Id" required>
                            <option value='' hidden>Select</option>
                            @if (ViewBag.DieselEquipId != null)
                            {
                                foreach (var item in ViewBag.DieselEquipId)
                                {                    
                                    <option value='@item.Value' id="@item.Text">@item.Text</option>
                                }
                            }
                        </select>
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.First().Qty)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        <input type="number" id="Qty" name="Qty" required onchange="ValidateQty()"/> <label style="color: orange;font-weight:bold;">Avialable Qty:</label> @ViewBag.CurrentQty
                        <input type="hidden" id="CurQty" name="CurQty" value="@ViewBag.CurrentQty" />
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.First().Issued_Date)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        <input type="text" id="Issued_Date" name="Issued_Date" readonly required/>
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.First().Issued_By)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        <input type="text" id="Issued_By" name="Issued_By"/>
                    </div>
                </td>
            </tr>

        </table>
    
        <div style="width: 100%; text-align: center;">
            <input type="submit" value="Save" id="btnSubmit" onclick="ProgressIconFunction('#formDiesel')" />
        </div>
    }
</div>

<div id="content" style="border: 1px grey solid;">
    <div class="serif" style="text-align: center; background-color: #4cc4dd; color: #fff; font-weight: bold; font-size: 14px;" >
        Diesel Consumption List
    </div>
    @using (Html.BeginForm("DieselConsumption", "DieselEquipment", FormMethod.Get, new { id = "form2", name = "form2" }))
    {
       
        <div style="text-align: left;">
            <img src="@Url.Content("~/Images/icon_add.png")" title="Add Consumption" onclick="Consumption('add')" style="cursor:pointer;" />
            <select id="Diesel_Equip_IdSearch" name="Diesel_Equip_IdSearch" required>
                <option value='Select'>Select Vehicle No</option>
                @if (ViewBag.DieselEquipId != null)
                {
                    foreach (var item in ViewBag.DieselEquipId)
                    {
                        if (item.Value == ViewBag.Diesel_Equip_IdVal)
                        {
                    <option value='@item.Value' selected>@item.Text</option>
                    }
                    else
                    {
                    <option value='@item.Value'>@item.Text</option>
                    }
                }
            }
            </select>
            <button type="submit" class="btn btn-info" onclick="ProgressIconFunction('#form2')">
                <span class="glyphicon glyphicon-search"></span>Search
            </button>
        </div>
    
    }

    @Html.PagedListPager(Model, page => Url.Action("DieselEuipmentList",
    new
    {
        page,
        Diesel_Equip_IdSearch = Request.QueryString["Diesel_Equip_IdSearch"]
    }),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true })

    <table id="table1">

        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().Diesel_Equip_Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Qty)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Issued_Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Issued_By)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().LoggedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().LoggedDate)
            </th>
            <th>Action</th>
        </tr>
        @if (Model != null && Model.Count() > 0)
        {
            foreach (var item in Model)
            {
                string sIssued_Date = "";
                if (item.Issued_Date > Convert.ToDateTime("01/01/0001"))
                {
                    sIssued_Date = item.Issued_Date.ToString("dd/MM/yyyy");
                }
                 
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Diesel_Equip_Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Qty)
                </td>
                <td>@sIssued_Date
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Issued_By)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LoggedBy)
                </td>
                <td>
                    @if (item.LoggedDate > Convert.ToDateTime("01/01/0001"))
                    {
                        @item.LoggedDate.ToString("dd/MM/yyyy")
                   }
                </td>
                <td>
                    <span class="glyphicon glyphicon glyphicon-edit iocnstatus-edit" style="cursor:pointer;"
                            onclick="Consumption('@item.Consumption_Id', '@item.Diesel_Equip_Id', '@item.Qty', '@item.Issued_By', '@sIssued_Date')"></span>
                </td>
            </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7">
                    <div style="text-align: center;">
                        <h4 style="color: grey;">Search for Data</h4>
                    </div>
                </td>
            </tr>
        }
    </table>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            $('#Issued_Date').datepicker({
                dateFormat: "dd/mm/yy",
                buttonImageOnly: true,
                buttonImage: '../Images/Calender.png',
                showOn: 'both',
                changeMonth: true,
                changeYear: true
            });
            $("#Issued_Date").datepicker("setDate", new Date());
        });

        function Consumption(Consumption_Id, Diesel_Equip_Id, Qty, Issued_By, Issued_Date)
        {
            ClearControl();
            document.getElementById("AddItem").style.display = "block";

            if (Consumption_Id != "" && Consumption_Id != "add") {
                document.getElementById("Consumption_Id").value = Consumption_Id;
                //document.getElementById("Diesel_Equip_Id").value = Diesel_Equip_Id;
                document.getElementById("Qty").value = Qty;
                document.getElementById("Issued_Date").value = Issued_Date;
                document.getElementById("Issued_By").value = Issued_By;
                document.getElementById("OperationFlg").value = "edit";

                document.getElementById("lblAdd").style.display = "none";
                document.getElementById("lblEdit").style.display = "block";

                document.getElementById("Diesel_Equip_Id").options.namedItem(Diesel_Equip_Id).selected = true;
                document.getElementById("btnSubmit").value = "Update";
            }
            else {
                document.getElementById("OperationFlg").value = "add";
                document.getElementById("lblAdd").style.display = "block";
                document.getElementById("lblEdit").style.display = "none";
                document.getElementById("btnSubmit").value = "Save";
            }
        }

        function HideControls()
        {
            ClearControl();
            document.getElementById("AddItem").style.display = "none";
        }

        function ClearControl()
        {
            document.getElementById("Diesel_Equip_Id").value = "";
            document.getElementById("Qty").value = "";
            document.getElementById("Issued_By").value = "";
            document.getElementById("Issued_Date").value = "";
            document.getElementById("Consumption_Id").value = "";
        }

        function ValidateQty()
        {
            var Qty= $('#Qty').val();
            var CurQty= $('#CurQty').val();

            if (Qty != "" && parseFloat(Qty) > 0 && CurQty != "" && parseFloat(CurQty) > 0 && parseFloat(Qty) > parseFloat(CurQty))
            {
                jAlert("Quantity cannot be more than Stock Quantity");
                document.getElementById("Qty").value = "";
                document.getElementById("Qty").focus();
            }
        }
    </script>
}