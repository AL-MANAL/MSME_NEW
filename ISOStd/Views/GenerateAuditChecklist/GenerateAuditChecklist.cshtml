@model ISOStd.Models.GenerateAuditChecklistModels

@{
    ViewBag.Title = "GenerateAuditChecklist";
    DateTime todaysdate = DateTime.Now;
}

@section featured {

    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>

                    <a href="@Url.Action("AuditChecklistList", "GenerateAuditChecklist", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Audit Checklists</span>
                    </a>

                    <span class="breadcrumb-item active"> Generate Audit Checklist</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            <div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>


    </div>   

}


@using (Html.BeginForm("GenerateAuditChecklist", "GenerateAuditChecklist", FormMethod.Post,
                     new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Generate Audit Checklist</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>

                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">
                @*<input type="hidden" id="itemcnt" name="itemcnt" />*@
                <table class="table table-lg">
                    <tbody>
                        @*<tr class="row">
                <td class="col-xs-3 col-md-2">
                    Division
                </td>
                <td class="col-xs-6 col-md-4">
                    <select class="form-control select-search select2-hidden-accessible" data-fouc id="audit_division" name="audit_division" onchange="GetDeptList()" required>
                        <option value='' hidden>Select</option>
                        @if (ViewBag.division != null)
                        {
                            foreach (var item in ViewBag.division)
                            {
                                <option value='@item.Value'>@item.Text</option>
                            }
                        }
                </select>
            </td>

        </tr>
        <tr class="row">
            <td class="col-xs-3 col-md-2">
                Department
            </td>
            <td class="col">
                <select class="form-control select-search" data-fouc id="Department" name="Department" onchange="GetEmptyCheckbox()">
                    <option value='' hidden>Select</option>
                    @if (ViewBag.Department != null)
                    {
                        foreach (var item in ViewBag.Department)
                        {
                            <option value='@item.Value'>@item.Text</option>
                        }
                    }
                </select>
            </td>
            <td class="col">
                <input type="checkbox" class="form-control" id="dept_common" name="dept_common" onchange="GetEmptyDept()" />(Please check this box if department is common)
            </td>
        </tr>*@

                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                Division
                            </td>
                            <td class="col-xs-6 col-md-4">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="directorate" name="directorate" onchange="DoclevelGroupcode()" required>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.Directorate != null)
                                    {
                                        foreach (var item in ViewBag.Directorate)
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                </select>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                Department
                            </td>
                            <td class="col-xs-6 col-md-4">
                                <select class="form-control select-search" data-fouc id="grp" name="grp" onchange="GetEmptyGrpCheckbox()">
                                    <option value='' hidden>Select</option>
                  
                                </select>
                            </td>
                            <td class="col">
                                <input type="checkbox" class="form-control" id="grp_common" name="grp_common" onchange="GetEmptyGrp()" />(Please check this box if Department is common)
                            </td>
                        </tr>
                        @*<tr class="row">
                            <td class="col-xs-3 col-md-2">
                                Team
                            </td>
                            <td class="col-xs-6 col-md-4">
                                <select class="form-control select-search" data-fouc id="team" name="team" onchange="GetEmptyTeamCheckbox()">
                                    <option value='' hidden>Select</option>
                                </select>
                            </td>
                            <td class="col">
                                <input type="checkbox" class="form-control" id="team_common" name="team_common" onchange="GetEmptyTeam()" />(Please check this box if Team is common)
                            </td>
                        </tr>*@
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.DisplayNameFor(model => model.created_on)
                            </td>
                            <td class="col">
                                <input type="date" class="form-control" id="created_on" name="created_on" />
                            </td>
                            <td class="col-xs-3 col-md-2">
                                @Html.DisplayNameFor(model => model.ammended_on)
                            </td>
                            <td class="col">
                                <input type="date" class="form-control" id="ammended_on" name="ammended_on" value="@todaysdate.ToString("yyyy-MM-dd")" readonly />
                            </td>
                        </tr>
                        @*<tr class="row">
            <td class="col-xs-3 col-md-2">
                @Html.DisplayNameFor(model => model.Itemno)
            </td>
            <td class="col">
                @ViewBag.ItemNo
            </td>
            <td class="col-xs-3 col-md-2">
                @Html.DisplayNameFor(model => model.Department)<text style="color:red;">*</text>
            </td>
            <td class="col">
                <select class="form-control select-search select2-hidden-accessible" data-fouc id="Department" name="Department" onchange="GetQuestions()" required>
                    <option value='' hidden>Select</option>
                   @if (ViewBag.Department != null)
                    {
                        foreach (var item in ViewBag.Department)
                        {
                            <option value='@item.Value'>@item.Text</option>
                        }
                    }
                </select>
            </td>
        </tr>*@

                        @*<tr class="row">
            <td class="col-xs-3 col-md-2">
                @Html.DisplayNameFor(model => model.AuditCriteria)<text style="color:red;">*</text>
            </td>
            <td class="col">

                <select class="form-control select-fixed-multiple" multiple data-fouc id="AuditCriteria" name="AuditCriteria" onchange="GetQuestions()" required>
                    <option value='' hidden>Select</option>
                    @if (ViewBag.AuditCriteria != null)
                    {
                        foreach (var item in ViewBag.AuditCriteria)
                        {
                            <option value='@item.Value'>@item.Text</option>
                        }
                    }
                </select>
            </td>
        </tr>*@

                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.DisplayNameFor(model => model.prepared_by)
                            </td>
                            <td class="col-xs-6 col-md-4">
                                <div class="editor-field">
                                    <select class="form-control select-search" id="prepared_by" name="prepared_by" onchange="GetIssuedToDetails()">
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.EmpList != null)
                                        {
                                            foreach (var item in ViewBag.EmpList)
                                            {
                                                if (item.Value == Model.prepared_by)
                                                {
                                                    <option value='@item.Value' selected>@item.Text</option>
                                                }
                                                else
                                                {
                                                    <option value='@item.Value'>@item.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                </div>
                            </td>
                        </tr>
                    </tbody>
            </table>

            <div id="issuedtodiv" class="card invisible">
                <div class="card-body">
                    <table>
                        <tr>
                            <th>
                                Emp Id
                            </th>
                            <th>
                                Name
                            </th>
                            <th>
                                Division
                            </th>
                            <th>
                                Location
                            </th>
                            <th>
                                Department
                            </th>
                            <th>
                                Email
                            </th>
                        </tr>
                        <tr>
                            <td>
                                <input type="text" class="form-control" name="iempid" id="iempid" readonly />
                            </td>
                            <td>
                                <input type="text" class="form-control" name="iempname" id="iempname" readonly />
                            </td>
                            <td>
                                <input type="text" class="form-control" name="iempdivision" id="iempdivision" readonly />
                            </td>
                            <td>
                                <input type="text" class="form-control" name="iemploc" id="iemploc" readonly />
                            </td>
                            <td>
                                <input type="text" class="form-control" name="iempdept" id="iempdept" readonly />
                            </td>
                            <td>
                                <input type="text" class="form-control" name="iempemail" id="iempemail" readonly />
                            </td>
                            <td>
                                <input type="button" value="Add" class="btn btn-success" onclick="AddIssuedTo()" />
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="card invisible" id="NCIssueDiv">
                <div class="card-body">
                    <input type="hidden" id="count" name="count" value="0" />

                    <div class="card card-table table-responsive shadow-0 mb-0">
                        <table class="table" id="table-team">
                            <tr class="bg-blue">
                                <th>Action</th>
                                <th>Id</th>
                                <th>Name</th>
                                <th>Division</th>
                                <th>Location</th>
                                <th>Department</th>
                                <th>Email</th>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>


            @*<table class="table table-lg" id="tblMeetingList">

            <tr>
                <th colspan="2" style="background-color: #e5eafe; color: #0099ff;text-align:center">
                    Audit Questions
                </th>
            </tr>
            <tr>

                <th style="background-color: #e5eafe; color: #0099ff;">
                    Sl No
                </th>
                <th style="background-color: #e5eafe; color: #0099ff;">
                    Question
                </th>
            </tr>

        </table>*@
        </div>
        @*Details*@

        <fieldset class="border p-2">
            <legend class="font-weight-semibold"><i class="icon-file-text mr-2"></i>Audit CheckList details</legend>
            <table class="table table-lg" id="table1">

                <tbody>
                    <tr class="row">
                        <th class="col" style="font-weight: bold;">Standard / Procedure</th>
                        <th class="col" style="font-weight: bold;">Clause / Section No</th>
                        <th class="col" style="font-weight: bold;">Question</th>
                        <th class="col-xs-3 col-md-2"></th>
                    </tr>
                    <tr class="row">
                        <td class="col">
                            <select class="form-control select-search select2-hidden-accessible" multiple data-fouc id="IsoStd" name="IsoStd">
                                @*<option value='' hidden>Select</option>*@
                                @if (ViewBag.IsoStd != null)
                                {
                                    foreach (var item in ViewBag.IsoStd)
                                    {
                                        <option value='@item.Value'>@item.Text</option>
                                    }
                                }
                            </select>
                            @Html.ValidationMessageFor(model => model.IsoStd)
                            <span class="field-validation-error"><span id="IsoStd-message" style="display: none;">Please select Standard / Procedure.</span></span>
                        </td>
                        <td class="col">
                            <input class="form-control" type='text' id='Clause' name="Clause" />
                            @Html.ValidationMessageFor(model => model.Clause)
                            <span class="field-validation-error"><span id="Clause-message" style="display: none;">Please write Clause / Section No.</span></span>
                        </td>
                        <td class="col">
                            <textarea class="form-control" id='Questions' name="Questions"> </textarea>
                            @Html.ValidationMessageFor(model => model.Questions)
                            <span class="field-validation-error"><span id="Questions-message" style="display: none;">Please write Questions.</span></span>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <img src='@Url.Content("~/images/icon_add.png")' onclick='AddQuestions()' style='cursor:pointer; padding-right: 5px;' />Add
                        </td>
                    </tr>
                </tbody>
            </table>
        </fieldset>

        <span class="form-text text-muted"><code>Please click Add or Plus button to add N number of Questions</code></span>

        <div class="card invisible" id="hidden card">
            <div class="card-header header-elements-inline">
                <h5 class="card-title">Question Details</h5>
                <div class="header-elements">
                    <div class="list-icons">
                        <a class="list-icons-item" data-action="collapse"></a>
                    </div>
                </div>
            </div>

            <div class="card-body">

                <input type="hidden" id="itemcnt" name="itemcnt" value="0" />

                <div class="card card-table table-responsive shadow-0 mb-0">
                    <table class="table" id="team-list">
                        <tr class="bg-blue">
                            <th>Action</th>
                            <th>Standard / Procedure</th>
                            <th>Clause / Section No</th>
                            <th>Question</th>
                        </tr>
                    </table>

                </div>
            </div>
        </div>


        <table class="table table-lg">
            <tr class="row">
                <td class="col-xs-3 col-md-2">
                    @Html.DisplayNameFor(model => model.notified_to)
                </td>
                <td class="col-xs-6 col-md-4">
                    <div class="editor-field">
                        <select class="form-control select-search" @*class="form-control-select" data-fouc*@ id="notified_to" name="notified_to" onchange="GetNotifiedByDetails()">
                            <option value='' hidden>Select</option>
                            @if (ViewBag.EmpList != null)
                            {
                                foreach (var item in ViewBag.EmpList)
                                {
                                    <option value='@item.Value'>@item.Text</option>
                                }
                            }
                        </select>
                    </div>
                </td>
            </tr>
        </table>
        <div id="notifiedtodiv" class="card invisible">
            <div class="card-body">
                <table>
                    <tr>
                        <th>
                            Emp Id
                        </th>
                        <th>
                            Name
                        </th>
                        <th>
                            Division
                        </th>
                        <th>
                            Location
                        </th>
                        <th>
                            Department
                        </th>
                        <th>
                            Email
                        </th>
                    </tr>
                    <tr>
                        <td>
                            <input type="text" class="form-control" name="nempid" id="nempid" readonly />
                        </td>
                        <td>
                            <input type="text" class="form-control" name="nempname" id="nempname" readonly />
                        </td>
                        <td>
                            <input type="text" class="form-control" name="nempdiv" id="nempdiv" readonly />
                        </td>
                        <td>
                            <input type="text" class="form-control" name="nemploc" id="nemploc" readonly />
                        </td>
                        <td>
                            <input type="text" class="form-control" name="nempdept" id="nempdept" readonly />
                        </td>
                        <td>
                            <input type="text" class="form-control" name="nempemail" id="nempemail" readonly />
                        </td>
                        <td>
                            <input type="button" value="Add" class="btn btn-success" onclick="AddNotifiedTo()" /> @*<span class="text-primary font-italic">(Please click ADD button to add multiple entries)</span>*@
                        </td>
                    </tr>
                </table>
            </div>
        </div>
        <div class="card invisible" id="hidden card1">
            <div class="card-body">
                <input type="hidden" id="itemcnt1" name="itemcnt1" value="0" />

                <div class="card card-table table-responsive shadow-0 mb-0">
                    <table class="table" id="team-list1">
                        <tr class="bg-blue">
                            <th>Action</th>
                            <th>Id</th>
                            <th>Name</th>
                            <th>Division</th>
                            <th>Location</th>
                            <th>Department</th>
                            <th>Email</th>
                        </tr>
                    </table>
                </div>
            </div>
        </div>

        <div class="card-footer bg-white d-flex justify-content-between align-items-center">
            @Html.ActionLink("Back to List", "AuditChecklistList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })
            <button class="btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400" type="submit" value="Save" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Save</button>
        </div>

        </div>
        </div>
}


@section Scripts {
    <script>

         @*function GetQuestions() {
             var Department = $('#Department').val();
             var AuditCriteria = $('#AuditCriteria').val().toString();

             if (Department != "" && AuditCriteria!="") {
                 jQuery.ajax({
                     url: '@Url.Action("GetQuestions", "GenerateAuditChecklist")',
                     type: 'POST',
                     dataType: "json",
                     data: { 'Department': Department, 'IsoStd': AuditCriteria},
                     success: function (result) {

                         var table = document.getElementById("tblMeetingList");
                         var c = table.rows.length;

                         while (table.rows.length > 0) {
                             table.deleteRow(0);
                         }
                         var cnt = result.length;
                         document.getElementById("itemcnt").value = cnt;
                         //document.getElementById("divAgendasTitle").style.display = "";


                         //while (table.rows.length > 0) {
                         //    table.deleteRow(0);
                         //}

                         if (result != "") {

                             document.getElementById("tblMeetingList").style.display = "";

                             var thTitleRow = table.insertRow();
                             thTitleRow.style = "background-color: #4cc4dd; color: #fff; font-weight: bold;";
                             var cellTitle0 = thTitleRow.insertCell(0);

                             cellTitle0.innerHTML = "Audit Questions";
                             table.rows[0].cells[0].colSpan = 2;
                             table.rows[0].cells[0].style = "color:#fff";


                             var theaderRow = table.insertRow();

                             theaderRow.style = "background-color: #e5eafe; font-weight: bold;";
                             var cellth0 = theaderRow.insertCell(0);
                             var cellth1 = theaderRow.insertCell(1);




                             cellth0.innerHTML = "<th>Sl.No</th>";
                             cellth1.innerHTML = "<th>Questions</th>";


                             table.rows[1].cells[0].style = "color:#0099ff;";
                             table.rows[1].cells[1].style = "color:#0099ff";


                             var list = result;

                             for (var i = 0,j=1; i < result.length; i++,j++) {

                                 // Create an empty <tr> element and add it to the 1st position of the table:
                                 var row = table.insertRow();

                                 // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
                                 var cell0 = row.insertCell(0);
                                 var cell1 = row.insertCell(1);


                                 var Id = result[i].Value;

                                 cell0.innerHTML = " <input type='hidden' id='slno " + j + "' name='slno " + j + "'>" + j;
                                 cell1.innerHTML = " <input type='hidden' id='Audit_Elements " + i + "' name='Audit_Elements " + i + "' value='" + Id + "'>" + result[i].Text;

                             }

                         }
                         else {
                             document.getElementById("tblMeetingList").style.display = "none";


                             bootbox.alert({
                                 title: 'Questions',
                                 message: 'No Questions exists, please add Questions and then try again'
                             });
                         }

                     }
                 });
             }
        }*@

        GetIssuedToDetails();
        var showClass = 'is-visible';
        var hideClass = 'invisible';

                   @*function GetDeptList() {
            var selectedValues = [];
          $("#audit_division :selected").each(function () {
                selectedValues.push($(this).val());
            });
                jQuery.ajax({
                    url: '@Url.Action("FunGetAllDeptList", "EmployeeDetails")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'branch': selectedValues },
                    success: function (result) {
                        //GetLocList(selectedValues);
                        $("#Department").children('option').remove();

                        if (result != null && result.length > 0) {
                            $("#Department").append("<option value=''>Select" + "</option>");

                            $.each(result, function (index, item) {
                                $("#Department").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            });

                            $("#Department").trigger('change');

                            return;
                        }
                        //else {
                        //    bootbox.alert({
                        //        title: 'Department List',
                        //        message: 'No Department exists.'
                        //    });
                        //}
                    }
                });
        }*@


        @*function GetLocList(selectedValues) {
            jQuery.ajax({
                url: '@Url.Action("FunGetAllLocList", "EmployeeDetails")',
                type: 'POST',
                dataType: "json",
                data: { 'branch': selectedValues },
                success: function (result) {
                    $("#location").children('option').remove();
                    $("#location").trigger('change');
                    if (result != null && result.length > 0) {
                        $.each(result, function (index, item) {
                            $("#location").append("<option value='" + item.Value + "'>" + item.Text + "</option>");

                        });
                        $("#location").trigger('change');
                        return;
                    }
                    //else {
                    //    bootbox.alert({
                    //        title: 'Location List',
                    //        message: 'No Location exists.'
                    //    });
                    //}
                }
            });
        }*@

        function GetNotifiedByDetails() {
            var notified_to = $('#notified_to').val();
            if (notified_to != "" && notified_to != null) {
                jQuery.ajax({
                    url: '@Url.Action("FunGetEmpDetails", "NC")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'semp_no': notified_to },
                    success: function (result) {
                        if (result != null) {
                            document.getElementById("notifiedtodiv").classList.remove(hideClass);
                            document.getElementById("notifiedtodiv").classList.add(showClass);

                            document.getElementById("nempid").value = result.emp_id;
                            document.getElementById("nempname").value = result.empname;
                            document.getElementById("nempdiv").value = result.division;
                            document.getElementById("nempdept").value = result.department;
                            document.getElementById("nemploc").value = result.location;
                            document.getElementById("nempemail").value = result.EmailId;
                        }
                    }
                });
            }
        }

        function ValidationNotifiedTo() {
            var validflg = true;
            var ssnMessage = "";

            if (document.getElementById("nempid").value == "") {
                ssnMessage = $('#nempid-message');
                ssnMessage.show();
                validflg = false;
            }
            else {
                ssnMessage = $('#nempid-message');
                ssnMessage.hide();
            }
            return validflg;
        }

        function AddNotifiedTo() {
            if (ValidationNotifiedTo() == true) {
                var cnt = document.getElementById("itemcnt1").value;

                document.getElementById("itemcnt1").value = cnt;
                // Find a <table> element with id="myTable":
                var table = document.getElementById("team-list1");

                // Create an empty <tr> element and add it to the 1st position of the table:
                var row = table.insertRow();


                // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
                var cell0 = row.insertCell(0);
                var cell1 = row.insertCell(1);
                var cell2 = row.insertCell(2);
                var cell3 = row.insertCell(3);
                var cell4 = row.insertCell(4);
                var cell5 = row.insertCell(5);
                var cell6 = row.insertCell(6);

                var nempno = $('#notified_to option:Selected').val();
                var nempid = $('#nempid').val();
                var nempname = $('#nempname').val();
                var nempdiv = $('#nempdiv').val();
                var nempdept = $('#nempdept').val();
                var nemploc = $('#nemploc').val();
                var nempemail = $('#nempemail').val();

                cell0.innerHTML = "<span class='badge badge-info' onclick='deleteRow(this)' style='cursor:pointer;'>Delete</span> <input type = 'hidden' id = 'nempno " + cnt + "' name = 'nempno " + cnt + "' value = '" + nempno + "'>";
                cell1.innerHTML = "<input type='hidden' id='nempid " + cnt + "' name='nempid " + cnt + "' value='" + nempid + "'>" + nempid;
                cell2.innerHTML = "<input type='hidden' id='nempname " + cnt + "' name='nempname " + cnt + "' value='" + nempname + "'>" + nempname;
                cell3.innerHTML = "<input type='hidden' id='nempdiv " + cnt + "' name='nempdiv " + cnt + "' value='" + nempdiv + "'>" + nempdiv;
                cell4.innerHTML = "<input type='hidden' id='nemploc " + cnt + "' name='nemploc " + cnt + "' value='" + nemploc + "'>" + nemploc;
                cell5.innerHTML = "<input type='hidden' id='nempdept " + cnt + "' name='nempdept " + cnt + "' value='" + nempdept + "'>" + nempdept;
                cell6.innerHTML = "<input type='hidden' id='nempemail " + cnt + "' name='nempemail " + cnt + "' value='" + nempemail + "'>" + nempemail;

                cnt++;
                document.getElementById("itemcnt1").value = cnt;

                document.getElementById("hidden card1").classList.remove(hideClass);
                document.getElementById("hidden card1").classList.add(showClass);

                $("#notified_to").val('').trigger('change');
                document.getElementById("nempid").value = "";
                document.getElementById("nempname").value = "";
                document.getElementById("nempdiv").value = "";
                document.getElementById("nempdept").value = "";
                document.getElementById("nemploc").value = "";
                document.getElementById("nempemail").value = "";
            }
        }

         function GetIssuedToDetails () {
            var prepared_by = $('#prepared_by').val();
            if (prepared_by != "" && prepared_by != null) {
                jQuery.ajax({
                    url: '@Url.Action("FunGetEmpDetails", "NC")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'semp_no': prepared_by },
                    success: function (result) {
                        if (result != null) {
                            document.getElementById("issuedtodiv").classList.remove(hideClass);
                            document.getElementById("issuedtodiv").classList.add(showClass);

                           // document.getElementById("reportedbydiv").style.display = 'block';
                            document.getElementById("iempid").value = result.emp_id;
                            document.getElementById("iempname").value = result.empname;
                            document.getElementById("iempdivision").value = result.division;
                            document.getElementById("iempdept").value = result.department;
                            document.getElementById("iemploc").value = result.location;
                            document.getElementById("iempemail").value = result.EmailId;
                        }
                    }
                });
            }
        }

        function ValidationIssuedTo() {
            var validflg = true;
            var ssnMessage = "";

            if (document.getElementById("iempid").value == "") {
                ssnMessage = $('#iempid-message');
                ssnMessage.show();
                validflg = false;
            }
            else {
                ssnMessage = $('#iempid-message');
                ssnMessage.hide();
            }
            return validflg;
        }

        function AddIssuedTo() {
            if (ValidationIssuedTo() == true) {
                var cnt = document.getElementById("count").value;

                document.getElementById("count").value = cnt;
                // Find a <table> element with id="myTable":
                var table = document.getElementById("table-team");

                // Create an empty <tr> element and add it to the 1st position of the table:
                var row = table.insertRow();


                // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
                var cell0 = row.insertCell(0);
                var cell1 = row.insertCell(1);
                var cell2 = row.insertCell(2);
                var cell3 = row.insertCell(3);
                var cell4 = row.insertCell(4);
                var cell5 = row.insertCell(5);
                var cell6 = row.insertCell(6);

                var prepared_by = $('#prepared_by option:selected').val();
                var empid = $('#iempid').val();
                var empname = $('#iempname').val();
                var empdivision = $('#iempdivision').val();
                var empdept = $('#iempdept').val();
                var emploc = $('#iemploc').val();
                var empemail = $('#iempemail').val();

                cell0.innerHTML = "<span class='badge badge-info' onclick='deleteRow(this)' style='cursor:pointer;'>Delete</span> <input type='hidden' id='iempno " + cnt + "' name='iempno " + cnt + "' value='" + prepared_by + "'>";
                cell1.innerHTML = "<input type='hidden' id='iempid " + cnt + "' name='iempid " + cnt + "' value='" + empid + "'>" + empid;
                cell2.innerHTML = "<input type='hidden' id='iempname " + cnt + "' name='iempname " + cnt + "' value='" + empname + "'>" + empname;
                cell3.innerHTML = "<input type='hidden' id='iempdivision " + cnt + "' name='iempdivision " + cnt + "' value='" + empdivision + "'>" + empdivision;
                cell4.innerHTML = "<input type='hidden' id='iemploc " + cnt + "' name='iemploc " + cnt + "' value='" + emploc + "'>" + emploc;
                cell5.innerHTML = "<input type='hidden' id='iempdept " + cnt + "' name='iempdept " + cnt + "' value='" + empdept + "'>" + empdept;
                cell6.innerHTML = "<input type='hidden' id='iempemail " + cnt + "' name='iempemail " + cnt + "' value='" + empemail + "'>" + empemail;

                cnt++;
                document.getElementById("count").value = cnt;

                document.getElementById("NCIssueDiv").classList.remove(hideClass);
                document.getElementById("NCIssueDiv").classList.add(showClass);

                $("#prepared_by").val('').trigger('change');
                document.getElementById("iempid").value = "";
                document.getElementById("iempname").value = "";
                document.getElementById("iempdivision").value = "";
                document.getElementById("iempdept").value = "";
                document.getElementById("iemploc").value = "";
                document.getElementById("iempemail").value = "";
            }
        }

        function GetEmptyGrp() {
            var grp_common = $('input[name="grp_common"]:checked');
            if (grp_common.length > 0) {
                $("#grp").val('');
                $("#team").val('');
                $("#team_common").prop('checked', false);
                $('#grp').trigger('change');
                $('#team').trigger('change');
           }
        }
        
        function GetEmptyTeam() {
            var team_common = $('input[name="team_common"]:checked');
            if (team_common.length > 0) {
                $("#team").val('');
                $('#team').trigger('change');
            }
        }

        function GetEmptyGrpCheckbox() {
            var group = $('#grp').val();
           // var dept = $('Department option:selected').val();
            if (group != "" && group != null) {
                $("#grp_common").prop("checked", false);
            }
        }

        function GetEmptyTeamCheckbox() {
            var team = $('#team').val();
            // var dept = $('Department option:selected').val();
            if (team != "" && team != null) {
                $("#team_common").prop("checked", false);
            }
        }

        function deleteRow(btn) {
            var row = btn.parentNode.parentNode;
            row.parentNode.removeChild(row);
        }

         function Validation() {
            var validflg = true;
            var ssnMessage = "";

             if (document.getElementById("IsoStd").value == "") {
                 ssnMessage = $('#IsoStd-message');
                 ssnMessage.show();

                validflg = false;
            }
            else {
                ssnMessage = $('#IsoStd-message');
                ssnMessage.hide();
             }

             if (document.getElementById("Clause").value == "") {
                 ssnMessage = $('#Clause-message');
                 ssnMessage.show();

                 validflg = false;
             }
             else {
                 ssnMessage = $('#Clause-message');
                 ssnMessage.hide();
             }

             if (document.getElementById("Questions").value == "" ) {
                 ssnMessage = $('#Questions-message');
                 ssnMessage.show();
                 validflg = false;
            }
            else {
                 ssnMessage = $('#Questions-message');
                 ssnMessage.hide();
            }

            return validflg;
        }

        function AddQuestions() {

        if (Validation() == true) {


            var cnt = document.getElementById("itemcnt").value;

            document.getElementById("itemcnt").value = cnt;
            // Find a <table> element with id="myTable":
            var table = document.getElementById("team-list");


            // Create an empty <tr> element and add it to the 1st position of the table:
            var row = table.insertRow();


            // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
            var cell0 = row.insertCell(0);
            var cell1 = row.insertCell(1);
            var cell2 = row.insertCell(2);
            var cell3 = row.insertCell(3);

            //var AccidentType = $('#AccidentTypeSelect').val();
            //var sAccidentTypeSelect = document.getElementById("AccidentTypeSelect");
            //var sAccidentTypeSelectText = sAccidentTypeSelect.options[sAccidentTypeSelect.selectedIndex].text;

            var IsoStd = $('#IsoStd').val();
            var IsoStdName = $("#IsoStd option:selected").text();
            var IsoStdNames= $("#IsoStd option:selected").map(function () { return this.text }).get().join(', ');
            var Clause = $('#Clause').val();
            var Questions = $('#Questions').val();

            cell0.innerHTML = " <img src='@Url.Content("~/images/cancel.png")' onclick='deleteRow(this)' style='cursor:pointer; padding-right: 5px;'/>Remove";
            cell1.innerHTML = "<input type='hidden' id='IsoStd " + cnt + "' name='IsoStd " + cnt + "' value='" + IsoStd + "'>" + IsoStdNames;
            cell2.innerHTML = "<input type='hidden' id='Clause" + cnt + "' name='Clause " + cnt + "' value='" + Clause + "'>" + Clause;
            cell3.innerHTML = "<input type='hidden' id='Questions" + cnt + "' name='Questions " + cnt + "' value='" + Questions + "'>" + Questions;

            cnt++;
            document.getElementById("itemcnt").value = cnt;

            document.getElementById("hidden card").classList.remove(hideClass);
            document.getElementById("hidden card").classList.add(showClass);
            ResetControl();
            }

        }

        function ResetControl () {
            //$("#injury_type").val('').trigger("chosen:updated");
            $("#IsoStd").val('').trigger('change');
            document.getElementById("Clause").value = "";
            document.getElementById("Questions").value = "";
        }

         function DoclevelGroupcode() {
             $("#grp").empty();
             $("#team").empty();
             var sStd = $('#directorate').val();
                jQuery.ajax({
                    url: '@Url.Action("FunGetDeptList", "EmployeeDetails")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'branch': sStd },
                    success: function (result) {
                        $("#grp").empty();
                        if (result != null && result.length > 0) {
                            $("#grp").append("<option value=''>" + "Select" + "</option>");
                            $.each(result, function (index, item) {
                                $("#grp").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                                $("#grp").trigger('change');
                            });
                            return;
                        }
                        else {
                            bootbox.alert({
                                title: 'Group Code',
                                message: 'Please add group code to this directorate selected'
                            });
                            return;
                        }
                    }
                });
        }

        $("#grp").on('select2:select', function (e) {
         
            e.stopImmediatePropagation();

            $("#team").empty();
            var sStd = $('#grp').val();
          
                jQuery.ajax({
                    url: '@Url.Action("GetDocLevelTeam", "GenerateAuditChecklist")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'DocLevelId': sStd },
                    success: function (result) {
                        $("#team").empty();
                        //console.log(result);
                        if (result != null && result.length > 0) {
                            $("#team").append("<option value=''>" + "Select" + "</option>");
                            $.each(result, function (index, item) {

                                $("#team").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                                $("#team").trigger('change');
                            });
                            return;
                        }
                        else {
                            bootbox.alert({
                                title: 'Team Code',
                                message: 'Please add Team code to this directorate selected'
                            });
                            return;
                        }
                    }
            });
        });
       

    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
