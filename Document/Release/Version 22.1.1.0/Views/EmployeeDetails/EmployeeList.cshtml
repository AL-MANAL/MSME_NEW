@using PagedList;
@using PagedList.Mvc;

@model List<ISOStd.Models.EmployeeMasterModels>

@{
    ViewBag.Title = "";
    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
}
@{
    var CurrentUser = Obj.GetCurrentUserSession().empid;
    var ShowEdit = Obj.GetCurrentUserSession().Emp.Contains("3") ? true : false;
    var ShowDel = Obj.GetCurrentUserSession().Emp.Contains("5") ? true : false;
}
@section featured {
    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>
        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Home</span>
                    </a>
                    <span class="breadcrumb-item active">Employee Management</span>
                </div>
                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>
            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">
                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">
                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}
<style>
    .hidden {
        display: none !important;
    }
</style>

<div class="card">
    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">Employee Management</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>
            </div>
        </div>
    </div>
    @if (Obj.GetCurrentUserSession().Emp.Contains("3"))
    {
        <div>
            <div class="card-header bg-white header-elements-sm-inline">
                <div class="header-elements">
                    @if (Obj.GetHRDeptEmployees().Split(',').Contains(CurrentUser))
                    {
                    <a class="btn btn-outline bg-orange text-orange border-orange btn-ladda btn-ladda-progress ladda-button" data-style="radius" href='@Url.Action("AddEmployee", "EmployeeDetails")' title="Add New">
                        <span class="ladda-label">Add employee</span>
                        <span class="ladda-spinner"></span>
                    </a>
                    }
                    &nbsp;&nbsp;&nbsp;

                </div>
                <div class="float-left">
                    <a class="btn btn-outline bg-orange text-orange border-orange anchorDetail" data-style="radius" title="Upload Employees">
                        <span class="ladda-label">Upload Employee</span>
                        <span class="ladda-spinner"></span>
                    </a>

                    <a class="btn btn-outline bg-orange text-orange border-orange btn-ladda btn-ladda-progress ladda-button" data-style="radius" href='@Url.Action("ChkUploadEmployee", "EmployeeImport")' title="Check New uploaded Employees">
                        <span class="ladda-label">New uploaded Emp</span>
                        <span class="ladda-spinner"></span>
                    </a>
                </div>
            </div>
        </div>
    }
    <div class="card-body">
        <div class="options d-flex flex-fill">
            @using (Html.BeginForm("EmployeeList", "EmployeeDetails", FormMethod.Post, new { id = "form1", name = "form1", style = "width:25%" }))
            {
                if (ViewBag.Branch != null)
                {
                    <select class="form-control select-search select2-hidden-accessible" data-fouc id="branch_name" name="branch_name" onchange="getDetails()">
                        <option value='' hidden>Division</option>
                        @if (ViewBag.Branch != null)
                        {
                            foreach (var item in ViewBag.Branch)
                            {
                                if (item.Value == ViewBag.Branch_name)
                                {
                                    <option value='@item.Value' selected>@item.Text</option>
                                }
                                else
                                {
                                    <option value='@item.Value'>@item.Text</option>
                                }
                            }
                        }
                    </select>
                }
            }
        </div>
    </div>

    <div class="card-body">
        <table class="table table-bordered table-striped table-hover datatable-responsive" id="employee">
            <thead>

                <tr>
                    <th>
                        Sl No
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().emp_id)
                    </th>
                    <th>
                        Name
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Designation)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().EmailId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().dept_id)
                    </th>
                    @*<th class="not-export-column">
                            Add Dependents
                        </th>
                        <th class="not-export-column">
                            Add Pass
                        </th>
                        <th class="not-export-column">Edit</th>
                        <th class="not-export-column">Delete</th>*@
                    <th data-priority="2" class="text-center not-export-column">Actions</th>



                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Count() > 0)
                {
                    int i = 0;
                    foreach (var item in Model)
                    {
                        i = i + 1;
                        <tr>
                            <td>
                                @i
                            </td>
                            <td>
                                @Html.ActionLink(item.emp_id.ToString(), "EmployeeDetails", new { emp_no = item.emp_no.ToString() })
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.emp_firstname) @Html.DisplayFor(modelItem => item.emp_middlename) @Html.DisplayFor(modelItem => item.emp_lastname)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Designation)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.EmailId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.dept_id)
                            </td>
                            <td class="text-center">
                                <div class="list-icons">
                                    <div class="list-icons-item dropdown">
                                        <a href="#" class="list-icons-item caret-0 dropdown-toggle" data-toggle="dropdown">
                                            <i class="icon-gear mr-2"></i>
                                        </a>

                                        <div class="dropdown-menu dropdown-menu-right">
@if (Obj.GetHRDeptEmployees().Split(',').Contains(CurrentUser))
{
                                            if (Obj.GetCurrentUserSession().Emp.Contains("3"))
                                            {
                                                <a class="dropdown-item" href='@Url.Action("AddEmployeeDependents", "EmployeeDetails", new { emp_no = item.emp_no.ToString() })' title="Add Dependents" onclick="HyperLinkProgressIconFunction()">
                                                    <i class="icon-user-plus"></i>Add Dependents
                                                </a>

                                            }
                                            <a class="dropdown-item" href='@Url.Action("EmployeeDependentList", "EmployeeDetails", new { emp_no = item.emp_no.ToString() })' title="List" onclick="HyperLinkProgressIconFunction()">
                                                <i class="icon-list3"></i>Dependents List
                                            </a>
                                            if (Obj.GetCurrentUserSession().Emp.Contains("3"))
                                            {
                                                 <a class="dropdown-item" href='@Url.Action("AddCompetenceDetails", "EmployeeDetails", new { emp_no = item.emp_no.ToString() })' title="Employee Competence Details" onclick="HyperLinkProgressIconFunction()">
                                                         <i class="icon-user-plus"></i>Add Competence Details
                                                 </a>
                                            }

                                            <a class="dropdown-item" href='@Url.Action("CompetenceDetails", "EmployeeDetails", new { emp_no = item.emp_no.ToString() })' title="List" onclick="HyperLinkProgressIconFunction()">
                                                <i class="icon-list3"></i>Competence Details List
                                            </a>
                                            if (Obj.GetCurrentUserSession().Emp.Contains("3"))
                                            {
                                                <a class="dropdown-item" href='@Url.Action("AddEmployeePassDetails", "EmployeeDetails", new { emp_no = item.emp_no.ToString() })' title="Add Pass" onclick="HyperLinkProgressIconFunction()">
                                                    <i class="icon-user-plus"></i>Add Pass
                                                </a>
                                            }
                                            <a class="dropdown-item" href='@Url.Action("EmployeePassList", "EmployeeDetails", new { emp_no = item.emp_no.ToString() })' title="List" onclick="HyperLinkProgressIconFunction()">
                                                <i class="icon-list3"></i>Pass List
                                            </a>
                                            if (ShowEdit)
                                            {
                                                <a class="dropdown-item" href='@Url.Action("EmployeeEdit", "EmployeeDetails", new { emp_no = item.emp_no })' title="Edit" onclick="HyperLinkProgressIconFunction()">
                                                    <i class="icon-pencil7"></i>Edit
                                                </a>
                                            }
                                            if (ShowDel)
                                            {
                                                <span class="dropdown-item text-center" title="Delete" onclick="DeleteItems(@item.emp_no)" style="cursor:pointer;"><i class="icon-bin"></i>Delete</span>
                                            }
}

                                        </div>
                                    </div>
                                </div>
                            </td>
                            @*<td>
                                      @if (Obj.GetCurrentUserSession().Emp.Contains("3"))
                                      {
                                          <a href='@Url.Action("AddEmployeeDependents", "EmployeeDetails", new { emp_no = item.emp_no.ToString() })' title="Add Dependents" onclick="HyperLinkProgressIconFunction()">
                                              <i class="icon-user-plus"></i>
                                          </a>
                                      }
                                      <a href='@Url.Action("EmployeeDependentList", "EmployeeDetails", new { emp_no = item.emp_no.ToString() })' title="List" onclick="HyperLinkProgressIconFunction()">
                                          <i class="icon-list3"></i>
                                      </a>
                                  </td>
                                  <td>
                                      @if (Obj.GetCurrentUserSession().Emp.Contains("3"))
                                      {
                                          <a href='@Url.Action("AddEmployeePassDetails", "EmployeeDetails", new { emp_no = item.emp_no.ToString() })' title="Add Pass" onclick="HyperLinkProgressIconFunction()">
                                              <i class="icon-user-plus"></i>
                                          </a>
                                      }
                                      <a href='@Url.Action("EmployeePassList", "EmployeeDetails", new { emp_no = item.emp_no.ToString() })' title="List" onclick="HyperLinkProgressIconFunction()">
                                          <i class="icon-list3"></i>
                                      </a>
                                  </td>
                                  <td>
                                      <a href='@Url.Action("EmployeeEdit", "EmployeeDetails", new { emp_no = item.emp_no })' title="Edit" onclick="HyperLinkProgressIconFunction()">
                                          <span class="badge badge-info">Edit</span>
                                      </a>
                                  </td>

                                <td>
                                    <span class="badge badge-danger" title="Delete" onclick="DeleteItems(@item.emp_no)" style="cursor:pointer;">Delete</span>
                                      </td>*@


                        </tr>
                    }
                }

            </tbody>
        </table>
    </div>
    <div class="card-body">
        <div class="container-fluid">
            <div id="myModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
                 aria-hidden="true" data-keyboard="false" data-backdrop="static">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <!--Header-->
                        <div class="modal-header">
                            <h4 class="modal-title" id="eventTitle"></h4>
                            <button type="button" id="btnclose" class="close" data-dismiss="modal"aria-label="Close">
                                <span aria-hidden="true">×</span>
                            </button>
                        </div>
                        <!--Body-->
                        <div class="modal-body">
                            <p id="pDetails">
                                <table class="table table-lg">
                                    <tbody>
                                        <tr class="row">
                                            <td class="col-xs-3 col-md-2">
                                                File: <text style="color:red;">*</text>
                                            </td>
                                            <td class="col">
                                                <div class="editor-field">
                                                    <input type="file" name="upload" id="upload" onchange="FileFormatValidationImport(this)" accept=".xls,.xlsx" required class="bootstrap-uploader" data-fouc/>
                                                </div>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </p>
                        </div>
                        <!--Footer-->
                        <div class="modal-footer">
                            <button id="btnSave" class="btn btn-primary">Upload</button>
                            <button type="button" id="btnclose1" class="btn btn-danger" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@section scripts {
<script type="text/javascript">

                    //----zzz
                    $(document).ready(function () {@if (TempData["alertdata"] != null ) {

           @: new Noty({
                                   @:     text: '@TempData["alertdata"]',
                                   @:     type: 'error'
                                   @: }).show();
                                        }

        @if (@TempData["Successdata"] != null ) {

        @:    new Noty({
                                 @:       text: '@TempData["Successdata"]',
                                 @:       type: 'success'
         @:}).show();
        }

                        $(".anchorDetail").click(function () {
                            $('#myModal').modal('show');
                        });

                         $('#btnSave').click(function () {
            //Validation/
            var uploadval = $('#upload').val();
            if (uploadval == "") { 
                    bootbox.alert({
                        title: 'File',
                        message: 'Please select excel file'
                    });
                    return;               
            }  
            
           SaveEvent();
            // call function for submit data to the server
        })
          });

    function SaveEvent() {
        //var data = new FormData();
        //var files = $("#file").get(0).files;

        //var frmData = new FormData();
        //var filebase = $("#upload").get(0);
        //var files = filebase.files;
        //frmData.append(files[0]);

        var fd = new FormData();
        var files = $('#upload')[0].files[0];
        fd.append('upload', files);
            $.ajax({
                type: "POST",
                url: '@Url.Action("AddEmployeeImport", "EmployeeImport")',
                data: fd,
                processData: false,
                contentType: false,
                success: function (result) {
                    bootbox.alert({
                        title: 'Employees Uploaded',
                        message: result.data1 + ' Employees are uploaded <br/>'+
                                 result.data2 + ' Employees are not uploaded <br/>'
                    });   
                    document.getElementById("upload").value = ""; 
                    document.getElementById("upload").dispatchEvent(new Event('change'));
                    $('#myModal').modal('hide');                    
                },
                error: function () {
                    bootbox.alert({
                        title: 'File upload',
                        message: 'Failed'
                    });
                }
            })
    }

    function FileFormatValidationImport(file) {
        var ext = file.value.split(".").pop().toLowerCase();
        if ($.inArray(ext, ["xlsx", "xls"]) == -1) {
            file.value = "";
            jAlert("Invalid file format, please upload only pdf format");
        }
    }
  
    $("#btnclose").click(function() {        
        document.getElementById("upload").value = "";
        document.getElementById("upload").dispatchEvent(new Event('change'));
    });

    $("#btnclose1").click(function () {
        document.getElementById("upload").value = ""; 
        document.getElementById("upload").dispatchEvent(new Event('change'));
    });

                    var employee = function () {


                       @*var ShowEdit = @(Obj.GetCurrentUserSession().Emp.Contains("3") ? "true" : "false");
                 var ShowDel = @(Obj.GetCurrentUserSession().Emp.Contains("5") ? "true" : "false");*@



                        // Basic Datatable examples
                        var _componentDatatableBasic = function () {
                            if (!$().DataTable) {
                                console.warn('Warning - datatables.min.js is not loaded.');
                                return;
                            }

                            //Setting datatable defaults
                            $.extend($.fn.dataTable.defaults, {
                                autoWidth: false,
                                responsive: true,
                                columnDefs: [{
                                    orderable: false,
                                    targets: 'not-export-column'

                                }],
                                responsivePriority: 2, targets: -1,

                                colReorder: false,
                                dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                                //dom: 'lBfrtip',
                                language: {
                                    search: '<span>Filter:</span> _INPUT_',
                                    searchPlaceholder: 'Type to filter...',
                                    lengthMenu: '<span>Show:</span> _MENU_',
                                    paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                                }
                            });

   var myClass = "";
                var Delclass= @(Obj.GetCurrentUserSession().Emp.Contains("4") ? "true" : "false");
                if (Delclass == false) { myClass = 'hidden'  };


                            var table = $('#employee').DataTable({
                                drawCallback: function () {




                                    var dropdownMenu;

                                    // and when you show it, move it to the body
                                    $('.datatable-responsive').on('show.bs.dropdown', function (e) {

                                        // grab the menu
                                        dropdownMenu = $(e.target).find('.dropdown-menu');

                                        // detach it and append it to the body
                                        $('body').append(dropdownMenu.detach());

                                        // grab the new offset position
                                        var eOffset = $(e.target).offset();

                                        // make sure to place it where it would normally go (this could be improved)
                                        dropdownMenu.css({
                                            'display': 'block',
                                            'top': eOffset.top + $(e.target).outerHeight(),
                                            'left': eOffset.left
                                        });
                                    });

                                    // and when you hide it, reattach the drop down, and hide it normally
                                    $('.datatable-responsive').on('hide.bs.dropdown', function (e) {
                                        $(e.target).append(dropdownMenu.detach());
                                        dropdownMenu.hide();
                                    });

                                },
                                lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                                colReorder: {
                                    fixedColumnsLeft: 1
                                },
                                stateSave: true,
                                stateSaveParams: function (settings, data) {
                                    for (var i = 0, ien = data.columns.length; i < ien; i++) {
                                        delete data.columns[i].visible;
                                        delete data.columns[i].search;
                                    }
                                },
                                scrollY: '350px',
                                scrollCollapse: true,

                                keys: {
                                    className: 'focus focus-success'
                                },

                                buttons: {
                                    buttons: [
                                        {
                                            extend: 'copyHtml5',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'employee Data export',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },
                                        },
                                        {
                                            extend: 'excelHtml5',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'employee Data export',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },

                                        },
                                        {
                                            extend: 'pdfHtml5',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'employee Data export',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },
                                        },
                                        {
                                            extend: 'csvHtml5',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'employee Data export',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },
                                        },
                                        {
                                            extend: 'print',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'employee Data export',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },
                                        },

                                        {
                                            extend: 'colvis',
                                            text: '<i class="icon-three-bars"></i>',
                                            className: 'btn bg-blue btn-icon dropdown-toggle',
                                            columns: ':visible:not(.not-export-column)'
                                        }
                                    ]
                                }
                            });
                            // Adjust columns on window resize
                            setTimeout(function () {
                                $(window).on('resize', function () {
                                    table.columns.adjust();
                                });
                            }, 100);


                            //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                            $('.sidebar-control').on('click', function () {

                                setTimeout(function () {
                                    //alert("gii");

                                    table.columns.adjust().draw();
                                    $("#employee").resize();
                                }, 100);

                            });
                            //}

                            $('#employee').on('page.dt', function () {
                                //table.draw();
                                //alert("zzz1");
                                $("#employee").resize();

                            });

                            $('#employee').on('column-visibility.dt', function () {
                                //table.draw();
                                //alert("zzz2");
                                $("#employee").resize();

                            });

                            $('#employee').on('order.dt', function () {
                                //table.draw();
                                //alert("zzz3");
                                $("#employee").resize();

                            });


                            $('#employee').on('responsive-display.dt', function () {
                                //table.draw();
                                //alert("zzz4");
                                $("#employee").resize();

                            });


                            $('#employee').on('responsive-resize.dt', function () {
                                //table.draw();
                                //alert("zzz4");
                                $("#employee").resize();

                            });


                            //.on('order.dt', function () {
                            //    table.columns.adjust().draw();
                            //    $("#qhse").resize(); })
                            //.on('search.dt', function () {
                            //    table.columns.adjust().draw();
                            //    $("#qhse").resize(); })

                            //.on('column-visibility.dt', function () {
                            //    table.columns.adjust().draw();
                            //    $("#qhse").resize();
                            //})
                        };

                        // Select2 for length menu styling
                        var _componentSelect2 = function () {
                            if (!$().select2) {
                                console.warn('Warning - select2.min.js is not loaded.');
                                return;
                            }

                            // Initialize
                            $('.dataTables_length select').select2({
                                minimumResultsForSearch: Infinity,
                                dropdownAutoWidth: true,
                                width: 'auto'
                            });
                        };
                        //
                        // Return objects assigned to module
                        //

                        return {
                            init: function () {
                                _componentDatatableBasic();
                                _componentSelect2();
                            }
                        }
                    }();


                    // Initialize module
                    // ------------------------------

                    document.addEventListener('DOMContentLoaded', function () {
                        employee.init();
                    });

                    function DeleteItems(emp_no) {
                        bootbox.confirm({
                            title: 'Confirm dialog',
                            message: 'Are you Sure you want to Delete the current Record?',
                            buttons: {
                                confirm: {
                                    label: 'Yes',
                                    className: 'btn-primary'
                                },
                                cancel: {
                                    label: 'Cancel',
                                    className: 'btn-link'
                                }
                            },
                            callback: function (r) {
                                if (r == true) {
                                    jQuery.ajax({

                                        url: '@Url.Action("EmployeeDelete", "EmployeeDetails")',
                                type: 'POST',
                                dataType: "json",
                                data: { 'emp_no': emp_no },
                                success: function (result) {


                                    //// Add new params to the querystring dictionary


                                    window.location.href =
                                        window.location.protocol + "//" +
                                        window.location.host +
                                        window.location.pathname

                                }
                            });
                            return true;
                        }
                        else if (r == false) {
                            bootbox.hideAll();
                            return false;
                        }
                    }
                });
                    }

                    function getDetails() {
                var branch_name = document.getElementById("branch_name").value;

                   jQuery.ajax({
                                url: '@Url.Action("EmployeeListSearch", "EmployeeDetails")',
                        type: 'POST',
                        dataType: "json",
                        data: { 'branch_name': branch_name },
                        success: function (result) {
                            var params = {
                                branch_name: branch_name
                            };
                            queryString = $.param(params);

                            window.location.href =
                                window.location.protocol + "//" +
                                window.location.host +
                                window.location.pathname +
                               '?' + queryString;

                        }
                    });
            }
</script>

}