@model ISOStd.Models.TRAModels
@using System.Data;

@{
    ViewBag.Title = "";
    DataSet dsPers = ViewBag.Pers;
    DataSet dsTask = ViewBag.Task;
    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
    ISOStd.Models.RiskMgmtModels ObjRiskModel = new ISOStd.Models.RiskMgmtModels();
}

@section featured {
    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4><span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Home</span>
                    </a>
                    <a href="@Url.Action("TRAList", "TRA", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Job Safety Analysis</span>
                    </a>
                    <span class="breadcrumb-item active">Job Safety Analysis Details</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i>All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}


<div class="card">

    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">Job Safety Analysis Details</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>

            </div>
        </div>
    </div>

    <div>
        <div class="card-header bg-white header-elements-sm-inline">

            <div class="header-elements">
                <div class="mt-2 mt-sm-0">
                    <a class="btn bg-orange btn-labeled btn-labeled-left" data-style="radius" href='@Url.Action("TRAEdit", "TRA", new { id_tra = Model.id_tra })' title="Edit" onclick="HyperLinkProgressIconFunction()">
                        <b><i class="icon-add-to-list"></i></b>Edit
                    </a>
                    @Html.ActionLink("Back to List", "TRAList", null, new { @class = "btn btn-outline bg-orange text-orange border-orange", onclick = "HyperLinkProgressIconFunction()" })
                </div>
            </div>
        </div>

    </div>

    <div class="card-body">
        <div class="container-fluid">

            <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                <thead></thead>
               
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.tra_no)
                        </p>
                    </td>

                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.tra_no)
                        </span>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.tra_date)
                        </p>
                    </td>

                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                           @if (Model.tra_date != null && Model.tra_date > Convert.ToDateTime("01/01/0001"))
                            {
                                @Html.Label(Model.tra_date.ToString("dd/MM/yyyy"))
                            }
                        </span>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.revno)
                        </p>
                    </td>

                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.revno)
                        </span>
                    </td>

                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.tra_ref)
                        </p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.tra_ref)
                        </span>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.branch)
                        </p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.branch)
                        </span>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.department)
                        </p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.department)
                        </span>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.location)
                        </p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.location)
                        </span>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.desc_work)
                        </p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.desc_work)
                        </span>
                    </td>
                </tr>

                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.document_title)
                        </p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.document_title)
                        </span>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.duration)
                        </p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                           @Html.DisplayFor(model => model.duration)
                        </span>
                    </td>
                </tr>

                @*<tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.task_performer)
                        </p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.task_performer)
                        </span>
                    </td>                  
                </tr>*@            
            </table>

            @if (dsPers != null && dsPers.Tables.Count > 0 && dsPers.Tables[0].Rows.Count > 0)
            {
                <br />
                <h2 class="bg-dark pl-sm-2">Task Performer Details</h2>
                <div class="table-responsive">
                    <table class="table table-bordered table-striped table-hover datatable-responsive" id="table1">
                        <thead>
                            <tr class="bg-brown">

                               <th>Sl No</th>
                                <th>Person Name</th>
                                <th>Designation</th>

                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0,j=1; i < dsPers.Tables[0].Rows.Count; i++,j++)
                            {
                                <tr>
                               
                                    <td>
                                        @j
                                    </td>
                                    <td>
                                        @dsPers.Tables[0].Rows[i]["pers_name"].ToString()
                                    </td>
                                    <td>
                                        @dsPers.Tables[0].Rows[i]["designation"].ToString()
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>



                </div>
            }

            @if (dsTask != null && dsTask.Tables.Count > 0 && dsTask.Tables[0].Rows.Count > 0)
            {
                <br />
                <h2 class="bg-dark pl-sm-2">Risk Activity Evaluation</h2>
                <div class="table-responsive">
                    <table class="table table-bordered table-striped table-hover datatable-responsive" id="table2">
                        <thead>
                            <tr class="bg-brown">

                                <th>Sl No</th>
                                <th>Activities</th>
                        <th>Hazards</th>
                        <th>Causes & Threats</th>
                        <th>Consequences</th>
                        <th>Existing control Measures</th>
                        <th>Severity</th>
                        <th>Probability</th>
                        <th>Risk Rating</th>
                        <th>Additional risk reduction measures</th>
                        <th>Severity</th>
                        <th>Probability</th>
                        <th>Risk Rating</th> 
                                <th>Status</th>
                                <th>Date</th>
                                <th>Closed by</th>
                                <th>Out Come</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0,j=1; i < dsTask.Tables[0].Rows.Count; i++,j++)
                            {
                            <tr>
                                <td>
                                    @j
                                </td>
                                <td>
                                    @dsTask.Tables[0].Rows[i]["activity"].ToString()
                                </td>
                                <td>
                                    @dsTask.Tables[0].Rows[i]["hazards"].ToString()
                                </td>
                                <td>
                                    @dsTask.Tables[0].Rows[i]["causes"].ToString()
                                </td>
                                <td>
                                    @dsTask.Tables[0].Rows[i]["consequences"].ToString()
                                </td>
                                <td>
                                    @dsTask.Tables[0].Rows[i]["existing_measure"].ToString()
                                </td>
                                <td>
                                    @Obj.GetDropdownitemById(dsTask.Tables[0].Rows[i]["severity"].ToString())
                                </td>
                                <td>
                                    @Obj.GetDropdownitemById(dsTask.Tables[0].Rows[i]["probability"].ToString())
                                </td>
                                <td>
                                    @dsTask.Tables[0].Rows[i]["risk_rating"].ToString()
                                </td>
                                <td>
                                    @dsTask.Tables[0].Rows[i]["additional_measures"].ToString()
                                </td>
                                <td>
                                    @Obj.GetDropdownitemById(dsTask.Tables[0].Rows[i]["add_severity"].ToString())
                                </td>
                                <td>
                                    @Obj.GetDropdownitemById(dsTask.Tables[0].Rows[i]["add_probability"].ToString())
                                </td>
                                <td>
                                    @dsTask.Tables[0].Rows[i]["add_risk_rating"].ToString()
                                </td>
                                <td>
                                    @Obj.GetDropdownitemById(dsTask.Tables[0].Rows[i]["tra_status"].ToString())
                                </td>
                                <td>
                                    @if (dsTask.Tables[0].Rows[i]["close_date"].ToString() != ""@*&& Convert.ToDateTime(dsTask.Tables[0].Rows[i]["close_date"].ToString()) > Convert.ToDateTime(01/01/0001)*@)
                                     {
                            @Convert.ToDateTime(dsTask.Tables[0].Rows[i]["close_date"].ToString()).ToString("dd/MM/yyyy")
                                     }
                                </td>
                                <td>
                                    @Obj.GetMultiHrEmpNameById(dsTask.Tables[0].Rows[i]["close_by"].ToString())
                                </td>
                                <td>
                                    @dsTask.Tables[0].Rows[i]["out_come"].ToString()
                                </td>
                            </tr>
                            }
                        </tbody>
                    </table>



                </div>
            }

        </div>
    </div>

</div>


@section scripts {
    <script>
        //----zzz


        $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
                                @:     text: '@TempData["alertdata"]',
                                @:     type: 'error'
                                @: }).show();
                                             }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
                                @:       text: '@TempData["Successdata"]',
                                @:       type: 'success'
                @:}).show();
        }
});

//zzz----



var table1 = function () {


    //
    // Setup module components
    //

    // Basic Datatable examples
    var _componentDatatableBasic = function () {
        if (!$().DataTable) {
            console.warn('Warning - datatables.min.js is not loaded.');
            return;
        }

        //Setting datatable defaults
        $.extend($.fn.dataTable.defaults, {
            autoWidth: false,
            responsive: true,
            columnDefs: [{
                orderable: false,
                width: 100,
                targets: []
            }],

            colReorder: false,
            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
            //dom: 'lBfrtip',
            language: {
                search: '<span>Filter:</span> _INPUT_',
                searchPlaceholder: 'Type to filter...',
                lengthMenu: '<span>Show:</span> _MENU_',
                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
            }
        });


        var table = $('#table1').DataTable({

            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
            colReorder: {
                fixedColumnsLeft: 1
            },
            stateSave: true,

            scrollY: '350px',
            scrollCollapse: true,


            keys: {
                className: 'focus focus-success'
            },

            buttons: {
                buttons: [
                    {
                        extend: 'copyHtml5',
                        className: 'btn btn-light',
                        title: 'Data export',
                        exportOptions: {
                            columns: ':visible :not(.not-export-column)'
                        },
                    },
                    {
                        extend: 'excelHtml5',
                        className: 'btn btn-light',
                        title: 'Data export',
                        exportOptions: {
                            columns: ':visible :not(.not-export-column)'
                        },

                    },
                    {
                        extend: 'pdfHtml5',
                        className: 'btn btn-light',
                        title: 'Data export',
                        exportOptions: {
                            columns: ':visible :not(.not-export-column)'
                        },
                    },
                    {
                        extend: 'csvHtml5',
                        className: 'btn btn-light',
                        title: 'Data export',
                        exportOptions: {
                            columns: ':visible :not(.not-export-column)'
                        },
                    },
                    {
                        extend: 'print',
                        className: 'btn btn-light',
                        title: 'Data export',
                        exportOptions: {
                            columns: ':visible :not(.not-export-column)'
                        },
                    },

                    {
                        extend: 'colvis',
                        text: '<i class="icon-three-bars"></i>',
                        className: 'btn bg-blue btn-icon dropdown-toggle'
                    }
                ]
            }




        });
        // Adjust columns on window resize
        setTimeout(function () {
            $(window).on('resize', function () {
                table.columns.adjust();
            });
        }, 100);


        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
        $('.sidebar-control').on('click', function () {

            setTimeout(function () {
                //alert("gii");

                table.columns.adjust().draw();
                $("#table1").resize();
            }, 100);

        });
        //}

        $('#table1').on('page.dt', function () {
            //table.draw();
            //alert("zzz1");
            $("#table1").resize();

        });

        $('#table1').on('column-visibility.dt', function () {
            //table.draw();
            //alert("zzz2");
            $("#table1").resize();

        });

        $('#table1').on('order.dt', function () {
            //table.draw();
            //alert("zzz3");
            $("#table1").resize();

        });


        $('#table1').on('responsive-display.dt', function () {
            //table.draw();
            //alert("zzz4");
            $("#table1").resize();

        });


        $('#table1').on('responsive-resize.dt', function () {
            //table.draw();
            //alert("zzz4");
            $("#table1").resize();

        });


        //.on('order.dt', function () {
        //    table.columns.adjust().draw();
        //    $("#qhse").resize(); })
        //.on('search.dt', function () {
        //    table.columns.adjust().draw();
        //    $("#qhse").resize(); })

        //.on('column-visibility.dt', function () {
        //    table.columns.adjust().draw();
        //    $("#qhse").resize();
        //})



    };






    // Select2 for length menu styling
    var _componentSelect2 = function () {
        if (!$().select2) {
            console.warn('Warning - select2.min.js is not loaded.');
            return;
        }

        // Initialize
        $('.dataTables_length select').select2({
            minimumResultsForSearch: Infinity,
            dropdownAutoWidth: true,
            width: 'auto'
        });
    };


    //
    // Return objects assigned to module
    //

    return {
        init: function () {
            _componentDatatableBasic();
            _componentSelect2();
        }
    }
}();

var table2 = function () {


    //
    // Setup module components
    //

    // Basic Datatable examples
    var _componentDatatableBasic = function () {
        if (!$().DataTable) {
            console.warn('Warning - datatables.min.js is not loaded.');
            return;
        }

        //Setting datatable defaults
        $.extend($.fn.dataTable.defaults, {
            autoWidth: false,
            responsive: true,
            columnDefs: [{
                orderable: false,
                width: 100,
                targets: [1, 7]
            }],

            colReorder: false,
            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
            //dom: 'lBfrtip',
            language: {
                search: '<span>Filter:</span> _INPUT_',
                searchPlaceholder: 'Type to filter...',
                lengthMenu: '<span>Show:</span> _MENU_',
                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
            }
        });


        var table = $('#table2').DataTable({

            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
            colReorder: {
                fixedColumnsLeft: 1
            },
            stateSave: true,

            scrollY: '350px',
            scrollCollapse: true,


            keys: {
                className: 'focus focus-success'
            },

            buttons: {
                buttons: [
                    {
                        extend: 'copyHtml5',
                        className: 'btn btn-light',
                        title: 'Data export',
                        exportOptions: {
                            columns: ':visible :not(.not-export-column)'
                        },
                    },
                    {
                        extend: 'excelHtml5',
                        className: 'btn btn-light',
                        title: 'Data export',
                        exportOptions: {
                            columns: ':visible :not(.not-export-column)'
                        },

                    },
                    {
                        extend: 'pdfHtml5',
                        className: 'btn btn-light',
                        title: 'Data export',
                        exportOptions: {
                            columns: ':visible :not(.not-export-column)'
                        },
                    },
                    {
                        extend: 'csvHtml5',
                        className: 'btn btn-light',
                        title: 'Data export',
                        exportOptions: {
                            columns: ':visible :not(.not-export-column)'
                        },
                    },
                    {
                        extend: 'print',
                        className: 'btn btn-light',
                        title: 'Data export',
                        exportOptions: {
                            columns: ':visible :not(.not-export-column)'
                        },
                    },

                    {
                        extend: 'colvis',
                        text: '<i class="icon-three-bars"></i>',
                        className: 'btn bg-blue btn-icon dropdown-toggle'
                    }
                ]
            }




        });
        // Adjust columns on window resize
        setTimeout(function () {
            $(window).on('resize', function () {
                table.columns.adjust();
            });
        }, 100);


        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
        $('.sidebar-control').on('click', function () {

            setTimeout(function () {
                //alert("gii");

                table.columns.adjust().draw();
                $("#table2").resize();
            }, 100);

        });
        //}

        $('#table2').on('page.dt', function () {
            //table.draw();
            //alert("zzz1");
            $("#table2").resize();

        });

        $('#table2').on('column-visibility.dt', function () {
            //table.draw();
            //alert("zzz2");
            $("#table2").resize();

        });

        $('#table2').on('order.dt', function () {
            //table.draw();
            //alert("zzz3");
            $("#table2").resize();

        });


        $('#table2').on('responsive-display.dt', function () {
            //table.draw();
            //alert("zzz4");
            $("#table2").resize();

        });


        $('#table2').on('responsive-resize.dt', function () {
            //table.draw();
            //alert("zzz4");
            $("#table2").resize();

        });


        //.on('order.dt', function () {
        //    table.columns.adjust().draw();
        //    $("#qhse").resize(); })
        //.on('search.dt', function () {
        //    table.columns.adjust().draw();
        //    $("#qhse").resize(); })

        //.on('column-visibility.dt', function () {
        //    table.columns.adjust().draw();
        //    $("#qhse").resize();
        //})



    };






    // Select2 for length menu styling
    var _componentSelect2 = function () {
        if (!$().select2) {
            console.warn('Warning - select2.min.js is not loaded.');
            return;
        }

        // Initialize
        $('.dataTables_length select').select2({
            minimumResultsForSearch: Infinity,
            dropdownAutoWidth: true,
            width: 'auto'
        });
    };


    //
    // Return objects assigned to module
    //

    return {
        init: function () {
            _componentDatatableBasic();
            _componentSelect2();
        }
    }
}();




// Initialize module
// ------------------------------

document.addEventListener('DOMContentLoaded', function () {
    table1.init();
});

document.addEventListener('DOMContentLoaded', function () {
    table2.init();
});

    </script>


}
