@model ISOStd.Models.QHSEPlannerModels
@using System.Data

@{
    ViewBag.Title = "QHSEPlanner";
    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
}

@section featured {


    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("QHSEPlannerList", "QHSEPlanner", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> QHSE List</span>
                    </a>
                    <span class="breadcrumb-item active"> Event Planner Details</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            <div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Event Planner Details</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>
                </div>
            </div>
        </div>
        <div class="card-body">

            @*<a class="btn btn-outline bg-orange text-orange border-orange btn-ladda btn-ladda-progress ladda-button" data-style="radius" href='@Url.Action("QHSEPlannerList", "QHSEPlanner")' title="Back to List">
                <p class="ladda-label">Back to List</p>
                <p class="ladda-spinner"></p>
            </a>*@

            @Html.ActionLink("Back to List", "QHSEPlannerList", null, new { @class = "btn btn-outline bg-orange text-orange border-orange", onclick = "HyperLinkProgressIconFunction()" })
        </div>
        <div class="container-fluid">
            <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                <thead></thead>
                <tbody>
                    <tr class="row">
                        <th class="col-xs-3 col-md-3"> <p class="bg-brown py-1 px-2 rounded"> @Html.DisplayNameFor(model => model.Activity_name) </p></th>
                        <td class="col"><p class="bg-dark py-1 px-2 rounded"> @Html.DisplayFor(model => model.Activity_name)</p></td>

                    </tr>

                    <tr class="row">
                        <th class="col-xs-3 col-md-3"> <p class="bg-brown py-1 px-2 rounded">@Html.DisplayNameFor(model => model.Planned_date)  </p></th>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @if (Model.Planned_date != null && Model.Planned_date > Convert.ToDateTime("01/01/0001"))
                                {
                                    @Html.Label(Model.Planned_date.ToString("dd/MM/yyyy"))
                                }
                            </p>
                        </td>

                    </tr>
                    <tr class="row">
                        <th class="col-xs-3 col-md-3"> <p class="bg-brown py-1 px-2 rounded"> @Html.DisplayNameFor(model => model.Target_date)  </p></th>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @if (Model.Target_date != null && Model.Target_date > Convert.ToDateTime("01/01/0001"))
                                {
                                    @Html.Label(Model.Target_date.ToString("dd/MM/yyyy"))
                                }

                            </p>
                        </td>

                    </tr>

                    <tr class="row">
                        <th class="col-xs-3 col-md-3">   <p class="bg-brown py-1 px-2 rounded"> @Html.DisplayNameFor(model => model.Actual_date)  </p> </th>
                        <td class="col">

                            @if (Model.Actual_date != null && Model.Actual_date > Convert.ToDateTime("01/01/0001"))
                            {
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.Label(Model.Actual_date.ToString("dd/MM/yyyy"))
                                </p>
                            }
                            else
                            {

                                <span class="badge badge-danger">Status Not Yet Updated</span>



                            }

                        </td>

                    </tr>

                    <tr class="row">
                        <th class="col-xs-3 col-md-3"> <p class="bg-brown py-1 px-2 rounded"> @Html.DisplayNameFor(model => model.Person_responsible)  </p></th>

                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded"> @Html.DisplayFor(model => model.Person_responsible)</p>
                        </td>


                    </tr>


                    <tr class="row">
                        <th class="col-xs-3 col-md-3">  <p class="bg-brown py-1 px-2 rounded">  @Html.DisplayNameFor(model => model.Status) </p></th>

                        <td class="col">
                            @if (Model.Status != null && Model.Status != "")
                            {
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.Status)
                                </p>
                            }
                            else
                            {

                                <span class="badge badge-danger">Status Not Yet Updated</span>



                            }




                        </td>

                    </tr>



                    @if (Obj.GetCurrentUserSession().Events.Contains("4"))
                    {
                        <tr class="row">
                            <th class="col-xs-3 col-md-3"> <p class="bg-brown py-1 px-2 rounded">     @Html.DisplayNameFor(model => model.Upload) </p></th>
                            <td class="col">
                                @if (Model.Upload != null && Model.Upload != "" && Model.Upload.Length > 0)
                                {

                                    foreach (var docs in Model.Upload.Trim(',').Split(','))
                                    {


                                        <p class="bg-dark py-1 px-2 rounded" style="margin: 0px;">

                                            <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" class="text-orange-800">
                                                @System.IO.Path.GetFileName(docs)
                                            </a>
                                        </p>

                                    }
                                }
                                else
                                {
                                    <span class="badge badge-danger">No Document Uploaded</span>
                                }
                            </td>


                        </tr>
                    }


                    <tr class="row">
                        <th class="col-xs-3 col-md-3"> <p class="bg-brown py-1 px-2 rounded">   @Html.DisplayNameFor(model => model.Remarks) </p></th>
                        <td class="col"> <p class="bg-dark py-1 px-2 rounded">@Html.DisplayFor(model => model.Remarks) </p></td>

                    </tr>



                    <tr class="row">
                        <th class="col-xs-3 col-md-3"> <p class="bg-brown py-1 px-2 rounded">    @Html.DisplayNameFor(model => model.NotificationPeriod) </p></th>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.NotificationValue)
                                @Html.DisplayFor(model => model.NotificationPeriod)
                            </p>
                        </td>

                    </tr>
                </tbody>

            </table>
        </div>
    </div>





@section scripts {
    <script>
    //----zzz
    $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
    });
    //zzz----


    </script>


}