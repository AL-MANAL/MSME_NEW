@model ISOStd.Models.IssuesModels
@{
    ViewBag.Title = "";

    int itemcnt1 = 0;  

    string[] notified_Array = new string[0];
    if (ViewBag.notified_Array != null)
    {
        notified_Array = ViewBag.notified_Array;
        itemcnt1 = notified_Array.Length;
    }

    ISOStd.Models.clsGlobal objGlobaldata = new ISOStd.Models.clsGlobal();
}
@section featured {
    <div class="page-header page-header-light">
        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>
        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">
                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("IssuesList", "Issues", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Issues</span>
                    </a>
                    <span class="breadcrumb-item active">Issues Status</span>
                </div>
            </div>
        </div>
    </div>
}
@using (Html.BeginForm("StatusUpdate", "Issues", FormMethod.Post,
   new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Issues Status</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">
                <input type="hidden" id="id_issue" name="id_issue" value="@Model.id_issue" />
                <table class="table table-lg">

                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            @Html.DisplayNameFor(model => model.Issue_refno)
                        </td>
                        <td class="col">
                            <p class="bg-grey-300 py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Issue_refno)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            @Html.DisplayNameFor(model => model.Issue)
                        </td>
                        <td class="col">
                            <p class="bg-grey-300 py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Issue)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            @Html.DisplayNameFor(model => model.IssueType)
                        </td>
                        <td class="col">
                            <p class="bg-grey-300 py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.IssueType)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            @Html.DisplayNameFor(model => model.Effect)
                        </td>
                        <td class="col">
                            <p class="bg-grey-300 py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Effect)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            @Html.DisplayNameFor(model => model.Impact)
                        </td>
                        <td class="col">
                            <p class="bg-grey-300 py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Impact)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            @Html.DisplayNameFor(model => model.Impact_detail)
                        </td>
                        <td class="col">
                            <p class="bg-grey-300 py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Impact_detail)
                            </p>
                        </td>
                    </tr>
                </table>

                <table class="table table-lg">
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            @Html.LabelFor(model => model.action_taken)
                        </td>
                        <td class="col-xs-3 col-md-4">
                            <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="action_taken" name="action_taken">@Model.action_taken</textarea>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            @Html.LabelFor(model => model.status_upload)
                        </td>
                        <td class="col">
                            <input type="file" name="status_upload" id="status_upload" title="Documents" onchange="FileFormatValidation(this)"
                                   multiple="multiple" accept=".pdf, .doc, .docx,image/*" class="bootstrap-uploader" data-fouc />

                            <span class="form-text text-muted"><code>(Hold Ctrl Key in case of multiple files or drag multiple files and drop here)</code></span>
                            <br />
                            @if (Model.status_upload != null && Model.status_upload != "" && Model.status_upload.Length > 0)
                            {
                                <h6> <span class="bg-dark py-1 px-2 rounded">Document List</span></h6>

                                <span class="form-text text-muted">
                                    <code>
                                        (Uncheck in case to remove a uploaded file)
                                    </code>
                                </span>
                                foreach (var docs in Model.status_upload.Trim(',').Split(','))
                                {
                                    <div class="form-check">
                                        <label class="form-check-label">
                                            <input type="checkbox" id="QCDocsVal" name="QCDocsVal" class="form-check-input-styled QCDocsVal" value="@docs.Trim(',')" checked title="Uncheck in case to remove a uploaded file" data-fouc />
                                            <input type="hidden" id="QCDocsValselectall" name="QCDocsValselectall" />
                                            <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" class="text-orange">
                                                @System.IO.Path.GetFileName(docs)
                                            </a>
                                        </label>
                                    </div>
                                }
                            }
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            @Html.LabelFor(model => model.issue_status)<text style="color: red;">*</text>
                        </td>
                        <td class="col">
                            <select class="form-control select-search select2-hidden-accessible" data-fouc id="issue_status" name="issue_status" required>
                                <option value='' hidden>Select</option>
                                @if (ViewBag.Status != null)
                                {
                                    foreach (var item in ViewBag.Status)
                                    {
                                        if (item.Value == Model.issue_status)
                                        {
                                            <option value='@item.Value' selected>@item.Text</option>
                                        }
                                        else
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                }
                            </select>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            @Html.LabelFor(model => model.status_date)<text style="color: red;">*</text>
                        </td>
                        <td class="col">

                            @if (Model.status_date > Convert.ToDateTime("01/01/0001"))
                            {
                                <input type="date" id="status_date" name="status_date" value="@Model.status_date.ToString("yyyy-MM-dd")" class="form-control" />
                            }
                            else
                            {
                                <input type="date" id="status_date" name="status_date" required class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                            }

                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            @Html.LabelFor(model => model.status_notifiedto)@*<text style="color: red;">*</text>*@
                        </td>
                        <td class="col">
                            <select class="form-control select-search select2-hidden-accessible" data-fouc id="status_notifiedto" name="status_notifiedto" onchange="GetNotifiedPerson()">
                                <option value='' hidden>Select</option>
                                @if (ViewBag.EmpList != null)
                                {
                                    foreach (var item in ViewBag.EmpList)
                                    {
                                        if (item.Value == Model.status_notifiedto)
                                        {
                                            <option value='@item.Value' selected>@item.Text</option>
                                        }
                                        else
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                }
                            </select>
                        </td>
                       
                    </tr>
                </table>
                <div id="estdiv" @*style="display:none"*@>
                    <div class="card-body">
                        <input type="hidden" id="itemcnt1" name="itemcnt1" value="@itemcnt1" />

                        <div class="card card-table table-responsive shadow-0 mb-0">
                            <table class="table" id="team-list1">
                                <tr class="bg-blue">
                                    <th>Action</th>
                                    <th>Id</th>
                                    <th>Name</th>
                                    <th>Division</th>
                                    <th>Department</th>
                                    <th>Email</th>
                                </tr>
                                @if (ViewBag.notified_Array != null && notified_Array != null && notified_Array.Length > 0)
                                {
                                    for (int index = 0; index < notified_Array.Length; index++)
                                    {
                                        <tr>
                                            <td>
                                                <span class='badge badge-info' onclick='deleteRow1(this)' style='cursor:pointer;'>Delete</span>
                                                <input type='hidden' id='nempno @index' name="nempno @index" value='@notified_Array[index]' />
                                            </td>
                                            <td>
                                                <input type='hidden' id='nempid @index' name="nempid @index" readonly>@objGlobaldata.GetEmpIDByEmpNo(notified_Array[index])
                                            </td>
                                            <td>
                                                <input type='hidden' id='nempname @index' name="nempname @index" readonly>@objGlobaldata.GetEmpHrNameById(notified_Array[index])
                                            </td>
                                            <td>
                                                <input type='hidden' id='nempdiv @index' name="nempdiv @index" readonly>@objGlobaldata.GetCompanyBranchNameById(objGlobaldata.GetDivisionIdByHrEmpId(notified_Array[index]))
                                            </td>
                                            <td>
                                                <input type='hidden' id='nempdept @index' name="nempdept @index" readonly>@objGlobaldata.GetDeptNameById(objGlobaldata.GetDeptIdByHrEmpId(notified_Array[index]))
                                            </td>
                                            <td>
                                                <input type='hidden' id='nempemail @index' name="nempemail @index" readonly>@objGlobaldata.GetHrEmpEmailIdById(notified_Array[index])
                                            </td>
                                        </tr>
                                    }
                                }
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer bg-white d-flex justify-content-between align-items-center">
                @Html.ActionLink("Back to List", "IssuesList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })
                <button type="submit" id="btnCreate" value="Save" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Save</button>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script type="text/javascript">
        //----zzz


        $(document).ready(function () {

            @if (TempData["alertdata"] != null)
    {

        @: new Noty({
                                        @:     text: '@TempData["alertdata"]',
                                        @:     type: 'error'
                                        @:     }).show();

                            }

            @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
                                        @:       text: '@TempData["Successdata"]',
                                        @:       type: 'success'
                                        @:        }).show();

                            }
        });
        $('.form-check-input-styled').uniform();

        function FileFormatValidation(file) {
            var ext = file.value.split(".").pop().toLowerCase();
            if ($.inArray(ext, ["pdf", "xlsx", "xls", "doc", "docx"]) == -1) {
                file.value = "";
                bootbox.alert({
                    title: 'File type',
                    message: 'Invalid file format, please upload only doc, pdf, docx, jpg, jpeg, gif, png format'
                });
            }
        }
        $("#QCDocsVal").click(function () {
            if ($("#QCDocsVal").prop('checked')) {
                {
                    $(this).prop('checked', true);
                }
            }
            else {

                $(this).prop('checked', false);
                document.getElementById("QCDocsValselectall").value = "DeleteQC";
            }

        });

        function GetNotifiedPerson() {
            var status_notifiedto = $('#status_notifiedto').val();
            if (status_notifiedto != "" && status_notifiedto != null) {
                jQuery.ajax({
                    url: '@Url.Action("FunGetEmpDetails", "EmployeeDetails")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'semp_no': status_notifiedto },
                    success: function (result) {
                        if (result != null) {

                            var nempno = $('#status_notifiedto option:Selected').val();
                            var nempid = result.emp_id;
                            var nempname = result.empname;
                            var nempdiv = result.division;
                            var nempdept = result.department;
                            var nempemail = result.EmailId;

                            var cnt = document.getElementById("itemcnt1").value;

                            document.getElementById("itemcnt1").value = cnt;
                            // Find a <table> element with id="myTable":
                            var table = document.getElementById("team-list1");

                            // Create an empty <tr> element and add it to the 1st position of the table:
                            var row = table.insertRow();


                            // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
                            var cell0 = row.insertCell(0);
                            var cell1 = row.insertCell(1);
                            var cell2 = row.insertCell(2);
                            var cell3 = row.insertCell(3);
                            var cell4 = row.insertCell(4);
                            var cell5 = row.insertCell(5);

                            cell0.innerHTML = "<span class='badge badge-info' onclick='deleteRow1(this)' style='cursor:pointer;'>Delete</span> <input type = 'hidden' id = 'nempno " + cnt + "' name = 'nempno " + cnt + "' value = '" + nempno + "'>";
                            cell1.innerHTML = "<input type='hidden' id='nempid " + cnt + "' name='nempid " + cnt + "' value='" + nempid + "'>" + nempid;
                            cell2.innerHTML = "<input type='hidden' id='nempname " + cnt + "' name='nempname " + cnt + "' value='" + nempname + "'>" + nempname;
                            cell3.innerHTML = "<input type='hidden' id='nempdiv " + cnt + "' name='nempdiv " + cnt + "' value='" + nempdiv + "'>" + nempdiv;
                            cell4.innerHTML = "<input type='hidden' id='nempdept " + cnt + "' name='nempdept " + cnt + "' value='" + nempdept + "'>" + nempdept;
                            cell5.innerHTML = "<input type='hidden' id='nempemail " + cnt + "' name='nempemail " + cnt + "' value='" + nempemail + "'>" + nempemail;

                            cnt++;
                            document.getElementById("itemcnt1").value = cnt;

                            $("#status_notifiedto").val('').trigger('change');
                        }
                    }
                });
            }
        }


        function deleteRow1(btn) {
            var row = btn.parentNode.parentNode;
            row.parentNode.removeChild(row);
        }

    </script>

}