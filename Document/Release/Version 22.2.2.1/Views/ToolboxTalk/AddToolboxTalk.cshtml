@model ISOStd.Models.ToolboxTalkModels

@{
    ViewBag.Title = "AddToolboxTalk";
}

@section featured {

    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">
                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("ToolBoxTalkList", "ToolBoxTalk", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Toolbox Talk</span>
                    </a>
                    <span class="breadcrumb-item active">Add Toolbox Talk</span>
                </div>
                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">
                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>
                        <div class="dropdown-menu dropdown-menu-right">
                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}


    @using (Html.BeginForm("AddToolboxTalk", "ToolboxTalk", FormMethod.Post,
        new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Add Toolbox Talk</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>

                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">

                <table class="table table-lg">
                    <tbody>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.branch)
                            </td>
                            <td class="col">
                                <select class="form-control select-fixed-multiple" multiple="multiple" data-fouc id="branch" name="branch" onchange="GetDeptList()">
                                    @*<option value='' hidden>Select</option>*@
                                    @if (ViewBag.Branch != null)
                                    {
                                        foreach (var data in ViewBag.Branch)
                                        {
                                            if (Array.IndexOf(Model.branch.ToString().Split(','), data.Value) >= 0)
                                            {
                                                <option value='@data.Value' selected>@data.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@data.Value'>@data.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                            @Html.LabelFor(model => model.Department)
                            <text style="color:red;">*</text>
                            </td>
                            <td class="col">
                                <select class="form-control select-fixed-multiple" data-fouc id="Department" name="Department" multiple="multiple" required>
                                    @if (ViewBag.Department != null)
                                    {
                                        foreach (var item in ViewBag.Department)
                                        {
                                            if (Array.IndexOf(Model.Department.ToString().Split(','), item.Value) >= 0)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                             </td>

                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.Location)<text style="color:red;">*</text>
                            </td>
                            <td class="col">
                                <select class="form-control select-fixed-multiple" data-fouc id="Location" name="Location" multiple="multiple" required>
                                    @if (ViewBag.Location != null)
                                    {
                                        foreach (var item in ViewBag.Location)
                                        {
                                            if (Array.IndexOf(Model.Location.ToString().Split(','), item.Value) >= 0)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                              </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.Talk_DateTime)<text style="color:red;"> *</text>

                            </td>
                            <td class="col">

                                <input class="form-control" type="date" id="Talk_DateTime" name="Talk_DateTime" required />
                                Hr: @Html.DropDownList("PlanTimeInHour", new SelectList(ViewBag.PlanTimeInHour, "PlanTimeInHour"), new { @class = "select-fixed-single" })
                                Min: @Html.DropDownList("PlanTimeInMin", new SelectList(ViewBag.PlanTimeInMin, "PlanTimeInMin"), new { @class = "select-fixed-single" })

                            </td>
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.Conducted_By)

                            </td>
                            <td class="col">

                                @*  <input type="text" id="Conducted_By" name="Conducted_By" style="width:250px;" required/>*@
                                <select class="form-control select-fixed-multiple" data-fouc id="Conducted_By" name="Conducted_By" multiple>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.EmpList != null)
                                    {
                                        foreach (var item in ViewBag.EmpList)
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                </select>

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.Topic)<text style="color:red;"> *</text>
                            </td>
                            <td class="col-xs-3 col-md-4">
                                <select class="form-control select-fixed-multiple" data-fouc id="Topic" name="Topic" required multiple>
                                    @if (ViewBag.Topics != null)
                                    {
                                        foreach (var item in ViewBag.Topics)
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                </select>
                            </td>

                            @*<td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.Activity_type)

                            </td>
                            <td class="col">

                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="Activity_type" name="Activity_type">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.ActivityType != null)
                                    {
                                        foreach (var item in ViewBag.ActivityType)
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                </select>

                            </td>*@
                        </tr>
                        @*<tr class="row">
    <td class="col-xs-3 col-md-2">
         @Html.LabelFor(model => model.Identified_method)
     </td>
     <td class="col">
         @Html.EditorFor(model => model.Identified_method, new { htmlAttributes = new { @class = "form-control" } })
     </td>*@
                            @*<td class="col-xs-3 col-md-2">

            @Html.LabelFor(model => model.Project)

        </td>
        <td class="col">
            <select class="form-control select-search select2-hidden-accessible" data-fouc id="Project" name="Project" @*onchange="getReportNo()">
                <option value='' hidden>Select</option>
                @if (ViewBag.Project != null)
                {
                    foreach (var item in ViewBag.Project)
                    {
                        <option value='@item.Value'>@item.Text</option>
                    }
                }
            </select>

        </td>
    </tr>*@
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.Upload_Report)

                            </td>
                            <td class="col">


                                <input type="file" name="Upload_Report" id="Upload_Report" title="Plan Report documents" onchange="FileFormatValidation(this)"
                                       multiple="multiple" accept=".pdf, .doc, .docx, .xls, .xlsx, .jpg, .jpeg, .png, .image/*" class="bootstrap-uploader" data-fouc />

                                <span class="form-text text-muted"><code>(Hold Ctrl Key in case of multiple files or drag multiple files and drop here)</code></span>

                            </td>
                        </tr>

                        <tr class="row">

                            @*<td class="col-xs-3 col-md-2">

                @Html.LabelFor(model => model.Attended_by)

            </td>
            <td class="col">

                <select class="form-control select-fixed-multiple" data-fouc id="Attended_by" name="Attended_by" multiple>
                    @if (ViewBag.EmpList != null)
                    {
                        foreach (var item in ViewBag.EmpList)
                        {
                            <option value='@item.Value'>@item.Text</option>
                        }
                    }
                </select>

            </td>*@
                        </tr>

                        <tr class="row">

                            <td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.feedback_tbt)
                                </div>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="feedback_tbt" name="feedback_tbt" ></textarea>
                                </div>
                            </td>
                            <td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.outcome_tbt)
                                </div>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="outcome_tbt" name="outcome_tbt"></textarea>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>

        <div class="card-footer bg-white d-flex justify-content-between align-items-center">

            @Html.ActionLink("Back to List", "ToolboxTalkList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })

            <button type="submit" id="btnCreate" value="Save" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Save</button>

            @*<input type="submit" id="btnCreate" value="Save" class="btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400" onclick="ProgressIconFunction('#form1')" />*@
            @*<input type="button" value="Add" class="btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400" onclick="AddPlanner()" />*@
        </div>
    </div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script>
            
                          //----zzz
    $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }  
 
    });
    //zzz----  

            function FileFormatValidation(file) {
                var ext = file.value.split(".").pop().toLowerCase();
                if ($.inArray(ext, ["pdf", "doc", "docx","jpg", "jpeg","png","xls","xlsx"]) == -1) {
                    file.value = "";
                    bootbox.alert({
                        title: 'File type',
                        message: 'Invalid file format, please upload only pdf,doc,docx,ls,xlsx,jpg,jpeg,png format.'
                    });
                }
            }

     function getReportNo()
           {
             var location = $('#Location :selected').text();
            // var project = $('#Project :selected').text();
             if (location != "Select" /*&& project != "Select"*/) {
             jQuery.ajax({
                    url: '@Url.Action("FunGetReportNo", "ToolboxTalk")',
                    type: 'POST',
                    dataType: "json",

                    data: { 'location': location/*, 'project': project*/ },
                    success: function (result) {
                        document.getElementById("Report_No").value = result;
                    }
                });
              }
            }

              function GetDeptList() {
            var selectedValues = [];
            $("#branch :selected").each(function () {
                selectedValues.push($(this).val());
            });  
                jQuery.ajax({
                    url: '@Url.Action("FunGetAllDeptList", "EmployeeDetails")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'branch': selectedValues },
                    success: function (result) {
                        GetLocList(selectedValues);
                        $("#Department").children('option').remove();
                        $("#Department").trigger('change');
                        if (result != null && result.length > 0) {
                            $.each(result, function (index, item) {
                                $("#Department").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                                $("#Department").trigger('change');
                            });
                            return;
                        }
                        //else {
                        //    bootbox.alert({
                        //        title: 'Department List',
                        //        message: 'No Department exists.'
                        //    });
                        //}
                    }
                });          
        }


        function GetLocList(selectedValues) {                   
            jQuery.ajax({
                url: '@Url.Action("FunGetAllLocList", "EmployeeDetails")',
                type: 'POST',
                dataType: "json",
                data: { 'branch': selectedValues },
                success: function (result)
                {
                    $("#Location").children('option').remove();
                    $("#Location").trigger('change');
                    if (result != null && result.length > 0) {
                        $.each(result, function (index, item) {
                            $("#Location").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            $("#Location").trigger('change');
                        });
                        return;
                    }
                    //else {
                    //    bootbox.alert({
                    //        title: 'Location List',
                    //        message: 'No Location exists.'
                    //    });
                    //}
                }
            });       
        }

        </script>
    }
