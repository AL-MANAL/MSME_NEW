@model ISOStd.Models.ExtProviderPerformanceModels
@{
    ViewBag.Title = "ExtProviderPerformanceDetails";
    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
    ISOStd.Models.ExtProviderPerformanceModelsList objPerfList = new ISOStd.Models.ExtProviderPerformanceModelsList();

    if (ViewBag.objPerfList != null)
    {
        objPerfList = ViewBag.objPerfList;
    }
    string user = Obj.GetCurrentUserSession().empid;
}

@section featured {
    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">
                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("ExtProviderPerformanceList", "ExtProviderPerformance", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Performance Evaluation</span>
                    </a>
                    <span class="breadcrumb-item active">Performance Evaluation Details</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            <div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">

                    @*@using (Html.BeginForm("AccidentReportDetails", "AccidentReport", FormMethod.Post, new { id = "form1", name = "form1" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="breadcrumb-elements-item dropdown p-0">
                                <input type="hidden" id="Id_Performace" name="Id_Performace" value="@Model.Id_Performace" />

                                <button type="submit" class="dropdown-item">
                                    <i class="icon-printer2"></i> Report
                                </button>

                            </div>
                        }*@

                    @*<div class="breadcrumb-elements-item dropdown p-0">
                            <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                                <i class="icon-gear mr-2"></i>
                                Settings
                            </a>

                            <div class="dropdown-menu dropdown-menu-right">

                                <div class="dropdown-divider"></div>
                                <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                            </div>
                        </div>*@
                </div>
            </div>
        </div>
    </div>
}

<div class="card">
    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">
            Performance Evaluation Details
        </h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>
            </div>
        </div>
    </div>

    <div>
        <div class="card-header bg-white header-elements-sm-inline">
            <div class="header-elements">
                <a class="btn bg-orange btn-labeled btn-labeled-left" data-style="radius" href='@Url.Action("ExtProviderPerformanceEdit", "ExtProviderPerformance", new { Id_Performace = Model.Id_Performace.ToString()  })' title="Edit" onclick="HyperLinkProgressIconFunction()">
                    <b>  <i class="icon-add-to-list"></i></b> Edit
                </a>
                @Html.ActionLink("Back to List", "ExtProviderPerformanceList", null, new { @class = "btn btn-outline bg-orange text-orange border-orange ml-3", onclick = "HyperLinkProgressIconFunction()" })
            </div>
        </div>
    </div>

    <div class="card-body">
        <div class="container-fluid">
            <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                <thead></thead>
                <tbody>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.branch)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.branch)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Department)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Department)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Location)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Location)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.ReportNo)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.ReportNo)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Ext_Provider_Name)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Ext_Provider_Name)
                            </p>
                        </td>
                    </tr>

                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Eval_Date)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @if (Model.Eval_Date > Convert.ToDateTime("01/01/0001"))
                                {
                                    @Model.Eval_Date.ToString("dd/MM/yyyy")
                                }
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Scope_ofSupplies)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Scope_ofSupplies)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.po_detail)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.po_detail)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Eval_FromDate)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @if (Model.Eval_FromDate > Convert.ToDateTime("01/01/0001"))
                                {
                                    @Model.Eval_FromDate.ToString("dd/MM/yyyy")
                                }
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Eval_ToDate)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @if (Model.Eval_ToDate > Convert.ToDateTime("01/01/0001"))
                                {
                                    @Model.Eval_ToDate.ToString("dd/MM/yyyy")
                                }
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.lots_received)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.lots_received)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Quality_Issue)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Quality_Issue)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.quantity_issue)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.quantity_issue)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Delivery_Issue)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Delivery_Issue)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.quality_rating)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.quality_rating)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.quantity_rating)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.quantity_rating)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.delivery_rating)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.delivery_rating)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.total_rating)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.total_rating)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Scheduled_by)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Scheduled_by)
                            </p>
                        </td>
                        @*<td class="col-xs-3 col-md-3">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.DisplayNameFor(model => model.Approved_by)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.Approved_by)
                                </p>
                            </td>*@
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.notified_to)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.notified_to)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.upload)
                            </p>
                        </td>
                        <td class="col">

                            @if (Model.upload != null && Model.upload != "" && Model.upload.Length > 0)
                            {
                                foreach (var docs in Model.upload.Trim(',').Split(','))
                                {
                                    <p class="bg-dark py-1 px-2 rounded">

                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" style="color: orange;">
                                            Preview
                                        </a>
                                    </p>
                                }
                            }


                        </td>
                    </tr>
                    @if (Model.apprv_status_id == "0")
                    {
                        <tr class="row">
                            <td class="col-xs-3 col-md-3">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.DisplayNameFor(model => model.Approved_by)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Obj.GetEmpHrNameById(Model.Approved_by)
                                </p>
                            </td>
                            <td class="col-xs-3 col-md-3">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.DisplayNameFor(model => model.apprv_status)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.apprv_status)
                                </p>
                            </td>

                        </tr>
                    }
                    else if (Model.apprv_status_id == "1" || Model.apprv_status_id == "2")
                    {
                        <tr class="row">
                            <td class="col-md-12">Review Details</td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    Approved By
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Obj.GetEmpHrNameById(Model.Approved_by)
                                </p>
                            </td>
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.DisplayNameFor(model => model.apprv_status)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.apprv_status)
                                </p>
                            </td>


                        </tr>
                            <tr class="row">
                                <td class="col-xs-3 col-md-2">
                                    <p class="bg-brown py-1 px-2 rounded">
                                        @Html.DisplayNameFor(model => model.approved_date)
                                    </p>
                                </td>
                                <td class="col">
                                    <p class="bg-dark py-1 px-2 rounded">
                                        @if (Model.approved_date != null && Model.approved_date > Convert.ToDateTime("01/01/0001"))
                                        {
                                            @Html.Label(Model.approved_date.ToString("dd/MM/yyyy hh:mm:ss"))
                                        }
                                    </p>
                                </td>
                                <td class="col-xs-3 col-md-2">
                                    <p class="bg-brown py-1 px-2 rounded">
                                        @Html.DisplayNameFor(model => model.apprv_comments)
                                    </p>
                                </td>
                                <td class="col">
                                    <p class="bg-dark py-1 px-2 rounded">
                                        @Html.DisplayFor(model => model.apprv_comments)
                                    </p>
                                </td>
                            </tr>
                            <tr class="row">

                                <td class="col-xs-3 col-md-2">
                                    <p class="bg-brown py-1 px-2 rounded">
                                        @Html.DisplayNameFor(model => model.approver_upload)
                                    </p>
                                </td>
                                <td class="col-xs-3 col-md-4">
                                    @if (Model.approver_upload != null && Model.approver_upload != "" && Model.approver_upload.Length > 0)
                                    {
                                        foreach (var docs in Model.approver_upload.Trim(',').Split(','))
                                        {
                                            <p style="margin: 0px;">

                                                <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" style="color: orange;">
                                                    Preview
                                                </a>
                                            </p>
                                            <br />
                                        }
                                    }
                                </td>

                            </tr>
                    }
                    @*<tr class="row">
                            <td class="col-xs-3 col-md-3">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.DisplayNameFor(model => model.PO_Issued)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.PO_Issued)
                                </p>
                            </td>
                            <td class="col-xs-3 col-md-3">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.DisplayNameFor(model => model.PO_Completed)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.PO_Completed)
                                </p>
                            </td>
                        </tr>*@
                    <tr class="row">
                        <td class="col-md-12">Action Details</td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.initiated_date)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @if (Model.initiated_date > Convert.ToDateTime("01/01/0001"))
                                {
                                    @Model.initiated_date.ToString("dd/MM/yyyy")
                                }
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.action_taken)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.action_taken)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Due_Date)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @if (Model.Due_Date > Convert.ToDateTime("01/01/0001"))
                                {
                                    @Model.Due_Date.ToString("dd/MM/yyyy")
                                }
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.action_by)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.action_by)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.action_notified_to)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.action_notified_to)
                            </p>
                        </td>
                    </tr>
            </table>
            <br />
            @if (Model.apprv_status_id == "0" && Model.Approved_by.Split(',').Contains(user))
            {
                using (Html.BeginForm("ExtProviderPerformanceReview", "ExtProviderPerformance", FormMethod.Post,
                                     new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    <input type="hidden" id="Id_Performace" name="Id_Performace" value="@Model.Id_Performace" />
                    <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    Approve/Reject <text style="color:red;">*</text>
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @if (ViewBag.ApproveStatus != null)
                                    {
                                        foreach (var item in ViewBag.ApproveStatus)
                                        {
                                            <input type="radio" name="apprv_status" id="apprv_status" data-name='@item.Value' value='@item.Key' required />@item.Value
                                        }
                                    }
                                </p>
                            </td>

                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    Comments
                                </p>
                            </td>
                            <td class="col">
                                <div class="bg-dark py-1 px-2 rounded">
                                    <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="apprv_comments" name="apprv_comments"></textarea>
                                </div>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.LabelFor(model => model.approver_upload)
                                </p>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    <input type="file" name="approver_upload" id="approver_upload" onchange="FileFormatValidation(this)" multiple accept=".pdf,.xlsx,.xls,.doc,.docx,.image/*,.png,.jpeg,.jpg" @*class="bootstrap-uploader" data-fouc*@ />
                                </div>
                            </td>
                        </tr>
                    </table>
                    <div class="card-footer bg-white d-flex justify-content-between align-items-center">
                        <button type="submit" id="btnCreate" value="Submit" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Submit</button>
                    </div>
                }
            }


        </div>
    </div>
</div>


@section Scripts {
    <script type="text/javascript">

        $(document).ready(function () {

            @if (TempData["alertdata"] != null)
    {

        @: new Noty({
                        @:     text: '@TempData["alertdata"]',
                        @:     type: 'error'
                        @:
            }).show();
                }

            @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
                        @:       text: '@TempData["Successdata"]',
                        @:       type: 'success'
                        @:
            }).show();
                }
        });

        function FileFormatValidation(file) {
            var ext = file.value.split(".").pop().toLowerCase();
            if ($.inArray(ext, ["pdf", "xlsx", "xls", "doc", "docx", "jpeg", "jpg", "png"]) == -1) {
                file.value = "";
                bootbox.alert({
                    title: 'File type',
                    message: 'Invalid file format, please upload only xlsx,xls,pdf,jpeg,jpg,png format.'
                });
            }
        }


    </script>
}




