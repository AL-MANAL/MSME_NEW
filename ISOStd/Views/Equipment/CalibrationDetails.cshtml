@model ISOStd.Models.CalibrationModels
@using System.Data;

@{
   ViewBag.Title = "EquipmentDetails";
   ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
}


@section featured {

    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("CalibrationList", "Equipment", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Tools & Gauges</span>
                    </a>
                    <span class="breadcrumb-item active">Tools & Gauges Details</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}

<div class="card">

       <div class="card-header header-elements-inline bg-primary">
           <h5 class="card-title">Tools & Gauges Details</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>
                </div>
            </div>
        </div>

      <div>
            <div class="card-header bg-white header-elements-sm-inline">

                <div class="header-elements">
                    <div class="mt-2 mt-sm-0">


                        @if (Obj.GetCurrentUserSession().Calibration.Contains("3"))
                        {
                            <a class="btn bg-orange btn-labeled btn-labeled-left" data-style="radius" href='@Url.Action("CalibrationEdit", "Equipment", new { calibration_id = Model.calibration_id })' title="Edit" onclick="HyperLinkProgressIconFunction()">
                                <b>  <i class="icon-add-to-list"></i></b> Edit
                            </a>
                        }
                        @Html.ActionLink("Back to List", "CalibrationList", null, new { @class = "btn btn-outline bg-orange text-orange border-orange", onclick = "HyperLinkProgressIconFunction()" })
                    </div>
                </div>
            </div>

        </div>

  <div class="card-body">
  <div class="container-fluid">

 <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                    <thead></thead>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                Equipment Description
                            </p>
                        </td>

                        <td class="col">
                            <span class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Equipment_Id)
                            </span>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                Division
                            </p>
                        </td>

                        <td class="col">
                            <span class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.branch)
                            </span>
                        </td>
                    </tr>
            <tr class="row">
                <td class="col-xs-3 col-md-2">
                    <p class="bg-brown py-1 px-2 rounded">
                        Department
                    </p>
                </td>

                <td class="col">
                    <span class="bg-dark py-1 px-2 rounded">
                        @Html.DisplayFor(model => model.Department)
                    </span>
                </td>
                <td class="col-xs-3 col-md-2">
                    <p class="bg-brown py-1 px-2 rounded">
                        Location
                    </p>
                </td>

                <td class="col">
                    <span class="bg-dark py-1 px-2 rounded">
                        @Html.DisplayFor(model => model.Location)
                    </span>
                </td>
            </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.calibration_by)
                            </p>
                        </td>

                        <td class="col">
                            <span class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.calibration_by)
                            </span>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.method_of_calibration)
                            </p>
                        </td>

                        <td class="col">
                            <span class="bg-dark py-1 px-2 rounded">
                                 @Html.DisplayFor(model => model.method_of_calibration)
                            </span>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.accuracy)
                            </p>
                        </td>

                        <td class="col">
                            <span class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.accuracy)
                            </span>
                        </td>

                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.calibration_status)
                            </p>
                        </td>
                        <td class="col">
                            <span class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.calibration_status)
                            </span>
                        </td>
                    </tr>

                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Person_Responsible)
                            </p>
                        </td>
                        <td class="col">
                            <span class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Person_Responsible)
                            </span>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.calibration_report_ref)
                            </p>
                        </td>
                        <td class="col">

                            @if (Obj.GetCurrentUserSession().Calibration.Contains("4"))
                            {
                                <span class="bg-dark py-1 px-2 rounded">
                                    @if (Model.calibration_report_ref != "")
                                    {
                                        <span class="bg-dark py-1 px-2 rounded">
                                            <a href='@Url.Action("DisplayDocument", "Reports", new { Document = Model.calibration_report_ref})' target="_blank">Preview</a>
                                        </span>
                                    }
                                    else
                                    {

                                        <span class="bg-dark py-1 px-2 rounded text-danger">No File</span>
                                    }
                                </span>
                            }
                        </td>
                    </tr>

  			<tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.calibration_certificate)
                            </p>
                        </td>
                        <td class="col">
                            @if (Obj.GetCurrentUserSession().Calibration.Contains("4"))
                            {
                                <span class="bg-dark py-1 px-2 rounded">
                                    @if (Model.calibration_certificate != "")
                                    {
                                        <span class="bg-dark py-1 px-2 rounded">
                                            <a href='@Url.Action("DisplayDocument", "Reports", new { Document = Model.calibration_certificate})' target="_blank">Preview</a>
                                        </span>
                                    }
                                    else
                                    {

                                        <span class="bg-dark py-1 px-2 rounded text-danger">No File</span>
                                    }
                                </span>
                            }
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.due_date)
                            </p>
                        </td>
                        <td class="col">
                            <span class="bg-dark py-1 px-2 rounded">
                                  @if (Model.due_date != null && Model.due_date > Convert.ToDateTime("01/01/0001"))
                    	         {
                                    @Html.Label(Model.due_date.ToString("dd/MM/yyyy"))
                                 }
                            </span>
                        </td>
                    </tr>

			<tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Remarks)
                            </p>
                        </td>
                        <td class="col">
                            <span class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Remarks)
                            </span>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.NotificationPeriod)
                            </p>
                        </td>
                        <td class="col">
                            <span class="bg-dark py-1 px-2 rounded">
                                     @Model.NotificationValue @Model.NotificationPeriod
                                  
                            </span>
                        </td>
                    </tr>

		   <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Ref_no)
                            </p>
                        </td>
                        <td class="col">
                            <span class="bg-dark py-1 px-2 rounded">
                               @Html.DisplayFor(model => model.Ref_no)
                            </span>
                        </td>   
                    </tr>
                </table>
  </div>
  </div>

</div>
 @section scripts {
            <script>
                //----zzz


                $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
                        @:     text: '@TempData["alertdata"]',
                        @:     type: 'error'
                        @: }).show();
                                 }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
                        @:       text: '@TempData["Successdata"]',
                        @:       type: 'success'
        @:}).show();
                        }
                });

</script>


        }