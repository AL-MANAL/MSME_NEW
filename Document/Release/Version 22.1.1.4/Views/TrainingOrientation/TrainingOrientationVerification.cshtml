@model ISOStd.Models.TrainingOrientationModels

@{
   ViewBag.Title = "TrainingOrientation";
   System.Data.DataSet dsrating=new System.Data.DataSet();

   ISOStd.Models.EmpOrientationModelsList objEmpPerformanceEvalList = new ISOStd.Models.EmpOrientationModelsList();
   
   if (ViewBag.PerformanceElement != null)
   {
       objEmpPerformanceEvalList = ViewBag.PerformanceElement;
   }
}

@section featured {


    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("EmployeeTrainingOrientationList", "TrainingOrientation", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Training Orientation List</span>
                    </a>
                    <span class="breadcrumb-item active">Employee Training Orientation Verification</span>
                </div>
                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}


<div class="card">

    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">Employee Training Orientation Verification</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>

            </div>
        </div>
    </div>

    <div>
        <div class="card-header bg-white header-elements-sm-inline">

            <div class="header-elements">
                <div class="mt-2 mt-sm-0">

                    @Html.ActionLink("Back to List", "EmployeeTrainingOrientationList", null, new { @class = "btn btn-outline bg-orange text-orange border-orange", onclick = "HyperLinkProgressIconFunction()" })
                </div>
            </div>
        </div>

    </div>

    <div class="card-body">
        <div class="container-fluid">

            <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                <thead></thead>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.First_name)
                        </p>
                    </td>

                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.First_name)
                        </span>
                    </td>
		    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.Designation)
                        </p>
                    </td>

                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.Designation)
                        </span>
                    </td>
                </tr>
		 <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.Orientation_date)
                        </p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                             @if (Model.Orientation_date != null && Model.Orientation_date > Convert.ToDateTime("01/01/0001"))
                            {
                                @Html.Label(Model.Orientation_date.ToString("dd/MM/yyyy"))
                            }
                        </span>
                    </td> 
                </tr>
                    </table>

		<div class="table-responsive">
                    <table class="table table-bordered table-striped table-hover datatable-responsive" id="table1">
                        <thead>
                            <tr class="bg-brown">
                                <th>Sl No.</th>
                                <th>Topics</th>
                                <th>Rating</th>
                            </tr>
                        </thead>
                        <tbody>
                           @if (ViewBag.PerformanceElement != null)
            {
                int iSrno = 0;
                foreach(var item in objEmpPerformanceEvalList.lstOrientation)
                {
                    iSrno = iSrno + 1;
                                <tr>
                                     <td>
                            @iSrno
                        </td>
                        <td >
                            @item.TrainingOrientation_Id
                        </td>
                        <td>
                            @item.SQ_OptionsId
                        </td>
                                </tr>
                            }
}
                        </tbody>
                    </table>



                </div>

                </div>
            
        </div>
    </div>
@using (Html.BeginForm("TrainingOrientationVerification", "TrainingOrientation", FormMethod.Post,
                     new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
       <input type="hidden" id="emp_orientation_id" name="emp_orientation_id" value="@Model.emp_orientation_id" />
    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Verification</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">

                <table class="table table-lg">
 		    <tr class="row">

 			<td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                Name
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                  @ViewBag.Name
                            </div>
                        </td>
 		  </tr>
		  <tr class="row">
			<td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                Position
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                  @ViewBag.Designation
                            </div>
                        </td>
                    </tr>
   		    <tr class="row">
 			<td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                               Department
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                  @ViewBag.DeptName
                            </div>
                        </td>			
                    </tr>
		 <tr class="row">
 			<td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                 Is employee completed the orientation trainings successfully?
                            </div>
                        </td>
                       <td class="col-xs-3 col-md-4">
                            <div class="editor-field">
                              <select class="form-control select-search select2-hidden-accessible" data-fouc id="TrainingStatus" name="TrainingStatus" required onchange="SetAction()">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.TrainingStatus != null)
                                    {
                                        foreach (var item in ViewBag.TrainingStatus)
                                        {
                                            <option value='@item'>@item</option>
                                        }
                                    }
                                </select>
				                @Html.ValidationMessageFor(model => model.TrainingStatus)
                            </div>
                        </td>
              <td class="col-xs-3 col-md-2" style="display:none" id="Action1">
                        <div class="editor-label">
                           If No, actions planned to enhance the employee awareness?
                        </div>
                    </td>
                   <td class="col" style="display:none" id="Action2">
                       <div>
                          
                             <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="Action" name="Action"></textarea>                                 
                        </div>

                    </td>
 		</tr>
 		<tr class="row">
   			<td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                               Any evidences?
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                <input type="file" name="Evidence" id="Evidence" onchange="FileFormatValidation(this)" accept=".pdf,.xlsx,.xls,.doc,.docx" class="bootstrap-uploader" data-fouc />               
                            </div>
                        </td>
			<td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                  @Html.LabelFor(model=>model.OrientationStatus)
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                              <select class="form-control select-search select2-hidden-accessible" data-fouc id="OrientationStatus" name="OrientationStatus" required>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.OrientationStatus != null)
                                    {
                                        foreach (var item in ViewBag.OrientationStatus)
                                        {
                                            <option value='@item'>@item</option>
                                        }
                                    }
                                </select>
				 @Html.ValidationMessageFor(model => model.OrientationStatus)
                            </div>
                        </td>
		</tr>  
                </table>
            </div>
        </div>
        <div class="card-footer bg-white d-flex justify-content-between align-items-center">
            @Html.ActionLink("Back to List", "EmployeeTrainingOrientationList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })
            <button type="submit" id="btnCreate" value="Save" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Add</button>
        </div>
    </div>

       
        }
  @section scripts {
            <script>
                //----zzz


                $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
                                @:     text: '@TempData["alertdata"]',
                                @:     type: 'error'
                                @: }).show();
                                                     }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
                                @:       text: '@TempData["Successdata"]',
                                @:       type: 'success'
        @:}).show();
                                            }
                });

                function FileFormatValidation(file) {
                    var ext = file.value.split(".").pop().toLowerCase();
                    if ($.inArray(ext, ["pdf", "xlsx"]) == -1) {
                        file.value = "";
                        jAlert("Invalid file format, please upload only pdf format");
                    }
                }

                function SetAction() {

                    var text = document.getElementById("TrainingStatus").value;

                    if (text == "No") {
                        document.getElementById("Action2").style.display = "";
                        document.getElementById("Action1").style.display = "";

                    }
                    else {

                        document.getElementById("Action2").style.display = "none";
                        document.getElementById("Action1").style.display = "none";
                    }
                }

</script>


        }