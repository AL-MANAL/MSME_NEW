@model ISOStd.Models.VehiclePassModels

@{
    ViewBag.Title = "AddInsurance";
}

<div class="groupedassets margin10">
    <span class="groupedassetshead margin10 onestphdcolor">Add Vehicle Insurance Details</span>
</div>
 <div id="divmsg">
        @if (TempData["alertdata"] != null)
        {
            <span class="errMsg" style="color: red;font-weight: bold;">@TempData["alertdata"]</span>
        }
        @if (TempData["Successdata"] != null)
        {
            <span class="errMsg" style="color: green; font-weight: bold;">@TempData["Successdata"]</span>
        }
 </div>
@using (Html.BeginForm("AddVehicleInsuranceDetails", "EquipmentCategory", FormMethod.Post,
    new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    
     <div>
            <table id="tabcontent">
                 <input type="hidden" id="id_equipment" name="id_equipment" value="@Model.id_equipment" />
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Insurance_type)<span style="color:red">*</span>
                        </div>
                    </td>
                    <td>
                          <div class="editor-field">
                            <select id="Insurance_type" name="Insurance_type">
                                <option value='' hidden>Select</option>
                                @if (ViewBag.InsuranceType != null)
                                {
                                    foreach (var item in ViewBag.InsuranceType)
                                    {
                                    <option value='@item.Value'>@item.Text</option>
                                    }
                                }
                            </select>
                            
                        </div>
                          <span class="field-validation-error"><span id="Insurance_type-message" style="display: none;">Insurance type field is required</span></span>
                          @Html.ValidationMessageFor(model => model.Insurance_type)
                    </td>
                    
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Upload)<span style="color:red">*</span>
                           
                        </div>
                    </td>
                    <td>
                            <input type="file" name="Upload" id="Upload" title="Document" onchange="FileFormatValidation(this)" accept=".pdf, .doc, .docx,image/*" 
                            style="height: 38px;"/>
                          
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Mulki_upload)<span style="color:red">*</span>
                           
                        </div>
                    </td>
                    <td>
                            <input type="file" name="Mulki_upload" id="Mulki_upload" title="Document" onchange="FileFormatValidation(this)" accept=".pdf, .doc, .docx,image/*" 
                            style="height: 38px;"/>
                          
                    </td>
                      <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Insurance_date)
                           
                        </div>
                    </td>
                    <td>
                           <input type="text" id="Insurance_date" name="Insurance_date"  style="width: 150px;"/>
                        
                    </td>
                </tr>
                <tr>
                   <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Insurance_expdate)
                           
                        </div>
                    </td>
                    <td>
                           <input type="text" id="Insurance_expdate" name="Insurance_expdate"  style="width: 150px;"/>
                        
                    </td>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Insurance_cover)
                           
                        </div>
                    </td>
                    <td>
                          <input type="text" id="Insurance_cover" name="Insurance_cover" />
                        
                    </td>
                </tr>
             <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Company)
                           
                        </div>
                    </td>
                    <td>
                          <input type="text" id="Company" name="Company" />
                        
                    </td>
             </tr>

            </table>
        </div>
    
     <div>
        @Html.ActionLink("Back to List", "EquipmentDetailsList", null, new {@class = "ActionLink", onclick = "HyperLinkProgressIconFunction()" })
        <input type="submit" id="btnCreate" value="Save" style="display: none;" onclick="ProgressIconFunction('#form1')" />
       
            <input type="button" value="Add" onclick="AddInsurance()" />
      
    </div>
    
    <div id="dvItems" style="overflow: auto; display: none;">
        <input type="hidden" id="itemcnt" name="itemcnt" value="0" />
        <div class="editor-label" style="background-color: #4cc4dd; width: 100%; height: 30px; cursor: pointer;">
            <label for="Objective_Details" style="color: white; padding-left: 5px;">Insurance Details</label>
        </div>

        <table id="team-list" style="width: 100%">
            <tr>
                <th>Action</th>
                <th>Insurance Type</th>
                <th>Document</th>
                <th>Mulki Document</th>
                <th>Insurance Date</th>
                <th>Insurance Expiry Date</th>
                <th>Insurance Cover</th>
            </tr>
        </table>
    </div>     
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        function Validation() {
            var validflg = true;
            var ssnMessage = "";
            if (document.getElementById("Insurance_type").value == "") {
                ssnMessage = $('#Insurance_type-message');
                ssnMessage.show();
                validflg = false;
            }
            else {
                ssnMessage = $('#Insurance_type-message');
                ssnMessage.hide();
            }
           
            return validflg;
        }

        function AddInsurance() {

            if (Validation() == true) {

                document.getElementById("dvItems").style.display = "";
                var cnt = document.getElementById("itemcnt").value;

                document.getElementById("itemcnt").value = cnt;
                // Find a <table> element with id="myTable":
                var table = document.getElementById("team-list");


                // Create an empty <tr> element and add it to the 1st position of the table:
                var row = table.insertRow();

                // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
                var cell0 = row.insertCell(0);
                var cell1 = row.insertCell(1);
                var cell2 = row.insertCell(2);
                var cell3 = row.insertCell(3);
                var cell4 = row.insertCell(4);
                var cell5 = row.insertCell(5);
                var cell6 = row.insertCell(6);

                var Insurance_type = $('#Insurance_type').val();
                var sInsurance_type = document.getElementById("Insurance_type");
                var sInsurance_typeText = sInsurance_type.options[sInsurance_type.selectedIndex].text;

                var Upload = $('#Upload').val();
                UploadsPath = UploadDocument(cnt);

                var Mulki_upload = $('#Mulki_upload').val();
                Mulki_uploadPath = MulkiUploadDocument(cnt);

                var Insurance_date = $('#Insurance_date').val();
                var Insurance_expdate = $('#Insurance_expdate').val();
                var Insurance_cover = $('#Insurance_cover').val();

                cell0.innerHTML = " <img src='@Url.Content("~/images/cancel.png")' onclick='deleteRow(this)' style='cursor:pointer; padding-right: 5px;'/>";
                cell1.innerHTML = "<input type='hidden' id='Insurance_type" + cnt + "' name='Insurance_type" + cnt + "' value='" + Insurance_type + "'>" + sInsurance_typeText;
                cell2.innerHTML = "<input type='hidden' id='Upload" + cnt + "' name='Upload" + cnt + "' value='" + UploadsPath + "'>" + Upload;
                cell3.innerHTML = "<input type='hidden' id='Mulki_upload" + cnt + "' name='Mulki_upload" + cnt + "' value='" + Mulki_uploadPath + "'>" + Mulki_upload;
                cell4.innerHTML = "<input type='hidden' id='Insurance_date" + cnt + "' name='Insurance_date" + cnt + "' value='" + Insurance_date + "'>" + Insurance_date;
                cell5.innerHTML = "<input type='hidden' id='Insurance_expdate" + cnt + "' name='Insurance_expdate" + cnt + "' value='" + Insurance_expdate + "'>" + Insurance_expdate;
                cell6.innerHTML = "<input type='hidden' id='Insurance_cover" + cnt + "' name='Insurance_cover" + cnt + "' value='" + Insurance_cover + "'>" + Insurance_cover;
                
                cnt++;
                document.getElementById("itemcnt").value = cnt;
                document.getElementById("btnCreate").style.display = "";
                ResetControl();
            }

        }

        function UploadDocument(ind) {
            var Upload = ($("#Upload")).files; //$('#testfile').file;

            var formData = new FormData();
            var totalFiles = document.getElementById("Upload").files.length;
            for (var i = 0; i < totalFiles; i++) {
                var file = document.getElementById("Upload").files[i];

                formData.append("Upload", file);
            }
            jQuery.ajax({
                url: '@Url.Action("UploadDocument", "EquipmentCategory")',
                type: 'POST',
                contentType: false,
                processData: false,
                data: formData,
                success: function (result) {
                    document.getElementById("Upload" + ind).value = result;
                    UploadsPath = result;
                    //jAlert(result);
                    return result;
                }
            });
        }
        function MulkiUploadDocument(ind) {
            var Mulki_upload = ($("#Mulki_upload")).files; //$('#testfile').file;

            var formData = new FormData();
            var totalFiles = document.getElementById("Mulki_upload").files.length;
            for (var i = 0; i < totalFiles; i++) {
                var file = document.getElementById("Mulki_upload").files[i];

                formData.append("Mulki_upload", file);
            }
            jQuery.ajax({
                url: '@Url.Action("UploadMulkiDocument", "EquipmentCategory")',
                type: 'POST',
                contentType: false,
                processData: false,
                data: formData,
                success: function (result) {
                    document.getElementById("Mulki_upload" + ind).value = result;
                    Mulki_uploadPath = result;
                    //jAlert(result);
                    return result;
                }
            });
        }
        function ResetControl() {
            document.getElementById("Insurance_type").selectedIndex = "0";
            document.getElementById("Upload").value = "";
            document.getElementById("Mulki_upload").value = "";
            document.getElementById("Insurance_date").value = "";
            document.getElementById("Insurance_expdate").value = "";
            document.getElementById("Insurance_cover").value = "";
           
            var ssnMessage = $('#Insurance_type-message');
            ssnMessage.hide();
            
           
        }

        function deleteRow(btn) {
            var row = btn.parentNode.parentNode;
            row.parentNode.removeChild(row);
        }

        function FileFormatValidation(file) {
            var ext = file.value.split(".").pop().toLowerCase();
            if ($.inArray(ext, ["doc", "pdf", "docx", "jpg", "jpeg", "gif", "png", "dwg", "dxf"]) == -1) {
                file.value = "";
                jAlert("Invalid file format, please upload only doc, pdf, docx, jpg, jpeg, gif, png format");
            }
        }
       
        $(function () {
            $('#Insurance_date').datepicker({
                dateFormat: "dd/mm/yy",
                buttonImageOnly: true,
                buttonImage: '../Images/Calender.png',
                showOn: 'both',
                changeMonth: true,
                changeYear: true,
                gotoCurrent: true
            });

            $('#Insurance_expdate').datepicker({
                dateFormat: "dd/mm/yy",
                buttonImageOnly: true,
                buttonImage: '../Images/Calender.png',
                showOn: 'both',
                changeMonth: true,
                changeYear: true,
                gotoCurrent: true
            });
        });
        
        </script>
}