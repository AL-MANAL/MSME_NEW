@model ISOStd.Models.TrainingsModels
@{
    Layout = null;
}
<h4 style="text-align:center;border-bottom:1px solid #808080">Training Info</h4>
<p><label><b>Training Topic:</b></label>@Html.DisplayFor(model => model.Training_Topic)
<label><b>Topic content:</b></label>  @Html.Raw(HttpUtility.HtmlDecode(Model.TopicContent))</p>
<p><label><b>Department:</b></label>@Html.DisplayFor(model => model.DeptId)
<label><b>Attendies:</b></label>@Html.DisplayFor(model => model.Attendees)</p>
<p><label><b>Planned Date:</b></label>
     @if (Model.Traning_BeforeDate != null && Model.Traning_BeforeDate > Convert.ToDateTime("01/01/0001"))
             {
                 @Model.Traning_BeforeDate.ToString("dd/MM/yyyy")
             }

<label><b>Justification for Training:</b></label>@Html.DisplayFor(model => model.Reasonfor_Training)</p>
<p><label><b>Training requested by:</b></label>
   @Html.DisplayFor(model => model.Training_Requested_By)

<label><b>Approver:</b></label>@Html.DisplayFor(model => model.ApprovedBy)</p>
<p><label><b>Request Status:</b></label>@Html.DisplayFor(model => model.RequestStatus)</p>
<h4 style="text-align:center;border-bottom:1px solid #808080">Training Plan Detail</h4>
<p><label><b>Training Planned Date:</b></label>
    @if (Model.Training_Planned_Date != null && Model.Training_Planned_Date > Convert.ToDateTime("01/01/0001"))
             {
                 @Model.Training_Planned_Date.ToString("dd/MM/yyyy")
             }

<label><b>Expected Duration:</b></label>@Html.DisplayFor(model => model.Expected_Duration)</p>
<p><label><b>Training Start Date:</b></label>
    @if (Model.Training_Start_Date != null && Model.Training_Start_Date > Convert.ToDateTime("01/01/0001"))
             {
                 @Model.Training_Start_Date.ToString("dd/MM/yyyy")
             }
<label><b>Expected date of completion:</b></label>
   @if (Model.Expected_Date_Completion != null && Model.Expected_Date_Completion > Convert.ToDateTime("01/01/0001"))
             {
                 @Model.Expected_Date_Completion.ToString("dd/MM/yyyy")
             }

</p>
<p><label><b>Source of training:</b></label>@Html.DisplayFor(model => model.Sourceof_Training)
<label><b>Trainers Name:</b></label>
  @Html.DisplayFor(model => model.Trainer_Name)
<label><b>Training venue:</b></label>@Html.DisplayFor(model => model.Venue)</p>
<h4 style="text-align:center;border-bottom:1px solid #808080">Training Details</h4>
<p><label><b>Training certificate status:</b></label>@Html.DisplayFor(model => model.Training_Cert_Status)
<label><b>Reason for not completion:</b></label>@Html.DisplayFor(model => model.Reasons_for_Not_Completed)</p>
<p><label><b>Training rescheduled date:</b></label>
     @if (Model.Training_ReSchedule_Date != null && Model.Training_ReSchedule_Date > Convert.ToDateTime("01/01/0001"))
             {
                 @Model.Training_ReSchedule_Date.ToString("dd/MM/yyyy")
             }

<label><b>Actual training date:</b></label>
     @if (Model.Training_Actual_Date != null && Model.Training_Actual_Date > Convert.ToDateTime("01/01/0001"))
             {
                 @Model.Training_Actual_Date.ToString("dd/MM/yyyy")
             }</p>
<p><label><b>Actual training completion date:</b></label>
     @if (Model.Training_Actual_Completion_Date != null && Model.Training_Actual_Completion_Date > Convert.ToDateTime("01/01/0001"))
             {
                 @Model.Training_Actual_Completion_Date.ToString("dd/MM/yyyy")
             }

<label><b>Training effectiveness evaluation method:</b></label>
    @Html.DisplayFor(model => model.Training_Effect_Eval_Method)</p>
<p><label><b>Training effectiveness evaluation planned date:</b></label>
    @if (Model.Training_Effect_Eval_Plan_Date != null && Model.Training_Effect_Eval_Plan_Date > Convert.ToDateTime("01/01/0001"))
             {
                 @Model.Training_Effect_Eval_Plan_Date.ToString("dd/MM/yyyy")
             }

<label><b>Training status:</b></label>
   @Html.DisplayFor(model => model.Training_Status)</p>

