@model ISOStd.Models.MgmtDocumentsModels
@using System.Data;
@{
    ViewBag.Title = "MgmtDocumentsDetails";
    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
    DataSet dsComments = new DataSet();
    if (ViewBag.dsComments != null)
    {
        dsComments = ViewBag.dsComments;
    }
    string login_user = Obj.GetCurrentUserSession().empid;
}
<style>
    #Text {
        font-size: 2em;
        text-align: center;
        margin: 0 auto;
    }
</style>
@section featured {

    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("MgmtDocumentsList", "MgmtDocuments", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Internal Documents</span>
                    </a>
                    <span class="breadcrumb-item active"> Internal Documents Details</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                    <div class="breadcrumb justify-content-center">
                        <div class="breadcrumb-elements-item dropdown p-0">
                            <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                                <i class="icon-gear mr-2"></i>
                                Settings
                            </a>
                            <div class="dropdown-menu dropdown-menu-right">
                                <div class="dropdown-divider"></div>
                                <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                            </div>
                        </div>
                    </div>
                </div>*@
        </div>
    </div>
}

<div class="card">
    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">Internal Documents Details</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>

            </div>
        </div>
    </div>

    <div class="card-body">


        @*@Html.ActionLink("Back to List", "MgmtDocumentsList", null, new { @Class = "ActionLink", onclick = "HyperLinkProgressIconFunction()" })*@
        @*@Html.ActionLink("Add Annexure", "AddAnnexure", new { idMgmt = Model.idMgmt.ToString() }, new { @Class = "ActionLink", onclick = "HyperLinkProgressIconFunction()" })*@
        @*@Html.ActionLink("Annexure List", "AnnexureList", new { idMgmt = Model.idMgmt.ToString() }, new { @Class = "ActionLink", onclick = "HyperLinkProgressIconFunction()" })*@
        <div class="mt-2 mt-sm-0">
            @if (Obj.GetCurrentUserSession().InternalDoc.Contains("3"))
            {
                <a class="btn bg-orange btn-labeled btn-labeled-left" data-style="radius" href='@Url.Action("AddAnnexure", "MgmtDocuments", new { idMgmt = Model.idMgmt.ToString() })' title="ADd Annexure" onclick="HyperLinkProgressIconFunction()">
                    <b>  <i class="icon-add-to-list"></i></b> Add Annexure
                </a>
            }
            <a class="btn bg-orange btn-labeled btn-labeled-left" data-style="radius" href='@Url.Action("AnnexureList", "MgmtDocuments", new { idMgmt = Model.idMgmt.ToString() })' title="View Annexure List" onclick="HyperLinkProgressIconFunction()">
                <b>  <i class="icon-list3"></i></b> Annexure List
            </a>
        </div>

    </div>
    <div class="container-fluid">
        <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
            <thead></thead>
            <tbody>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded"> @Html.DisplayNameFor(model => model.branch)</p>
                    </td>
                    <td class="col-xs-6 col-md-4">
                        <span class="bg-dark py-1 px-2 rounded"> @Html.DisplayFor(model => model.branch)</span>
                    </td>
                    @if (Model.dcr_no != "")
                    {
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded"> @Html.DisplayNameFor(model => model.dcr_no)</p>
                        </td>
                        <td class="col-xs-6 col-md-4">
                            <span class="bg-dark py-1 px-2 rounded"> @Html.DisplayFor(model => model.dcr_no)</span>
                        </td>
                    }
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded"> @Html.DisplayNameFor(model => model.Department)</p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded"> @Html.DisplayFor(model => model.Department)</span>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded"> @Html.DisplayNameFor(model => model.Location)</p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded"> @Html.DisplayFor(model => model.Location)</span>
                    </td>

                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded"> @Html.DisplayNameFor(model => model.DocLevels)</p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded"> @Html.DisplayFor(model => model.DocLevels)</span>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">  @Html.DisplayNameFor(model => model.Doctype)</p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded"> @Html.DisplayFor(model => model.Doctype)</span>
                    </td>
                </tr>

                <tr class="row">

                    <td class="col-xs-3 col-md-2">

                        <p class="bg-brown py-1 px-2 rounded"> @Html.DisplayNameFor(model => model.ISOStds)</p>

                    </td>
                    <td class="col">

                        <p class="bg-dark py-1 px-2 rounded">@Html.DisplayFor(model => model.ISOStds)</p>

                    </td>
                    <td class="col-xs-3 col-md-2">

                        <p class="bg-brown py-1 px-2 rounded">@Html.DisplayNameFor(model => model.AppClauses)</p>

                    </td>
                    <td class="col">

                        <p class="bg-dark py-1 px-2 rounded"> @Html.DisplayFor(model => model.AppClauses)</p>

                    </td>
                </tr>
                <tr class="row">

                    <td class="col-xs-3 col-md-2">

                        <p class="bg-brown py-1 px-2 rounded"> @Html.DisplayNameFor(model => model.DocRef)</p>

                    </td>
                    <td class="col">

                        <span class="bg-dark py-1 px-2 rounded"> @Html.DisplayFor(model => model.DocRef)</span>

                    </td>
                    <td class="col-xs-3 col-md-2">

                        <p class="bg-brown py-1 px-2 rounded"> @Html.DisplayNameFor(model => model.DocName)</p>

                    </td>
                    <td class="col">

                        <span class="bg-dark py-1 px-2 rounded">  @Html.DisplayFor(model => model.DocName)</span>

                    </td>
                </tr>
                <tr class="row">

                    <td class="col-xs-3 col-md-2">

                        <p class="bg-brown py-1 px-2 rounded"> @Html.DisplayNameFor(model => model.IssueNo)</p>

                    </td>
                    <td class="col">

                        <span class="bg-dark py-1 px-2 rounded"> @Html.DisplayFor(model => model.IssueNo)</span>

                    </td>
                    <td class="col-xs-3 col-md-2">

                        <p class="bg-brown py-1 px-2 rounded"> @Html.DisplayNameFor(model => model.RevNo)</p>

                    </td>
                    <td class="col">

                        <span class="bg-dark py-1 px-2 rounded"> @Html.DisplayFor(model => model.RevNo)</span>

                    </td>
                </tr>
                <tr class="row">

                    <td class="col-xs-3 col-md-2">

                        <p class="bg-brown py-1 px-2 rounded"> @Html.DisplayNameFor(model => model.view_by)</p>

                    </td>
                    <td class="col">

                        <span class="bg-dark py-1 px-2 rounded"> @Html.DisplayFor(model => model.view_by)</span>

                    </td>
                    </tr>
                <tr class="row">

                    <td class="col-xs-3 col-md-2">

                        <p class="bg-brown py-1 px-2 rounded"> @Html.DisplayNameFor(model => model.PreparedBy)</p>

                    </td>
                    <td class="col">

                        <span class="bg-dark py-1 px-2 rounded"> @Html.DisplayFor(model => model.PreparedBy)</span>

                    </td>
                    <td class="col-xs-3 col-md-2">

                        <p class="bg-brown py-1 px-2 rounded">@Html.DisplayNameFor(model => model.ReviewedBy)</p>

                    </td>
                    <td class="col">

                        <span class="bg-dark py-1 px-2 rounded">@Html.DisplayFor(model => model.ReviewedBy)</span>

                    </td>
                </tr>
                <tr class="row">

                    <td class="col-xs-3 col-md-2">

                        <p class="bg-brown py-1 px-2 rounded"> @Html.DisplayNameFor(model => model.DocDate)</p>

                    </td>
                    <td class="col">

                        @if (Model.DocDate != null && Model.DocDate > Convert.ToDateTime("01/01/0001"))
                        {
                            <span class="bg-dark py-1 px-2 rounded">
                                @Model.DocDate.ToString("dd/MM/yyyy")
                            </span>
                        }

                    </td>
                    <td class="col-xs-3 col-md-2">

                        <p class="bg-brown py-1 px-2 rounded"> @Html.DisplayNameFor(model => model.ApprovedBy) </p>

                    </td>
                    <td class="col">

                        <span class="bg-dark py-1 px-2 rounded">  @Html.DisplayFor(model => model.ApprovedBy)</span>

                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">Reviewed status</p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.Reviewed_Status)
                            @if (Model.Reviewers != "0")
                            {
                                <br />
                                <span>Reviewed by : <b>@Model.Reviewers </b></span>
                            }
                        </span>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded"> @Html.DisplayNameFor(model => model.Approved_Status)</p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.Approved_Status)
                            @if (Model.Approvers != "0")
                            {
                                <br />
                                <span>Approved by : <b>@Model.Approvers</b></span>
                            }
                        </span>
                    </td>

                </tr>

                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.ReviewedDate)
                        </p>
                    </td>
                    <td class="col">

                        @if (Model.ReviewedDate != null && Model.ReviewedDate > Convert.ToDateTime("01/01/0001"))
                        {
                            <span class="bg-dark py-1 px-2 rounded">
                                @Model.ReviewedDate.ToString("dd/MM/yyyy")
                            </span>
                        }

                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.ApprovedDate)
                        </p>
                    </td>
                    <td class="col">

                        @if (Model.ApprovedDate != null && Model.ApprovedDate > Convert.ToDateTime("01/01/0001"))
                        {
                            <span class="bg-dark py-1 px-2 rounded">
                                @Model.ApprovedDate.ToString("dd/MM/yyyy")
                            </span>
                        }
                    </td>

                </tr>

                <tr class="row">
                    @*@if (Obj.GetCurrentUserSession().InternalDoc.Contains("4"))
            {*@
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.DocUploadPath)
                        </p>

                    </td>
                    <td class="col">
                        @*@if (Model.Approved_Status == "Approved")
                {*@
                        @if (Model.DocUploadPath != "")
                        {

                            <span class="bg-dark py-1 px-2 rounded">
                                <a href='@Url.Action("DisplayDocument", "Reports", new { Document = Model.DocUploadPath })' target="_blank" class="text-orange-800">Preview</a>
                            </span>
                        }
                        @*}*@
                    </td>
                    @*}*@
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">Updated By</p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.UploadedBy)
                        </span>
                    </td>
                </tr>
                <tr class="row">
                    @if (Obj.GetCurrentUserSession().InternalDoc.Contains("3"))
                    {

                        using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)

                            <td class="col-xs-3 col-md-2">
                                <input type="hidden" id="idMgmt" name="idMgmt" value="@Model.idMgmt" />
                                <p class="bg-brown py-1 px-2 rounded">
                                    Comments
                                </p>
                            </td>
                            <td class="col" colspan="2">
                                @*<textarea id="Comment" name="Comment" required></textarea>
                        <input type="submit" value="Add" style="vertical-align: top;" />*@
                                <div class="form-group form-group-float">
                                    <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="Comment" name="Comment" required></textarea>
                                </div>
                                <div class="form-group form-group-float">
                                    <input type="submit" value="Add" class="btn bg-orange" />
                                </div>
                            </td>
                        }
                    }
                </tr>
            </tbody>

        </table>

        @if (dsComments != null && dsComments.Tables.Count > 0 && dsComments.Tables[0].Rows.Count > 0)
        {
            <h2 class="bg-dark pl-sm-2"> Comments</h2>
            <table class="table table-dark table-bordered table-striped table-hover bg-orange-600">
                @for (int i = 0; i < dsComments.Tables[0].Rows.Count; i++)
                {
                    <tr class="row">
                        <td class="col-xs-3 col-md-4">
                            <p class="bg-dark-alpha py-1 px-2 rounded">
                                <b>@dsComments.Tables[0].Rows[i]["emp_firstname"].ToString()</b>

                                <b>Commented On:</b> @Convert.ToDateTime(dsComments.Tables[0].Rows[i]["CommentDate"].ToString()).ToString("dd/MM/yyyy HH:mm")
                            </p>
                        </td>

                        <td class="col">
                            <span class="bg-dark py-1 px-2 rounded">
                                @dsComments.Tables[0].Rows[i]["Comments"].ToString()
                            </span>
                        </td>


                    </tr>
                }
            </table>

        }

        <hr />
        @if (Model.Reviewed_StatusId == "0" && Model.ReviewedById.Contains(login_user))
        {
            <div id="Text">
                <h1>Document Review</h1>
                <div>
                    <a href='@Url.Action("MgmtDocumentsReviewedApproveOrReject", "MgmtDocuments", new { idMgmt = Model.idMgmt, iStatus = 1, PendingFlg = "true", Document = Model.DocUploadPath, DocName = Model.DocName, DocRef = Model.DocRef })' title="Review Management Document" style="color:green;">
                        <span class="badge badge-info">Review</span>
                    </a>
                    <a href='@Url.Action("MgmtDocumentsReviewedApproveOrReject", "MgmtDocuments", new { idMgmt = Model.idMgmt, iStatus = 2, PendingFlg = "true", Document = Model.DocUploadPath, DocName = Model.DocName, DocRef = Model.DocRef})' title="Reject Management Document" style="color:red;">
                        <span class="badge badge-danger">Reject</span>
                    </a>
                </div>
            </div>
        }

        <hr />
        @if (Model.Reviewed_StatusId != "0" && Model.Approved_StatusId == "0" && Model.ApprovedById.Contains(login_user))
        {
            <div id="Text"> 
                <h1>Document Approve</h1>
            <div>
                <a href='@Url.Action("MgmtDocumentsApproveReject", "MgmtDocuments", new { idMgmt = Model.idMgmt, iStatus = 1, PendingFlg = "true", DocName = Model.DocName,DocRef = Model.DocRef,Document=Model.DocUploadPath })' title="Approve Management Document" style="color:green;">
                    <span class="badge badge-info">Approve</span>
                </a>
                <a href='@Url.Action("MgmtDocumentsApproveReject", "MgmtDocuments", new { idMgmt = Model.idMgmt, iStatus = 2, PendingFlg = "true", DocName = Model.DocName, DocRef = Model.DocRef,Document=Model.DocUploadPath})' title="Reject Management Document" style="color:red;">
                    <span class="badge badge-danger">Reject</span>
                </a>
            </div>
        </div>
        }
    </div>

    <div class="card-footer bg-white d-flex justify-content-between align-items-center">
        @Html.ActionLink("Back to List", "MgmtDocumentsList", null, new { @class = "btn btn-outline bg-orange text-orange border-orange", onclick = "HyperLinkProgressIconFunction()" })
    </div>
</div>



    @section scripts {
        <script>
    //----zzz
    $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
    });
    //zzz----


        </script>


    }