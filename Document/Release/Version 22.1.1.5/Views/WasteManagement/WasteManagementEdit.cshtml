@model ISOStd.Models.WasteManagementModels

@{
    ViewBag.Title = "EditWasteManagement";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section featured {

    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("WasteManagementList", "WasteManagement", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Waste ManagementList</span>
                    </a>
                    <span class="breadcrumb-item active"> Edit Waste Management</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            <div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


}

@using (Html.BeginForm("WasteManagementEdit", "WasteManagement", FormMethod.Post,
                     new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Edit Waste Management</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>

                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">

                <table class="table table-lg">

                    <tbody>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.Disposal_date)<text style="color:red;">*</text>

                            </td>
                            <td class="col">

                                @if (Model.Disposal_date > Convert.ToDateTime("01/01/0001"))
                                {
                                    <input class="form-control" type="date" id="Disposal_date" name="Disposal_date" value="@Model.Disposal_date.ToString("yyyy-MM-dd")" />
                                }
                                else
                                {
                                    <input class="form-control" type="date" id="Disposal_date" name="Disposal_date" required />
                                }

                            </td>
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.DisposalBy)<text style="color: red;">*</text>
                            </td>
                            <td class="col">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="DisposalBy" name="DisposalBy">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.Supplier != null)
                                    {
                                        foreach (var item in ViewBag.Supplier)
                                        {
                                            if (item.Value == Model.DisposalBy)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }

                                        }
                                    }
                                </select>

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <input type="hidden" name="Id_waste" id="Id_waste" value="@Model.Id_waste" />

                                @Html.LabelFor(model => model.Wate_type)<text style="color: red;">*</text>

                            </td>
                            <td class="col">
                                <input class="form-control" type="text" id="Wate_type" name="Wate_type" value="@Model.Wate_type" required />
                            </td>

                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.Units)<text style="color: red;">*</text>

                            </td>
                            <td class="col">

                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="Units" name="Units" required>

                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.Units != null)
                                    {
                                        foreach (var item in ViewBag.Units)
                                        {
                                            if (item.Text == Model.Units)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }

                                        }
                                    }
                                </select>

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.Quantity)<text style="color: red;">*</text>

                            </td>
                            <td class="col">
                                <input class="form-control" type="number" id="Quantity" name="Quantity" value="@Model.Quantity" required />

                            </td>
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.Location)<text style="color: red;">*</text>

                            </td>
                            <td class="col">
                                @*<select class="form-control select-search select2-hidden-accessible" data-fouc id="Location" name="Location" required>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.Location != null)
                                    {
                                        foreach (var item in ViewBag.Location)
                                        {
                                            if (item.Text == Model.Location)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }

                                        }
                                    }
                                </select>*@
                               <input class="form-control" type="text" id="Location" name="Location" value="@Model.Location" required />
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.Collection_Method)<text style="color: red;">*</text>

                            </td>
                            <td class="col">
                                <input class="form-control" type="text" id="Collection_Method" name="Collection_Method" value="@Model.Collection_Method" required />
                            </td>
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.Destination)
                            </td>
                            <td class="col">
                                <input class="form-control" type="text" id="Destination" name="Destination" value="@Model.Destination" required />
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.Recv_facility)
                            </td>
                            <td class="col">
                                <input class="form-control" type="text" id="Recv_facility" name="Recv_facility" value="@Model.Recv_facility" required />

                            </td>
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.Upload_doc)
                            </td>
                            <td class="col">
                                <input type="file" name="Upload_doc" id="Upload_doc" title="Documents" onchange="FileFormatValidation(this)"
                                       multiple="multiple" accept=".pdf, .doc, .docx,image/*" class="bootstrap-uploader" data-fouc />

                                <span class="form-text text-muted"><code>(Hold Ctrl Key in case of multiple files or drag multiple files and drop here)</code></span>
                                <br />
                                @if (Model.Upload_doc != null && Model.Upload_doc != "" && Model.Upload_doc.Length > 0)
                                {
                                    <h6> <span class="bg-dark py-1 px-2 rounded">Document List</span></h6>

                                    <span class="form-text text-muted">
                                        <code>
                                            (Uncheck in case to remove a uploaded file)
                                        </code>
                                    </span>
                                    foreach (var docs in Model.Upload_doc.Trim(',').Split(','))
                                    {
                                        <div class="form-check">
                                            <label class="form-check-label">
                                                <input type="checkbox" id="QCDocsVal" name="QCDocsVal" class="form-check-input-styled QCDocsVal" value="@docs.Trim(',')" checked title="Uncheck in case to remove a uploaded file" data-fouc />
                                                <input type="hidden" id="QCDocsValselectall" name="QCDocsValselectall" />
                                                <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" class="text-orange">
                                                    @System.IO.Path.GetFileName(docs)
                                                </a>
                                            </label>
                                        </div>
                                    }
                                }



                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.Remarks)

                            </td>
                            <td class="col">

                                @*<input type="text" id="Remarks" name="Remarks" value="@Model.Remarks" />*@
                                <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position"  id="Remarks" name="Remarks">@Model.Remarks</textarea>

                            </td>
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.Collected_by)
                            </td>
                            <td class="col">
                                <input class="form-control" type="text" id="Collected_by" name="Collected_by" value="@Model.Collected_by" />
                            </td>
                        </tr>

                    </tbody>

                </table>
            </div>

        </div>




        <div class="card-footer bg-white d-flex justify-content-between align-items-center">

            @Html.ActionLink("Back to List", "WasteManagementList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })

            <button class="btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400" type="submit" value="Update" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Update</button>

        </div>
    </div>
            }




@section Scripts {
    <script>

            $(document).ready(function () {

        @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
                    });

    //zzz----
        // Default initialization
        $('.form-check-input-styled').uniform();

            function FileFormatValidation(file) {
                var ext = file.value.split(".").pop().toLowerCase();
                if ($.inArray(ext, ["pdf", "xlsx", "xls", "doc", "docx"]) == -1) {
                    file.value = "";
                    bootbox.alert({
                        title: 'File type',
                        message: 'Invalid file format, please upload only doc, pdf, docx, jpg, jpeg, gif, png format'
                    });
                }
            }


            $("#QCDocsVal").click(function () {
                if ($("#QCDocsVal").prop('checked')) {
                    {
                        $(this).prop('checked', true);
                    }
                }
                else {

                    $(this).prop('checked', false);
                    document.getElementById("QCDocsValselectall").value = "DeleteQC";
                }

            });

       

       


    </script>
    @Scripts.Render("~/bundles/jqueryval")
}

