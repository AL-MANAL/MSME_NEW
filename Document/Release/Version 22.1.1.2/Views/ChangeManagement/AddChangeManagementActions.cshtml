@model ISOStd.Models.ManagementChangeModels
@using System.Data;

@{
    ViewBag.Title = "AddChangeManagement";
    int icont = 0;
    ISOStd.Models.ChangeManagementModelsList objActnList = new ISOStd.Models.ChangeManagementModelsList();
    if (ViewBag.objAttnList != null)
    {
        objActnList = ViewBag.objAttnList;
        icont = objActnList.ChangeMgmtList.Count;
    }
}


@*    <div class="groupedassets margin10">
        <span class="groupedassetshead margin10 onestphdcolor">Add Actions</span>
    </div>*@


<style>

    #container {
        position: relative;
        margin: 0px auto;
        padding: 0px;
        width: 600px;
        height: 400px;
        overflow: auto;
    }

        #container .content {
            background-image: url('./assets/azusa.jpg');
            width: 1280px;
            height: 720px;
        }
</style>
@section featured {       

    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">
                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("ChangeManagementList", "ChangeManagement", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Management Of Change</span>
                    </a>
                    <span class="breadcrumb-item active">Add Actions</span>
                </div>
                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">
                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>
                        <div class="dropdown-menu dropdown-menu-right">
                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}

@using (Html.BeginForm("AddChangeManagementActions", "ChangeManagement", FormMethod.Post,
                     new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title"> Actions taken to mitigate the impact on consequences</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>

                </div>
            </div>
        </div>
        <div class="card-body">
            <input type="hidden" id="IdMgmt" name="IdMgmt" value="@Model.IdMgmt" />
            <div class="container-fluid">

                <table class="table table-lg">
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">

                            @Html.LabelFor(model => model.Action)<text style="color:red;">*</text>

                        </td>
                        <td class="col">

                            @*@Html.TextAreaFor(model => model.Action)*@
                            <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="Action" name="Action"></textarea>
                            <span class="field-validation-error"><span id="Action-message" style="display: none;">Action field is required.</span></span>
                            @Html.ValidationMessageFor(model => model.Action)

                        </td>


                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.TargetDate)<text style="color:red;">*</text>
                            </div>
                        </td>
                        <td class="col">

                            <input type="date" id="TargetDate" name="TargetDate" class="form-control" />
                            <span class="field-validation-error"><span id="Target-date-message" style="display: none;">Target Date field is required.</span></span>
                            @Html.ValidationMessageFor(model => model.TargetDate)

                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">

                            @Html.LabelFor(model => model.PersonResponsible)<text style="color:red;">*</text>

                        </td>
                        <td class="col">



                            <select class="form-control select-search select2-hidden-accessible" data-fouc id="PersonResponsible" name="PersonResponsible">
                                <option value='' hidden>Select</option>
                                @if (ViewBag.EmpList != null)
                                {
                                    foreach (var item in ViewBag.EmpList)
                                    {
                                        <option value='@item.Value'>@item.Text</option>
                                    }
                                }
                            </select>
                            <span class="field-validation-error"><span id="Person-Responsible-message" style="display: none;">Person Responsible field is required.</span></span>
                            @Html.ValidationMessageFor(model => model.PersonResponsible)

                        </td>

                        <td class="col-xs-3 col-md-2">

                            @Html.LabelFor(model => model.Action_Status)<text style="color:red;">*</text>

                        </td>
                        <td class="col">

                            <select class="form-control select-search select2-hidden-accessible" data-fouc id="Action_Status" name="Action_Status">
                                <option value='' hidden>Select</option>
                                @if (ViewBag.ActionStatus != null)
                                {
                                    foreach (var item in ViewBag.ActionStatus)
                                    {
                                        <option value='@item'>@item</option>
                                    }
                                }
                            </select>

                            <span class="field-validation-error"><span id="Action-status-message" style="display: none;">Action Status field is required.</span></span>
                            @Html.ValidationMessageFor(model => model.Action_Status)

                        </td>
                    </tr>

                    <tr class="row">
                        <td class="col-xs-3 col-md-2">

                            @Html.LabelFor(model => model.ActionCompletionDate)

                        </td>
                        <td class="col">

                            <input class="form-control" type="date" id="ActionCompletionDate" name="ActionCompletionDate" />


                        </td>
                    </tr>

                </table>
            </div>

        </div>

        <div class="card-footer bg-white d-flex justify-content-between align-items-center">

            @Html.ActionLink("Back to List", "ChangeManagementList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })

            <div class="mt-2 mt-sm-0">
                <button class="btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400 invisible" id="btnCreate" type="submit" value="Save" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Save</button>
                <input type="button" value="Add" class="btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400" onclick="AddAction()" />
            </div>

        </div>
    </div>
    <div class="card" id="hidden card">
        <div class="card-header header-elements-inline">
            <h5 class="card-title">Action Details</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>


                </div>
            </div>
        </div>

        <div class="card-body scrollbar-container">
            <input type="hidden" id="itemcnt" name="itemcnt" value="@icont" />

            <div class="card card-table table-responsive shadow-0 mb-0 scrollbar">
                <table class="table" id="team-list">
                    <tr class="bg-blue">
                        <th>Delete</th>
                        <th>Action</th>
                        <th>Target Date</th>
                        <th>Person Responsible</th>
                        <th>Action Status</th>
                        <th>Completion Date</th>
                    </tr>
                    @if (objActnList.ChangeMgmtList != null && objActnList.ChangeMgmtList.Count > 0)
                    {
                        for (int index = 0; index < objActnList.ChangeMgmtList.Count; index++)
                        {

                            <tr>
                                <td>
                                    <img src='@Url.Content("~/images/cancel.png")' onclick='deleteRow(this)' style='cursor:pointer; padding-right: 5px;' />
                                    <input type='hidden' id='Id@(index)' name="Id@(index)" value='@objActnList.ChangeMgmtList[index].Id' />
                                </td>

                                <td>
                                    <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="6" class="form-control elastic maxlength-badge-position" id='Action@(index)' name="Action@(index)">@objActnList.ChangeMgmtList[index].Action</textarea>
                                </td>

                                <td>
                                    @if (objActnList.ChangeMgmtList[index].TargetDate != null && objActnList.ChangeMgmtList[index].TargetDate > Convert.ToDateTime("01/01/0001"))
                                    {
                                        <input class="form-control" type="date" id='TargetDate@(index)' name='TargetDate@(index)' value="@objActnList.ChangeMgmtList[index].TargetDate.ToString("yyyy-MM-dd")" />
                                    }
                                    else
                                    {
                                        <input class="form-control" type="date" id='TargetDate@(index)' name='TargetDate@(index)' />
                                    }
                                </td>



                                <td>
                                    <select class="form-control select-search select2-hidden-accessible" id="PersonResponsible@(index)" name="PersonResponsible@(index)">
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.EmpList != null)
                                        {
                                            foreach (var item in ViewBag.EmpList)
                                            {
                                                if (item.Value == objActnList.ChangeMgmtList[index].PersonResponsible)
                                                {
                                                    <option value='@item.Value' selected>@item.Text</option>
                                                }
                                                else
                                                {
                                                    <option value='@item.Value'>@item.Text</option>
                                                }
                                            }
                                        }
                                    </select>

                                </td>
                                <td>
                                    <select class="form-control select-search select2-hidden-accessible" id="Action_Status@(index)" name="Action_Status@(index)">
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.ActionStatus != null)
                                        {
                                            foreach (var item in ViewBag.ActionStatus)
                                            {
                                                if (item == objActnList.ChangeMgmtList[index].Action_Status)
                                                {
                                                    <option value='@item' selected>@item</option>
                                                }
                                                else
                                                {
                                                    <option value='@item'>@item</option>
                                                }
                                            }
                                        }
                                    </select>

                                </td>
                                <td>
                                    @if (objActnList.ChangeMgmtList[index].ActionCompletionDate != null && objActnList.ChangeMgmtList[index].ActionCompletionDate > Convert.ToDateTime("01/01/0001"))
                                    {
                                        <input class="form-control" type="date" id='ActionCompletionDate@(index)' name='ActionCompletionDate@(index)' value="@objActnList.ChangeMgmtList[index].ActionCompletionDate.ToString("yyyy-MM-dd")" />
                                    }
                                    else
                                    {
                                        <input class="form-control" type="text" id='ActionCompletionDate@(index)' name='ActionCompletionDate@(index)' />
                                    }
                                </td>
                            </tr>
                        }
                    }
                </table>
            </div>

        </div>
    </div>




}

    @section Scripts {
        <script>

        //var ps = new PerfectScrollbar('#container');
           $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
    });
        var Action_PlanServerPath = "";
        var showClass = 'is-visible';
        var hideClass = 'invisible';



         function Validation() {
             var validflg = true;
             var ssnMessage = "";
             if (document.getElementById("Action").value == "") {
                 ssnMessage = $('#Action-message');
                 ssnMessage.show();
                 validflg = false;
             }
             else {
                 ssnMessage = $('#Action-message');
                 ssnMessage.hide();
             }
             if (document.getElementById("TargetDate").value == "") {
                 ssnMessage = $('#Target-date-message');
                 ssnMessage.show();
                 validflg = false;
             }
             else {
                 ssnMessage = $('#Target-date-message');
                 ssnMessage.hide();
             }
             if (document.getElementById("PersonResponsible").value == "") {
                 ssnMessage = $('#Person-Responsible-message');
                 ssnMessage.show();
                 validflg = false;
             }
             else {
                 ssnMessage = $('#Person-Responsible-message');
                 ssnMessage.hide();
             }
             if (document.getElementById("Action_Status").value == "") {
                 ssnMessage = $('#Action-status-message');
                 ssnMessage.show();
                 validflg = false;
             }
             else {
                 ssnMessage = $('#Action-status-message');
                 ssnMessage.hide();
             }

             return validflg;
         }

         function AddAction() {

             if (Validation() == true) {


                 var cnt = document.getElementById("itemcnt").value;

                 document.getElementById("itemcnt").value = cnt;
                 // Find a <table> element with id="myTable":
                 var table = document.getElementById("team-list");


                 // Create an empty <tr> element and add it to the 1st position of the table:
                 var row = table.insertRow();

                 // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
                 var cell0 = row.insertCell(0);
                 var cell1 = row.insertCell(1);
                 var cell2 = row.insertCell(2);
                 var cell3 = row.insertCell(3);
                 var cell4 = row.insertCell(4);
                 var cell5 = row.insertCell(5);

                 //cell0.style = "width: 70px; min-width: 70px; max-width: 70px;word-wrap:break-word";
                 //cell1.style = "width: 200px; min-width: 200px; max-width: 200px;word-wrap:break-word";
                 //cell2.style = "width: 150px; min-width: 150px; max-width: 150px;word-wrap:break-word";
                 //cell3.style = "width: 150px; min-width: 150px; max-width: 150px;word-wrap:break-word";
                 //cell4.style = "width: 150px; min-width: 150px; max-width: 150px;word-wrap:break-word";
                 //cell5.style = "width: 150px; min-width: 150px; max-width: 150px;word-wrap:break-word";

                 var Action = $('#Action').val();
                 var TargetDate = $('#TargetDate').val();
                 var ActionCompletionDate = $('#ActionCompletionDate').val();


                 var Action_StatusVal = $('#Action_Status').val();
                 var Action_Status = [];
                 var Action_StatusText = $.map($("#Action_Status option:selected"), function (el, i) {
                     return $(el).text();
                 });

                 var Person_Responsible = $.map($("#PersonResponsible option:selected"), function (el, i) {
                     return $(el).text();
                 });
                 var Person_ResponsibleVal = $("#PersonResponsible").val();





                cell0.innerHTML = " <img src='@Url.Content("~/images/cancel.png")' onclick='deleteRow(this)' style='cursor:pointer; padding-right: 5px;'/>";

                 cell1.innerHTML = "<textarea id='Action" + cnt + "' name='Action" + cnt + "' style='overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;' class='form-control elastic maxlength-badge-position' cols='4' rows='4' placeholder='Textarea' maxlength='2000'>" + Action + "</textarea>";

                 cell2.innerHTML = "<input type='date' id='TargetDate" + cnt + "' name='TargetDate" + cnt + "' value='" + TargetDate + "' class='form-control'>";

                 cell3.innerHTML = "<select class='select-fixed-single' id='PersonResponsible" + cnt + "' name='PersonResponsible" + cnt + "'><option value='" + Person_ResponsibleVal + "' selected>" + Person_Responsible + "</option>@if (ViewBag.EmpList != null)
                                                                                                                                                                                                            {
                                                                                                                                                                                                     foreach (var item in ViewBag.EmpList)
                                                                                                                                                                                                                { <option value='@item.Value'>@item.Text</option> }
                                                                                                                                                                                                            }</select>";




                 cell4.innerHTML = "<select class='select-fixed-single' id='Action_Status" + cnt + "' name='Action_Status" + cnt + "'><option value='" + Action_StatusVal + "' selected>" + Action_StatusText + "</option>@if (ViewBag.ActionStatus != null)
                                                                                                                                                                                              {
                                                                                                                                                                                                  foreach (var item in ViewBag.ActionStatus)
                                                                                                                                                                                                  { <option value='@item'>@item</option> }
                                                                                                                                                                                              }</select>";


                 cell5.innerHTML = "<input type='date' id='ActionCompletionDate" + cnt + "' name='ActionCompletionDate" + cnt + "' value='" + ActionCompletionDate + "' class='form-control'>";



                 cnt++;
                 document.getElementById("itemcnt").value = cnt;

                 //reintialisation

                 // Badge position
                 $('.maxlength-badge-position').maxlength({
                     alwaysShow: true,
                     placement: 'top'
                 });
                 //auto resize
                 autosize($('.elastic'));


                 $('.select-fixed-single').select2({
                     minimumResultsForSearch: Infinity,
                     width: 150
                 });
                 document.getElementById("btnCreate").classList.remove(hideClass);
                 document.getElementById("btnCreate").classList.add(showClass);
                 //document.getElementById("hidden card").classList.remove(hideClass);
                 //document.getElementById("hidden card").classList.add(showClass);
                 ResetControl();

            }

        }


        function ResetControl() {


            document.getElementById("ActionCompletionDate").value = "";
            document.getElementById("TargetDate").value = "";
            document.getElementById("Action").value = "";
            $("#PersonResponsible").val('').trigger('change');
            $("#Action_Status").val('').trigger('change');
            var ssnMessage = $('#Action-message');
            ssnMessage.hide();
            ssnMessage = $('#Target-date-message');
            ssnMessage.hide();
            ssnMessage = $('#Person-Responsible-message');
            ssnMessage.hide();
            ssnMessage = $('#Action-status-message');
            ssnMessage.hide();

        }




        function deleteRow(btn) {
            var row = btn.parentNode.parentNode;
            row.parentNode.removeChild(row);
            var cnt = document.getElementById("itemcnt").value;
            cnt--;

            document.getElementById("itemcnt").value = cnt;
            if (cnt == "0") {

                document.getElementById("btnCreate").classList.add(hideClass);
                document.getElementById("btnCreate").classList.remove(showClass);
                document.getElementById("hidden card").classList.remove(showClass);
                document.getElementById("hidden card").classList.add(hideClass);
            }

        }

        //$(function () {

        //    $("#ChangeRequestedBy").chosen();
        //    $("#ApprovedBy").chosen();
        //    $("#PersonResponsible").chosen();
        //    $("#Action_Status").chosen();
        //    $("#ChangeIn").chosen();
        //    $("#ChangeType").chosen();
        //    $("#RiskLevel").chosen();
        //    $.validator.setDefaults({ ignore: ":hidden:not('.chosen-select')" });

        //    $('#TargetDate').datepicker({
        //        dateFormat: "dd/mm/yy",
        //        buttonImageOnly: true,
        //        buttonImage: '../Images/Calender.png',
        //        showOn: 'both',
        //        changeMonth: true,
        //        changeYear: true,
        //        gotoCurrent: true
        //    });

        //    $('#ActionCompletionDate').datepicker({
        //        dateFormat: "dd/mm/yy",
        //        buttonImageOnly: true,
        //        buttonImage: '../Images/Calender.png',
        //        showOn: 'both',
        //        changeMonth: true,
        //        changeYear: true,
        //        gotoCurrent: true
        //    });
        //    var cont = document.getElementById("itemcnt").value;

        //    for (var i = 0; i < cont; i++) {
        //        $("#PersonResponsible" + i).chosen();
        //    }
        //    for (var i = 0; i < cont; i++) {
        //        $("#Action_Status" + i).chosen();
        //    }

        //    for (var i = 0; i < cont; i++) {
        //        $('#TargetDate' + i).datepicker({
        //            dateFormat: "dd/mm/yy",
        //            buttonImageOnly: true,
        //            buttonImage: '../Images/Calender.png',
        //            showOn: 'both',
        //            changeMonth: true,
        //            changeYear: true,
        //            gotoCurrent: true
        //        });
        //    }

        //    for (var i = 0; i < cont; i++) {
        //        $('#ActionCompletionDate' + i).datepicker({
        //            dateFormat: "dd/mm/yy",
        //            buttonImageOnly: true,
        //            buttonImage: '../Images/Calender.png',
        //            showOn: 'both',
        //            changeMonth: true,
        //            changeYear: true,
        //            gotoCurrent: true
        //        });
        //    }

        //    if (cont > 0)
        //    {
        //         document.getElementById("btnCreate").style.display = "";

        //    }
        //});



        // (function () {
        //     var cancelEvent = function (evt) {
        //         evt.cancel();
        //     };

        //     CKEDITOR.editor.prototype.readOnly = function (isReadOnly) {
        //         // Turn off contentEditable.
        //         this.document.$.body.disabled = isReadOnly;
        //         CKEDITOR.env.ie ? this.document.$.body.contentEditable = !isReadOnly
        //         : this.document.$.designMode = isReadOnly ? "off" : "on";

        //         // Prevent key handling.
        //         this[isReadOnly ? 'on' : 'removeListener']('key', cancelEvent, null, null, 0);
        //         this[isReadOnly ? 'on' : 'removeListener']('selectionChange', cancelEvent, null, null, 0);

        //         // Disable all commands in wysiwyg mode.
        //         var command,
        //            commands = this._.commands,
        //            mode = this.mode;

        //         for (var name in commands) {
        //             command = commands[name];
        //             isReadOnly ? command.disable() : command[command.modes[mode] ? 'enable' : 'disable']();
        //             this[isReadOnly ? 'on' : 'removeListener']('state', cancelEvent, null, null, 0);
        //         }
        //     }
        // })();

        </script>
        @Scripts.Render("~/bundles/jqueryval")

    }
