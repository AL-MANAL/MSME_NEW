@using PagedList;
@using PagedList.Mvc;

@model List<ISOStd.Models.KPIModels>

    @{
        ViewBag.Title = "";
        ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
    }
    @{
        var ShowEdit = Obj.GetCurrentUserSession().Kpi.Contains("3") ? true : false;
        var ShowDownld = Obj.GetCurrentUserSession().Kpi.Contains("4") ? true : false;
        var ShowDel = Obj.GetCurrentUserSession().Kpi.Contains("5") ? true : false;
    }

    @section featured {

        <div class="page-header page-header-light">

            <div class="page-header-content header-elements-md-inline">
                <div class="page-title d-flex">
                    <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
                </div>
            </div>

            <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
                <div class="d-flex">
                    <div class="breadcrumb">
                        <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                            <span class="breadcrumb-item"> Home</span>
                        </a>
                        <span class="breadcrumb-item active">Key Performance/Process Indicator</span>

                    </div>


                </div>


            </div>
        </div>
    }

    <style>
        .hidden {
            display: none !important;
        }
    </style>

    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Key Performance/Process Indicator</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>

                </div>
            </div>
        </div>

        @if (Obj.GetCurrentUserSession().Kpi.Contains("3"))
            {
            <div>
                <div class="card-header bg-white header-elements-sm-inline">
                    <div class="header-elements">
                        <a class="btn btn-outline bg-orange text-orange border-orange btn-ladda btn-ladda-progress ladda-button" data-style="radius" href='@Url.Action("AddKPIEvaluation", "KPI")' title="Add New">
                            <span class="ladda-label">Add New</span>
                            <span class="ladda-spinner"></span>
                        </a>
                    </div>
                </div>
            </div>
        }
        <div class="card-body">
            <div class="row">
                <div class="col-sm-4">

                    @if (ViewBag.Branch != null)
                    {
                        <select class="form-control select-search select2-hidden-accessible" data-fouc id="branch_name" name="branch_name" onchange="getDetails()">
                            @*<option value='' hidden>Directorate</option>*@
                            @if (ViewBag.Branch != null)
                            {
                                foreach (var item in ViewBag.Branch)
                                {
                                    if (item.Value == ViewBag.Branch_name)
                                    {
                                        <option value='@item.Value' selected>@item.Text</option>
                                    }
                                    else
                                    {
                                        <option value='@item.Value'>@item.Text</option>
                                    }
                                }
                            }
                        </select>
                    }

                </div>
            </div>
        </div>


        <table class="table table-bordered table-striped table-hover datatable-responsive" id="MgmtDocuments">
            <thead>
                <tr>
                    <th>
                        Sl No.
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().kpi_ref_no)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().branch)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().group_name)
                    </th>
                    @*<th>
                        @Html.DisplayNameFor(model => model.First().measurable_indicator)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().expected_value)
                    </th>*@
                    @*<th>
                        @Html.DisplayNameFor(model => model.First().team)
                    </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.First().process_indicator)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().kpi_level)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().process_monitor)
                    </th>
                    @*<th>
            @Html.DisplayNameFor(model => model.First().measurable_indicator)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().kpi_type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().monitoring_mechanism)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().frequency_eval)
        </th>*@
                    <th data-priority="2" class="text-center not-export-column">Actions</th>
                    </tr>
                </thead>

                <tbody>
                    @if (Model != null && Model.Count() > 0)
            {
                int i = 0;
                foreach (var item in Model)
                {
                    i = i + 1;
                            <tr>
                                <td>
                                    @Html.ActionLink(i.ToString(), "KPIEvaluationDetails", new { KPI_Id = item.KPI_Id.ToString() }, new { onclick = "HyperLinkProgressIconFunction()" })
                                </td>
                                <td>
                                    @Html.DisplayFor(model => item.kpi_ref_no)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => item.branch)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => item.group_name)
                                </td>
                                @*<td>
                                    @Html.DisplayFor(model => item.measurable_indicator)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => item.expected_value)
                                </td>*@
                                @*<td>
                                    @Html.DisplayFor(model => item.team)
                                </td>*@
                                <td>
                                    @Html.DisplayFor(model => item.process_indicator)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => item.kpi_level)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => item.process_monitor)
                                </td>
                                @*<td>
            @Html.DisplayFor(model => model.First().measurable_indicator)
        </td>
        <td>
            @Html.DisplayFor(model => model.First().kpi_type)
        </td>
        <td>
            @Html.DisplayFor(model => model.First().monitoring_mechanism)
        </td>
        <td>
            @Html.DisplayFor(model => model.First().frequency_eval)
        </td>*@
                               
                                <td class="text-center">
                                    <div class="list-icons">
                                        <div class="list-icons-item dropdown">
                                            <a href="#" class="list-icons-item caret-0 dropdown-toggle" data-toggle="dropdown">
                                                <i class="icon-gear mr-2"></i>
                                            </a>

                                            <div class="dropdown-menu dropdown-menu-right">
                                                <a class="dropdown-item" href='@Url.Action("AddPotentialCauses", "KPI", new { KPI_Id = item.KPI_Id })' title="Potential Causes for failure" onclick="HyperLinkProgressIconFunction()">

                                                    <i class="icon-pencil7"></i>PCFF
                                                </a>
                                                @if (item.kpiapprv_status == "2")
                                                {
                                                <a class="dropdown-item" href='@Url.Action("AddActionPlan", "KPI", new { KPI_Id = item.KPI_Id })' title="Action Plan" onclick="HyperLinkProgressIconFunction()">

                                                    <i class="icon-pencil7"></i>Action Plan
                                                </a>
                                                <a class="dropdown-item" href='@Url.Action("AddEvaluation", "KPI", new { KPI_Id = item.KPI_Id, id_measurable = item.id_measurable })' title="Evaluation" onclick="HyperLinkProgressIconFunction()">

                                                    <i class="icon-pencil7"></i>Evaluation
                                                </a>
                                                }

                                                @using (Html.BeginForm("KPIEvaluationPDF", "KPI", FormMethod.Post, new { id = "form1", name = "form1" }))
                                                {
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" id="KPI_Id" name="KPI_Id" value="@item.KPI_Id" />
                                                    <button class="dropdown-item"><i class="icon-printer2"></i>Generate KPI Evaluation Report</button>
                                                }
                                                @using (Html.BeginForm("KPIReportPDF", "KPI", FormMethod.Post, new { id = "form1", name = "form1" }))
                                                {
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" id="KPI_Id" name="KPI_Id" value="@item.KPI_Id" />
                                                    <button class="dropdown-item"><i class="icon-printer2"></i>Generate KPI Report</button>
                                                }
                                                @if (ShowEdit)
                                                {
                                                    if (item.kpiapprv_status == "0" || item.kpiapprv_status == "")
                                                    {
                                                    <a class="dropdown-item" href='@Url.Action("KPIEvaluationEdit", "KPI", new { KPI_Id = item.KPI_Id })' title="Edit" onclick="HyperLinkProgressIconFunction()">
                                                        <i class="icon-pencil7"></i>Edit
                                                    </a>
                                                    }
                                                }

                                                <div class="dropdown-divider"></div>
                                                @if (ShowDel)
                                                {
                                                    <span class="dropdown-item text-center" title="Delete Document" onclick="DeleteItems(@item.KPI_Id)" style="cursor:pointer;"><i class="icon-bin"></i>Delete</span>
                                                }


                                            </div>
                                        </div>
                                    </div>
                                </td>


                              
                            </tr>
                        }
                    }

                </tbody>
            </table>
        </div>


        @section scripts {
            <script>


                $(document).ready(function () {

                    @if (TempData["alertdata"] != null ) {

           @: new Noty({
                                                                                                                                                           @:     text: '@TempData["alertdata"]',
                                                                                                                                                           @:     type: 'error'
                                                                                                                                                           @: }).show();
                                                                                                                                }

                    @if (@TempData["Successdata"] != null ) {

        @:    new Noty({
                                                                                                                                                         @:       text: '@TempData["Successdata"]',
                                                                                                                                                         @:       type: 'success'
                                                                                                                                                         @:   }).show();
                                                                                                                                }
                });
                //zzz----



                var MgmtDocuments = function () {
                    @*var ShowEdit = @(Obj.GetCurrentUserSession().InternalDoc.Contains("3") ? "true" : "false");
              var ShowDownld = @(Obj.GetCurrentUserSession().InternalDoc.Contains("4") ? "true" : "false");
              var ShowDel = @(Obj.GetCurrentUserSession().InternalDoc.Contains("5") ? "true" : "false");*@

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive:true,
                            columnDefs: [{
                                orderable: false,
                                //width: 100,
                                targets: 'not-export-column'

                            }],
                            responsivePriority: 2, targets: -1,
                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });

                        var myClass = "";
                        var Delclass= @(Obj.GetCurrentUserSession().InternalDoc.Contains("4") ? "true" : "false");
                        if (Delclass == false) { myClass = 'hidden'  };

                        var table = $('#MgmtDocuments').DataTable({
                            drawCallback: function () {
                                //$('[data-toggle="popover"]').popover({
                                //    html: true,
                                //    content: setData,
                                //    container: 'body'
                                //    //data: setData,
                                //});
                                var dropdownMenu;

                                // and when you show it, move it to the body
                                $('.datatable-responsive').on('show.bs.dropdown', function (e) {

                                    // grab the menu
                                    dropdownMenu = $(e.target).find('.dropdown-menu');

                                    // detach it and append it to the body
                                    $('body').append(dropdownMenu.detach());

                                    // grab the new offset position
                                    var eOffset = $(e.target).offset();

                                    // make sure to place it where it would normally go (this could be improved)
                                    dropdownMenu.css({
                                        'display': 'block',
                                        'top': eOffset.top + $(e.target).outerHeight(),
                                        'left': eOffset.left
                                    });
                                });

                                // and when you hide it, reattach the drop down, and hide it normally
                                $('.datatable-responsive').on('hide.bs.dropdown', function (e) {
                                    $(e.target).append(dropdownMenu.detach());
                                    dropdownMenu.hide();
                                });

                            },

                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            //stateSave: true,
                            //stateSaveParams: function (settings, data) {
                            //    for (var i = 0, ien = data.columns.length; i < ien; i++) {
                            //        delete data.columns[i].visible;
                            //        delete data.columns[i].search;
                            //    }
                            //},
                            scrollY: '350px',
                            scrollCollapse: true,

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: myClass,//className: 'btn btn-light',
                                        title: 'Internal Document History Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'excelHtml5',
                                        className: myClass,//className: 'btn btn-light',
                                        title: 'Internal Document  Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },

                                    },
                                    {
                                        extend: 'pdfHtml5',
                                        className: myClass,//className: 'btn btn-light',
                                        title: 'Internal Document  Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'csvHtml5',
                                        className: myClass,//className: 'btn btn-light',
                                        title: 'Internal Document  Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: myClass,//className: 'btn btn-light',
                                        title: 'Internal Document  Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle',
                                        columns: ':visible:not(.not-export-column)'
                                    }
                                ]
                            }

                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#MgmtDocuments").resize();
                            } , 100);

                        });
                        //}

                        $('#MgmtDocuments').on('page.dt', function () {
                            //table.draw();
                            //alert("zzz1");
                            $("#MgmtDocuments").resize();

                        });

                        $('#MgmtDocuments').on('column-visibility.dt', function () {
                            //table.draw();
                            //alert("zzz2");
                            $("#MgmtDocuments").resize();

                        });

                        $('#MgmtDocuments').on('order.dt', function () {
                            //table.draw();
                            //alert("zzz3");
                            $("#MgmtDocuments").resize();

                        });


                        $('#MgmtDocuments').on('responsive-display.dt', function () {
                            //table.draw();
                            //alert("zzz4");
                            $("#MgmtDocuments").resize();

                        });


                        $('#MgmtDocuments').on('responsive-resize.dt', function () {
                            //table.draw();
                            //alert("zzz4");
                            $("#MgmtDocuments").resize();

                        });


                        //.on('order.dt', function () {
                        //    table.columns.adjust().draw();
                        //    $("#qhse").resize(); })
                        //.on('search.dt', function () {
                        //    table.columns.adjust().draw();
                        //    $("#qhse").resize(); })

                        //.on('column-visibility.dt', function () {
                        //    table.columns.adjust().draw();
                        //    $("#qhse").resize();
                        //})
                    };

                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();


                // Initialize module
                // ------------------------------

                document.addEventListener('DOMContentLoaded', function () {
                    MgmtDocuments.init();
                });




                @*@Scripts.Render("~/bundles/jqueryval")*@


                //$(function () {
                @*$("#Doctype").chosen();
            $("#Department").chosen();
            $("#Approvestatus").chosen();

        });


        $(document).ready(function () {

            $('[data-toggle="popover"]').popover({

                title: setData,
                html: true,
                placement: 'right',
                container: 'body'
            });

            function setData(id) {
                var set_data = '';
                var element = $(this);
                var id = element.attr("id");
                $.ajax({
                    url: '@Url.Action("MgmtDocumentsInfo", "MgmtDocuments")',
                    methos: "post",
                    async: false,
                    data: { id: id },
                    success: function (data) {
                        set_data = data;
                    }

                });
                return set_data;
            }
        });
                *@


                    function DeleteItems(KPI_Id) {
            bootbox.confirm({
                title: 'Confirm dialog',
                message: 'Are you Sure you want to Delete the current Record?',
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-primary'
                    },
                    cancel: {
                        label: 'Cancel',
                        className: 'btn-link'
                    }
                },
                callback: function (r) {
                    if (r == true) {
                             jQuery.ajax({
                                 url: '@Url.Action("KPIDelete", "KPI")',
                                 data: { Id: KPI_Id },
                        type: 'POST',
                        dataType: "json",
                        success: function (result) {
                            //// Add new params to the querystring dictionary
                            window.location.href =
                                window.location.protocol + "//" +
                                window.location.host +
                                window.location.pathname

                        }
                    });
                    return true;
                }
                else if (r == false) {
                        bootbox.hideAll();
                        return false;
                    }

                }
               });
           }

                    function getDetails() {
                var branch_name = document.getElementById("branch_name").value;

                   jQuery.ajax({
                                url: '@Url.Action("KPIEvaluationListSearch", "KPI")',
                        type: 'POST',
                        dataType: "json",
                        data: { 'branch_name': branch_name },
                        success: function (result) {
                            var params = {
                                branch_name: branch_name
                            };
                            queryString = $.param(params);

                            window.location.href =
                                window.location.protocol + "//" +
                                window.location.host +
                                window.location.pathname +
                               '?' + queryString;

                        }
                    });
            }
            </script>

        }
