@model ISOStd.Models.KPIEvaluationModels
@using System.Data

@{
    ViewBag.Title = "KPIEvaluationDetails";
    DataSet dsKPIDetails = ViewBag.dsKpiTrans;

    if (ViewBag.dsKpiTrans != null)
    {
        dsKPIDetails = ViewBag.dsKpiTrans;
    }

    ISOStd.Models.KPIEvaluationModels obj = new ISOStd.Models.KPIEvaluationModels();
    ISOStd.Models.clsGlobal ObjGlobal = new ISOStd.Models.clsGlobal();
}

@section featured {
    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("KPIEvaluationList", "KPIEvaluation", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> KPIs</span>
                    </a>
                    <span class="breadcrumb-item active"> KPIs Evaluation  Details</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}
    <style>
        .hidden {
            display: none !important;
        }
    </style>

<div class="card">
    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">KPIs Details</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>

            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="mt-2 mt-sm-0">
            @Html.ActionLink("Back to List", "KPIEvaluationList", null, new { @class = "btn btn-outline bg-orange text-orange border-orange", onclick = "HyperLinkProgressIconFunction()" })
            @if (ObjGlobal.GetCurrentUserSession().Kpi.Contains("3"))
            {
                <a class="btn bg-orange btn-labeled btn-labeled-left" data-style="radius" href='@Url.Action("KPIEvaluationEdit", "KPIEvaluation", new { KPI_Id = Model.KPI_Id })' title="Edit" onclick="HyperLinkProgressIconFunction()">
                    <b>  <i class="icon-add-to-list"></i></b> Edit
                </a>
            }
        </div>
        <br />
        <div class="container-fluid">
            <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                <thead></thead>
                <tbody>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.branch)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.branch)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.DeptId)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.DeptId)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.KPI_Ref)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.KPI_Ref)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Location)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Location)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Person_Responsible)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Person_Responsible)
                            </p>
                        </td>


                        @* <td>
                <div class="display-label">
                    @Html.DisplayNameFor(model => model.Freq_of_Eval)
                </div>
            </td>
            <td>
                <div class="display-field">
                    @Html.DisplayFor(model => model.Freq_of_Eval)
                </div>
            </td>*@
                    </tr>
                </tbody>
            </table>
        </div>
        <br />
        <h2 class="bg-dark pl-sm-2"> KPI Evaluation Plan Details</h2>


        @if (dsKPIDetails != null && dsKPIDetails.Tables.Count > 0 && dsKPIDetails.Tables[0].Rows.Count > 0)
        {
        <div class="table-responsive">
            <table class="table table-bordered table-striped table-hover datatable-responsive" id="table1">
                <thead>
                    <tr class="bg-brown">

                        <th>Established On</th>
                        <th>Target Date</th>
                        <th>KPI Desc</th>
                        <th>Target Value</th>
                        <th>Monitoring mechanism</th>
                        <th>Frequency</th>
                        <th class="not-export-column">Evaluation</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < dsKPIDetails.Tables[0].Rows.Count; i++)
                    {
                    <tr>
                        <td>
                            @Convert.ToDateTime(dsKPIDetails.Tables[0].Rows[i]["EstablishedOn"].ToString()).ToString("dd/MM/yyyy")
                        </td>
                        <td>
                            @if (dsKPIDetails.Tables[0].Rows[0]["target_date"].ToString() != "" && dsKPIDetails.Tables[0].Rows[0]["target_date"].ToString() != null)
                            {
                                @Convert.ToDateTime(dsKPIDetails.Tables[0].Rows[i]["target_date"].ToString()).ToString("dd/MM/yyyy")
                            }
                        </td>
                        <td>
                            @dsKPIDetails.Tables[0].Rows[i]["Process_Indicator"].ToString()
                        </td>
                        <td>
                            @dsKPIDetails.Tables[0].Rows[i]["Measurable_Value"].ToString()
                        </td>
                        <td>
                            @dsKPIDetails.Tables[0].Rows[i]["Monitoring_Mechanism"].ToString()
                        </td>
                        <td>
                            @obj.GetFrequencyNameById(dsKPIDetails.Tables[0].Rows[i]["Freq_of_Eval"].ToString())
                        </td>
                        <td>
                            <span class="bg-dark py-1 px-2 rounded">
                                @if (ObjGlobal.GetCurrentUserSession().Kpi.Contains("3"))
                                {
                                    <a href='@Url.Action("AddKPIPlanEvaluation", "KPIEvaluation", new { KPI_Trans_Id = dsKPIDetails.Tables[0].Rows[i]["KPI_Trans_Id"].ToString() })' onclick="HyperLinkProgressIconFunction()">
                                        <i class="icon-add" title="Add Evaluation"></i>
                                    </a>
                                }
                                <a href='@Url.Action("KPIPlanEvaluationList", "KPIEvaluation", new { KPI_Trans_Id = dsKPIDetails.Tables[0].Rows[i]["KPI_Trans_Id"].ToString() })' onclick="HyperLinkProgressIconFunction()">
                                    <i class="icon-list3" title="Evaluation List"></i>
                                </a>
                            </span>
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
        </div>
           
        }

    </div>
</div>

@section scripts {
    <script>
    //----zzz


    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }

    //zzz----




        var table1 = function () {


            //
            // Setup module components
            //

            // Basic Datatable examples
            var _componentDatatableBasic = function () {
                if (!$().DataTable) {
                    console.warn('Warning - datatables.min.js is not loaded.');
                    return;
                }

                //Setting datatable defaults
                $.extend($.fn.dataTable.defaults, {
                    autoWidth: false,
                    responsive: true,
                    columnDefs: [{
                        orderable: false,
                        width: 100,
                        targets: [5]
                    }],

                    colReorder: false,
                    dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                    //dom: 'lBfrtip',
                    language: {
                        search: '<span>Filter:</span> _INPUT_',
                        searchPlaceholder: 'Type to filter...',
                        lengthMenu: '<span>Show:</span> _MENU_',
                        paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                    }
                });

                var myClass = "";
                var Delclass= @(ObjGlobal.GetCurrentUserSession().Kpi.Contains("4") ? "true" : "false");
                if (Delclass == false) { myClass = 'hidden'  };
                var table = $('#table1').DataTable({

                    lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                    colReorder: {
                        fixedColumnsLeft: 1
                    },
                    stateSave: true,

                    scrollY: '350px',
                    scrollCollapse: true,
                    stateSaveParams: function (settings, data) {
                        for (var i = 0, ien = data.columns.length; i < ien; i++) {
                            delete data.columns[i].visible;
                            delete data.columns[i].search;
                        }
                    },

                    keys: {
                        className: 'focus focus-success'
                    },

                    buttons: {
                        buttons: [
                            {
                                extend: 'copyHtml5',
                                className: myClass, //className: 'btn btn-light',
                                title: 'KPI Evaluation Plan Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },
                            {
                                extend: 'excelHtml5',
                                className: myClass, //className: 'btn btn-light',
                                title: 'KPI Evaluation Plan Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },

                            },
                            {
                                extend: 'pdfHtml5',
                                className: myClass, //className: 'btn btn-light',
                                title: 'KPI Evaluation Plan Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },
                            {
                                extend: 'csvHtml5',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'KPI Evaluation Plan Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },
                            {
                                extend: 'print',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'KPI Evaluation Plan Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },

                            {
                                extend: 'colvis',
                                text: '<i class="icon-three-bars"></i>',
                                className: 'btn bg-blue btn-icon dropdown-toggle',
                                columns: ':visible:not(.not-export-column)'
                            }
                        ]
                    }




                });
                // Adjust columns on window resize
                setTimeout(function () {
                    $(window).on('resize', function () {
                        table.columns.adjust();
                    });
                }, 100);


                //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                $('.sidebar-control').on('click', function () {

                    setTimeout(function () {
                        //alert("gii");

                        table.columns.adjust().draw();
                        $("#table1").resize();
                    }, 100);

                });
                //}

                $('#table1').on('page.dt', function () {
                    //table.draw();
                    //alert("zzz1");
                    $("#table1").resize();

                });

                $('#table1').on('column-visibility.dt', function () {
                    //table.draw();
                    //alert("zzz2");
                    $("#table1").resize();

                });

                $('#table1').on('order.dt', function () {
                    //table.draw();
                    //alert("zzz3");
                    $("#table1").resize();

                });


                $('#table1').on('responsive-display.dt', function () {
                    //table.draw();
                    //alert("zzz4");
                    $("#table1").resize();

                });


                $('#table1').on('responsive-resize.dt', function () {
                    //table.draw();
                    //alert("zzz4");
                    $("#table1").resize();

                });
            };


            // Select2 for length menu styling
            var _componentSelect2 = function () {
                if (!$().select2) {
                    console.warn('Warning - select2.min.js is not loaded.');
                    return;
                }

                // Initialize
                $('.dataTables_length select').select2({
                    minimumResultsForSearch: Infinity,
                    dropdownAutoWidth: true,
                    width: 'auto'
                });
            };


            //
            // Return objects assigned to module
            //

            return {
                init: function () {
                    _componentDatatableBasic();
                    _componentSelect2();
                }
            }
        }();


        // Initialize module
        // ------------------------------

        document.addEventListener('DOMContentLoaded', function () {
            table1.init();
        });

    </script>
}
