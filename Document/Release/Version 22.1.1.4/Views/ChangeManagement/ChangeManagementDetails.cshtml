@model ISOStd.Models.ManagementChangeModels
@using System.Data

@{
    ViewBag.Title = "ChangeManagementDetails";
    DataSet dsActionDetails = ViewBag.ActionDetails;

    ISOStd.Models.clsGlobal obj = new ISOStd.Models.clsGlobal();

}

@section featured {

    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("DocumentChangeRequestList", "DocumentChangeRequest", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Management Of Change</span>
                    </a>
                    <span class="breadcrumb-item active">Management Of Change Details</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">
                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>
                        <div class="dropdown-menu dropdown-menu-right">
                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}

    <style>
        .hidden {
            display: none !important;
        }
    </style>

<div class="card">
    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">Management Of Change (MOC) Details</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>
            </div>
        </div>
    </div>

    <div>
        <div class="card-header bg-white header-elements-sm-inline">
            <div class="header-elements">
                @Html.ActionLink("Back to List", "ChangeManagementList", null, new { @class = "btn btn-outline bg-orange text-orange border-orange", onclick = "HyperLinkProgressIconFunction()" })
            </div>
        </div>
    </div>

    <div class="card-body">
        <div class="container-fluid">
            <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                <thead></thead>
                <tr class="row">

                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.branch)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.branch)
                        </p>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.Department)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.Department)
                        </p>
                    </td>
                </tr>
                <tr class="row">

                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">

                            @Html.DisplayNameFor(model => model.ChangeInitiatedDate)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">

                            @if (Model.ChangeInitiatedDate != null && Model.ChangeInitiatedDate > Convert.ToDateTime("01/01/0001"))
                            {
                                @Html.Label(Model.ChangeInitiatedDate.ToString("dd/MM/yyyy"))
                            }
                        </p>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.Location)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.Location)
                        </p>
                    </td>
                </tr>
                <tr class="row">

                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.LoggedBy)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.LoggedBy)
                        </p>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.ChangeRequestedBy)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.ChangeRequestedBy)
                        </p>
                    </td>
                </tr>
                <tr class="row">

                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.ChangeIn)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.ChangeIn)
                        </p>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.ApprovedBy)
                        </p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.ApprovedBy)
                        </span>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.ChangeType)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.ChangeType)
                        </p>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.RiskLevel)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.RiskLevel)
                        </p>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.ApproveStatus)
                        </p>
                    </td>
                    <td class="col-xs-6 col-md-4">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.ApproveStatus)
                        </p>
                    </td>
                    @if (Model.ApproveStatus != "Pending")
                    {
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.ApproveOrRejectOn)
                            </p>
                        </td>
                        <td class="col">
                            @if (Model.ApproveOrRejectOn != null && Model.ApproveOrRejectOn > Convert.ToDateTime("01/01/0001"))
                            {
                                <p class="bg-dark py-1 px-2 rounded">

                                    @Model.ApproveOrRejectOn.ToString("dd/MM/yyyy")
                                </p>
                            }
                        </td>
                    }
                </tr>
                @if(Model.ApproveStatusId == "1") {
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.ChangeStatus)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.ChangeStatus)
                        </p>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.CompletionDate)
                        </p>
                    </td>
                    <td class="col">
                        @if (Model.CompletionDate != null && Model.CompletionDate > Convert.ToDateTime("01/01/0001"))
                        {
                            <p class="bg-dark py-1 px-2 rounded">

                                @Model.CompletionDate.ToString("dd/MM/yyyy")
                            </p>
                        }
                    </td>
                </tr>
                }
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.DetailsOfChange)
                        </p>
                    </td>
                    <td class="col bg-dark" colspan="3">

                        <textarea name="editor-readonly" id="editor-readonly" rows="3" cols="3" disabled>
                            @Html.Raw(HttpUtility.HtmlDecode(Model.DetailsOfChange))
                        </textarea>

                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">

                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.ResonForChange)
                        </p>

                    </td>
                    <td class="col bg-dark" colspan="3">

                        <textarea name="editor-readonly2" id="editor-readonly2" rows="3" cols="3" disabled>
                            @Html.Raw(HttpUtility.HtmlDecode(Model.ResonForChange))

                      </textarea>



                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <span class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.Impact)
                        </span>

                    </td>
                    <td class="col bg-dark" colspan="3">

                        <textarea name="editor-readonly3" id="editor-readonly3" rows="3" cols="3" disabled>
                        @Html.Raw(HttpUtility.HtmlDecode(Model.Impact))

                        </textarea>
                    </td>

                </tr>


            </table>

            <br />
            @if (dsActionDetails != null && dsActionDetails.Tables.Count > 0 && dsActionDetails.Tables[0].Rows.Count > 0)
            {
                <h2 class="bg-dark pl-sm-2">  Actions taken to mitigate the impact on consequences</h2>
                <div class="table-responsive">
                    <table class="table table-bordered table-striped table-hover datatable-responsive" id="table1">


                        <thead>
                            <tr class="bg-brown">
                                <th>Action</th>
                                <th>Target Date</th>
                                <th>Completion Date</th>
                                <th>Person Responsible</th>
                                <th>Action Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < dsActionDetails.Tables[0].Rows.Count; i++)
                            {
                                <tr>
                                    <td>
                                        @dsActionDetails.Tables[0].Rows[i]["Action"].ToString()
                                    </td>
                                    <td>
                                        @Convert.ToDateTime(dsActionDetails.Tables[0].Rows[i]["TargetDate"].ToString()).ToString("dd/MM/yyyy")
                                    </td>
                                    <td>
                                        @if (dsActionDetails.Tables[0].Rows[i]["ActionCompletionDate"].ToString() != "" && dsActionDetails.Tables[0].Rows[i]["ActionCompletionDate"].ToString() != null)
                                        {
                                            @Convert.ToDateTime(dsActionDetails.Tables[0].Rows[i]["ActionCompletionDate"].ToString()).ToString("dd/MM/yyyy")
                                        }
                                    </td>
                                    <td>
                                        @obj.GetEmpHrNameById(dsActionDetails.Tables[0].Rows[i]["PersonResponsible"].ToString())
                                    </td>
                                    <td>
                                        @dsActionDetails.Tables[0].Rows[i]["Action_Status"].ToString()
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
            }

        </div>
        </div>
    </div>
            @section Scripts {
                <script type="text/javascript">
                    //----zzz


     $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
    });

    //zzz----

  
                    // Setup
                    var editorReadOnly = CKEDITOR.replace('editor-readonly', {
                        height: 300,
                        removePlugins: 'toolbar',
                   
                    });

                    // Setup
                    var editorReadOnly = CKEDITOR.replace('editor-readonly2', {
                        height: 300,
                        removePlugins: 'toolbar',

                    });


                    // Setup
                    var editorReadOnly = CKEDITOR.replace('editor-readonly3', {
                        height: 300,
                        removePlugins: 'toolbar',

                    });


                    var table1 = function () {


                        //
                        // Setup module components
                        //

                        // Basic Datatable examples
                        var _componentDatatableBasic = function () {
                            if (!$().DataTable) {
                                console.warn('Warning - datatables.min.js is not loaded.');
                                return;
                            }

                            //Setting datatable defaults
                            $.extend($.fn.dataTable.defaults, {
                                autoWidth: false,
                                responsive: true,


                                colReorder: false,
                                dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                                //dom: 'lBfrtip',
                                language: {
                                    search: '<span>Filter:</span> _INPUT_',
                                    searchPlaceholder: 'Type to filter...',
                                    lengthMenu: '<span>Show:</span> _MENU_',
                                    paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                                }
                            });

                         var myClass = "";
                var Delclass= @(obj.GetCurrentUserSession().ChangeMgmt.Contains("4") ? "true" : "false");
                if (Delclass == false) { myClass = 'hidden'  };
                            var table = $('#table1').DataTable({

                                lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                                colReorder: {
                                    fixedColumnsLeft: 1
                                },
                                stateSave: true,
                                stateSaveParams: function (settings, data) {
                                    for (var i = 0, ien = data.columns.length; i < ien; i++) {
                                        delete data.columns[i].visible;
                                        delete data.columns[i].search;
                                    }
                                },

                                scrollY: '350px',
                                scrollCollapse: true,


                                keys: {
                                    className: 'focus focus-success'
                                },

                                buttons: {
                                    buttons: [
                                        {
                                            extend: 'copyHtml5',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'Change Management Details',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },
                                        },
                                        {
                                            extend: 'excelHtml5',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'Change Management Details',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },

                                        },
                                        {
                                            extend: 'pdfHtml5',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'Change Management Details',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },
                                        },
                                        {
                                            extend: 'csvHtml5',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'Change Management Details',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },
                                        },
                                        {
                                            extend: 'print',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'Change Management Details',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },
                                        },

                                        {
                                            extend: 'colvis',
                                            text: '<i class="icon-three-bars"></i>',
                                            className: 'btn bg-blue btn-icon dropdown-toggle',
                                            columns: ':visible:not(.not-export-column)'
                                        }
                                    ]
                                }




                            });
                            // Adjust columns on window resize
                            setTimeout(function () {
                                $(window).on('resize', function () {
                                    table.columns.adjust();
                                });
                            }, 100);


                            //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                            $('.sidebar-control').on('click', function () {

                                setTimeout(function () {
                                    //alert("gii");

                                    table.columns.adjust().draw();
                                    $("#table1").resize();
                                }, 100);

                            });
                            //}

                            $('#table1').on('page.dt', function () {
                                //table.draw();
                                //alert("zzz1");
                                $("#table1").resize();

                            });

                            $('#table1').on('column-visibility.dt', function () {
                                //table.draw();
                                //alert("zzz2");
                                $("#table1").resize();

                            });

                            $('#table1').on('order.dt', function () {
                                //table.draw();
                                //alert("zzz3");
                                $("#table1").resize();

                            });


                            $('#table1').on('responsive-display.dt', function () {
                                //table.draw();
                                //alert("zzz4");
                                $("#table1").resize();

                            });


                            $('#table1').on('responsive-resize.dt', function () {
                                //table.draw();
                                //alert("zzz4");
                                $("#table1").resize();

                            });






                        };






                        // Select2 for length menu styling
                        var _componentSelect2 = function () {
                            if (!$().select2) {
                                console.warn('Warning - select2.min.js is not loaded.');
                                return;
                            }

                            // Initialize
                            $('.dataTables_length select').select2({
                                minimumResultsForSearch: Infinity,
                                dropdownAutoWidth: true,
                                width: 'auto'
                            });
                        };


                        //
                        // Return objects assigned to module
                        //

                        return {
                            init: function () {
                                _componentDatatableBasic();
                                _componentSelect2();
                            }
                        }
                    }();


                    // Initialize module
                    // ------------------------------

                    document.addEventListener('DOMContentLoaded', function () {
                        table1.init();
                    });


                </script>
              
            }
