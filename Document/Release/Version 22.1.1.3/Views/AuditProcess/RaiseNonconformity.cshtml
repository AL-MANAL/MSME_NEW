@model ISOStd.Models.AuditProcessModels
@{
    ViewBag.Title = "";
}
@section featured {
    <div class="page-header page-header-light">
        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>
        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">
                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("RaiseNCList", "AuditProcess", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Raise Audit Nonconformity</span>
                    </a>
                    <span class="breadcrumb-item active">Raise NC(Audit Nonconformity)</span>
                </div>
            </div>
        </div>
    </div>
}
@using (Html.BeginForm("RaiseNonconformity", "AuditProcess", FormMethod.Post,
            new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Raise NC(Audit Nonconformity)</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">
                <input type="hidden" id="Plan_Id" name="Plan_Id" value="@Model.Plan_Id" />
                <input type="hidden" id="Audit_Id" name="Audit_Id" value="@Model.Audit_Id" />
                <input type="hidden" id="Audit_no" name="Audit_no" value="@Model.Audit_no" />
                <table class="table table-lg">
                    <tr class="row">
                        <td class="col-xs-3 col-md-2" >
                            @Html.DisplayNameFor(model => model.Audit_no)
                        </td>
                        <td class="col">
                            <p class="bg-grey-300 py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Audit_no)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-2" >
                            Audit Date
                        </td>
                        <td class="col">
                            <p class="bg-grey-300 py-1 px-2 rounded">
                                @if (Model.AuditDate != null && Model.AuditDate > Convert.ToDateTime("01/01/0001"))
                                {
                                @Html.Label(Model.AuditDate.ToString("dd/MM/yyyy"))
                                }
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2" >
                            @Html.DisplayNameFor(model => model.auditee_team)
                        </td>
                        <td class="col">
                            <p class="bg-grey-300 py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.auditee_team)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-2" >
                            @Html.DisplayNameFor(model => model.branch)
                        </td>
                        <td class="col">
                            <p class="bg-grey-300 py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.branch)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">

                        <td class="col-xs-3 col-md-2" >
                            @Html.DisplayNameFor(model => model.group_name)
                        </td>
                        <td class="col">
                            <p class="bg-grey-300 py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.group_name)
                            </p>
                        </td>
                        @*<td class="col-xs-3 col-md-2" >
                            @Html.DisplayNameFor(model => model.team)
                        </td>
                        <td class="col">
                            <p class="bg-grey-300 py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.team)
                            </p>
                        </td>*@
                    </tr>
                </table>
                <table class="table table-lg">
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.nc_date)<text style="color: red;">*</text>
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-4">
                            <div class="editor-field">
                                <input class="form-control" type='date' id='nc_date' name="nc_date" required />
                            </div>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            @Html.LabelFor(model => model.finding_details)<text style="color: red;">*</text>
                        </td>
                        <td class="col">
                            <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="finding_details" name="finding_details" required></textarea>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.upload)
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-4">
                            <div class="editor-field">
                                <input type="file" name="upload" id="upload" onchange="FileFormatValidation(this)" multiple accept=".pdf,.xlsx,.xls,.doc,.docx,.image/*,.png,.jpeg,.jpg" @*class="bootstrap-uploader" data-fouc*@  />
                                <p style="font-size: 11px; margin: 0px;">(Hold Ctrl Key in case of multiple files)</p>
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            @Html.LabelFor(model => model.finding_category)<text style="color: red;">*</text>
                        </td>
                        <td class="col">
                            <select class="form-control select-search select2-hidden-accessible" data-fouc id="finding_category" name="finding_category" required>
                                <option value='' hidden>Select</option>
                                @if (ViewBag.Category != null)
                                {
                                    foreach (var item in ViewBag.Category)
                                    {
                                <option value='@item.Value'>@item.Text</option>
                                    }
                                }
                            </select>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            @Html.DisplayNameFor(model => model.Audit_criteria)<text style="color:red;">*</text>
                        </td>
                        <td class="col">
                            <select class="form-control select-fixed-multiple" multiple="multiple" data-fouc id="Audit_criteria" name="Audit_criteria" required onchange="GetISOClauses()">
                                @if (ViewBag.ISOStds != null)
                                {
                                    foreach (var item in ViewBag.ISOStds)
                                    {
                                        <option value='@item.Value'>@item.Text</option>
                                    }
                                }
                            </select>
                          
                        </td>
                        <td class="col-xs-3 col-md-2">
                            @Html.DisplayNameFor(model => model.audit_clause)<text style="color:red;">*</text>
                        </td>
                        <td class="col">
                            <select class="form-control select-fixed-multiple" multiple="multiple" data-fouc id="audit_clause" name="audit_clause" required></select>
                           
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            @Html.LabelFor(model => model.description)<text style="color: red;">*</text>
                        </td>
                        <td class="col-xs-3 col-md-4">
                            <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="description" name="description" required></textarea>
                        </td>
                    </tr>
                </table>

            </div>
            <div class="card-footer bg-white d-flex justify-content-between align-items-center">
                @Html.ActionLink("Back to List", "RaiseNCList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })
                <button type="submit" id="btnCreate" value="Save" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Report NC</button>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script type="text/javascript">
        //----zzz


        $(document).ready(function () {

            @if (TempData["alertdata"] != null)
    {

        @: new Noty({
                                                        @:     text: '@TempData["alertdata"]',
                                                        @:     type: 'error'
                                                        @:}).show();

                            }

            @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
                                                        @:       text: '@TempData["Successdata"]',
                                                        @:       type: 'success'
                                                        @:}).show();

                            }
        });

        function FileFormatValidation(file) {
            var ext = file.value.split(".").pop().toLowerCase();
            if ($.inArray(ext, ["doc", "pdf", "docx", "xls", "xlsx", , "png", "jpg", "jpeg"]) == -1) {
                file.value = "";
                jAlert("Invalid file format, please upload only doc, pdf, docx, xls, xlsx, png, jpeg, jpg format");
            }
        }

        function GetISOClauses() {
            $("#Audit_criteria").on('select2:select', function (e) {
                e.stopImmediatePropagation();
                sStd = e.params.data.id;
                jQuery.ajax({
                    url: '@Url.Action("FunISOClauseList", "MgmtDocuments")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'ISOStdId': sStd },
                    success: function (result) {
                        if (result != null && result.length > 0) {
                            $.each(result, function (index, item) {
                                $("#audit_clause").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                                $("#audit_clause").trigger('change');
                            });
                            return;
                        }
                        else {
                            bootbox.alert({
                                title: 'ISOClause List',
                                message: 'No Clauses exists.'
                            });
                            return;
                        }
                    }
                });
            });

            var array = new Array();
            $("#Audit_criteria").on('select2:unselect', function (e) {
                e.stopImmediatePropagation();
                sStd = e.params.data.id;
                jQuery.ajax({
                    url: '@Url.Action("FunISOClauseList", "MgmtDocuments")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'ISOStdId': sStd },
                    success: function (result) {
                        if (result != null && result.length > 0) {
                            $.each(result, function (index, item) {
                                array[index] = item.Value;
                                $("#audit_clause option[value='" + array[index] + "']").remove();
                                $("#audit_clause").trigger('change');
                            });
                            return;
                        }
                    }
                });
            });
        }
    </script>

}