@model ISOStd.Models.CertificationBodyModels

@{
    ViewBag.Title = "CertificationBodyEdit";
}

<div class="groupedassets margin10">
        <span class="groupedassetshead margin10 onestphdcolor">Edit Certification Body </span>
    </div>
<div id="divmsg">
    @if (TempData["alertdata"] != null)
    {
        <span class="errMsg" style="color: red;font-weight: bold;">@TempData["alertdata"]</span>
        }
    @if (TempData["Successdata"] != null)
    {
        <span class="errMsg" style="color: green; font-weight: bold;">@TempData["Successdata"]</span>
        }
</div>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>CertificationBodyModels</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.CertID):  @Html.DisplayFor(model => model.CertID)
        </div>
        <table id="tabcontent">
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.CertName):  @Html.DisplayFor(model => model.CertName)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Location)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Location)
                        @Html.ValidationMessageFor(model => model.Location)
                    </div>
                </td>
            </tr>
            <tr>

                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.address)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.address)
                        @Html.ValidationMessageFor(model => model.address)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.emailaddress)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.emailaddress)
                        @Html.ValidationMessageFor(model => model.emailaddress)
                    </div>
                </td>
            </tr>
            <tr>

                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.contact_name)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.contact_name)
                        @Html.ValidationMessageFor(model => model.contact_name)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.PhoneNumber)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.PhoneNumber)
                        @Html.ValidationMessageFor(model => model.PhoneNumber)
                    </div>
                </td>
            </tr>
            <tr>

                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.FaxNumber)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.FaxNumber)
                        @Html.ValidationMessageFor(model => model.FaxNumber)
                    </div>
                </td>
            </tr>
        </table>  
    </fieldset>
    <div style="width: 100%; text-align: center;">
        @Html.ActionLink("Back to List", "CertificationBodylist","ExternalAudit", new {@class = "ActionLink", onclick="HyperLinkProgressIconFunction()"})
        <input type="submit" value="Update" />
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
