@model ISOStd.Models.EmployeeDependentModels

@{
    ViewBag.Title = "";
}

@section featured {

    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Home</span>
                    </a>
                    <a href="@Url.Action("EmployeeList", "EmployeeDetails", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Employee Management</span>
                    </a>
                    <span class="breadcrumb-item active">Update Employee Dependents Details</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">

                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>
                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}


@using (Html.BeginForm("EmployeeDependentsEdit", "EmployeeDetails", FormMethod.Post,
                     new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
       <input type="hidden" id="id_hr_emp_dependents" name="id_hr_emp_dependents" value="@Model.id_hr_emp_dependents"/>
    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Employee Dependents Edit</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">
                <table class="table table-lg">

                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.FirstName)<text style="color: red;">*</text>
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                <input class="form-control" type="text" id="FirstName" name="FirstName" value="@Model.FirstName" required />
                                @Html.ValidationMessageFor(model => model.FirstName)
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.LastName)
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                <input class="form-control" type="text" id="LastName" name="LastName" value="@Model.LastName" />

                            </div>
                        </td>

                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.DOB)
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                @if (Model.DOB != null && Model.DOB > Convert.ToDateTime("01/01/0001"))
                                {
                                    <input class="form-control" type="date" id="DOB" name="DOB" value="@Model.DOB.ToString("yyyy-MM-dd")" />
                                }
                                else
                                {
                                    <input class="form-control" type="date" id="DOB" name="DOB" />
                                }
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.Gender)<text style="color: red;">*</text>
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="Gender" name="Gender" required>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.Gender != null)
                                    {
                                        foreach (var item in ViewBag.Gender)
                                        {
                                            if (item == Model.Gender)
                                            {
                                                <option value='@item' selected>@item</option>
                                            }
                                            else
                                            {
                                                <option value='@item'>@item</option>
                                            }
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(model => model.Gender)
                            </div>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.Relationship)<text style="color: red;">*</text>
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <div class="editor-field">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="Relationship" name="Relationship">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.EmpRel != null)
                                    {
                                        foreach (var item in ViewBag.EmpRel)
                                        {
                                            if (item.Text == Model.Relationship)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(model => model.Relationship)
                            </div>
                        </td>

                    </tr>
                    @*<tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.PassportNo)
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                <input class="form-control" type="text" id="PassportNo" name="PassportNo" value="@Model.PassportNo" />
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.PassportExpDate)
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                @if (Model.PassportExpDate != null && Model.PassportExpDate > Convert.ToDateTime("01/01/0001"))
                                {
                                    <input class="form-control" type="date" id="PassportExpDate" name="PassportExpDate" value="@Model.PassportExpDate.ToString("yyyy-MM-dd")" />
                                }
                                else
                                {
                                    <input class="form-control" type="date" id="PassportExpDate" name="PassportExpDate" />
                                }
                            </div>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.VisaNo)
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                <input class="form-control" type="text" id="VisaNo" name="VisaNo" value="@Model.VisaNo" />
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.VisaExpDate)
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                @if (Model.VisaExpDate != null && Model.VisaExpDate > Convert.ToDateTime("01/01/0001"))
                                {
                                    <input class="form-control" type="date" id="VisaExpDate" name="VisaExpDate" value="@Model.VisaExpDate.ToString("yyyy-MM-dd")" />
                                }
                                else
                                {
                                    <input class="form-control" type="date" id="VisaExpDate" name="VisaExpDate" />
                                }
                            </div>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.EIDNo)
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                <input class="form-control" type="text" id="EIDNo" name="EIDNo" value="@Model.EIDNo" />
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.EIDExpDate)
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                @if (Model.EIDExpDate != null && Model.EIDExpDate > Convert.ToDateTime("01/01/0001"))
                                {
                                    <input class="form-control" type="date" id="EIDExpDate" name="EIDExpDate" value="@Model.EIDExpDate.ToString("yyyy-MM-dd")" />
                                }
                                else
                                {
                                    <input class="form-control" type="date" id="EIDExpDate" name="EIDExpDate" />
                                }
                            </div>
                        </td>

                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.HealthInsProvider)
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                <input class="form-control" type="text" id="HealthInsProvider" name="HealthInsProvider" value="@Model.HealthInsProvider" />
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.HealthInsExp)
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                @if (Model.HealthInsExp != null && Model.HealthInsExp > Convert.ToDateTime("01/01/0001"))
                                {
                                    <input class="form-control" type="date" id="HealthInsExp" name="HealthInsExp" value="@Model.HealthInsExp.ToString("yyyy-MM-dd")" />
                                }
                                else
                                {
                                    <input class="form-control" type="date" id="HealthInsExp" name="HealthInsExp" />
                                }
                            </div>
                        </td>
                    </tr>*@
                </table>
  	    </div>
        </div>
        <div class="card-footer bg-white d-flex justify-content-between align-items-center">
            @Html.ActionLink("Back to List", "EmployeeList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })

            <button type="submit" id="btnCreate" value="Save" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Add</button>
        </div>
    </div>

       
        }
@section Scripts {
    <script>
        function FileFormatValidation(file) {
            var ext = file.value.split(".").pop().toLowerCase();
            if ($.inArray(ext, ["doc", "pdf", "docx", "jpg", "jpeg", "gif", "png"]) == -1) {
                file.value = "";
                jAlert("Invalid file format, please upload only doc, pdf, docx, jpg, jpeg, gif, png format");
            }
        }
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}