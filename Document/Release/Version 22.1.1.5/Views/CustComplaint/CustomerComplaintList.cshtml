@using PagedList;
@using PagedList.Mvc;

@model List<ISOStd.Models.CustComplaintModels>

@{
    ViewBag.Title = "";
    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
   
    var user = Obj.GetCurrentUserSession().empid;
}
               @{

                   var ShowEdit = Obj.GetCurrentUserSession().Complaints.Contains("3") ? true : false;
                   var ShowDownld = Obj.GetCurrentUserSession().Complaints.Contains("4") ? true : false;
                   var ShowDel = Obj.GetCurrentUserSession().Complaints.Contains("5") ? true : false;

               }
@section featured {
    <div class="page-header page-header-light">
        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4><span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>
        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">
                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Home</span>
                    </a>
                    <span class="breadcrumb-item active">Customer Complaints</span>
                </div>
                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i>All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}

    <style>
        .hidden {
            display: none !important;
        }
    </style>

    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Customer Complaints</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>
                </div>
            </div>
        </div>
        @if (Obj.GetCurrentUserSession().Complaints.Contains("3"))
        {
            <div>
                <div class="card-header bg-white header-elements-sm-inline">
                    <div class="header-elements">
                        <a class="btn btn-outline bg-orange text-orange border-orange btn-ladda btn-ladda-progress ladda-button" data-style="radius" href='@Url.Action("AddCustomerComplaint", "CustComplaint")' title="Add New">
                            <span class="ladda-label">Register Customer Complaint</span>
                            <span class="ladda-spinner"></span>
                        </a>
                    </div>
                </div>
            </div>
        }

        <div class="card-body">
            <div class="options d-flex flex-fill">
                @using (Html.BeginForm("CustomerComplaintList", "CustComplaint", FormMethod.Post, new { id = "form1", name = "form1", style = "width:25%" }))
                {
                    if (ViewBag.Branch != null)
                    {
                        <select class="form-control select-search select2-hidden-accessible" data-fouc id="branch_name" name="branch_name" onchange="getDetails()">
                            <option value='' hidden>Division</option>
                            @if (ViewBag.Branch != null)
                            {
                                foreach (var item in ViewBag.Branch)
                                {
                                    if (item.Value == ViewBag.Branch_name)
                                    {
                                        <option value='@item.Value' selected>@item.Text</option>
                                    }
                                    else
                                    {
                                        <option value='@item.Value'>@item.Text</option>
                                    }
                                }
                            }
                        </select>
                    }
                }
            </div>
        </div>
        <div class="card-body">
            <table class="table table-bordered table-striped table-hover datatable-responsive" id="customer">
                <thead>
                    <tr>
                        <th class="not-export-column">Action</th>
                        @*<th class="not-export-column">Sl No</th>*@
                        <th>
                            @Html.DisplayNameFor(model => model.First().ComplaintNo)
                        </th>
                        @*<th>
                            @Html.DisplayNameFor(model => model.First().CustomerRef)
                        </th>*@

                        <th>
                            @Html.DisplayNameFor(model => model.First().CustomerName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().ReportedBy)
                        </th>
                        @*<th>
                            @Html.DisplayNameFor(model => model.First().Details)
                        </th>*@
                        <th>
                            @Html.DisplayNameFor(model => model.First().ReceivedDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().ComplaintStatus)
                        </th>
                        <th data-priority="2" class="text-center not-export-column">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Count() > 0)
                    {
                        int i = 0;
                        foreach (var item in Model)
                        {
                            i = i + 1;
                    <tr>
                        <td>
                            <img class="plus" id="plus" src="~/Images/plus.png" style="width: 2em;" data_rel = "popover" />
                            <div style="display:none">
                                <table>
                                    <thead class="bg-blue">
                                        <tr>
                                            <th>Sl. No.</th>
                                            <th>Complaint Assigned To</th>
                                            <th>Target Date</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>

                                        @if (item.CustList.Count > 0)
                                        {
                                            int j = 0;
                                            foreach (var order in item.CustList)
                                            {
                                                j = j + 1;
                                                var flag1 = "0";
                                                var flag2 = "0";
                                                <tr>
                                                    <td>@j.ToString()</td>
                                                    <td>@Html.DisplayFor(modelItem => order.ForwarderAssign)</td>
                                                    <td>
                                                        @if (order.TargetDate != null && order.TargetDate > Convert.ToDateTime("01/01/0001"))
                                                        {
                                                            @Html.Label(order.TargetDate.ToString("dd/MM/yyyy"))
                                                        }
                                                    </td>
                                                    <td class="text-center">
                                                        <div class="list-icons">
                                                            <div class="list-icons-item dropdown">
                                                                <a href="#" class="list-icons-item caret-0 dropdown-toggle" data-toggle="dropdown">
                                                                    <i class="icon-gear mr-2"></i>
                                                                </a>
                                                                <div class="dropdown-menu dropdown-menu-right">
                                                                    @*@if (ShowEdit)
                                                                    {*@
                                                                        @if ((order.ForwarderAssignId != "" && order.ForwarderAssignId == user))
                                                                        {
                                                                            <a class="dropdown-item" href='@Url.Action("CustomerComplaintView", "CustComplaint", new { id_custcomplaint_nc = order.id_custcomplaint_nc.ToString(), id_complaint = item.id_complaint.ToString() })' title="View Complaint" onclick="HyperLinkProgressIconFunction()">
                                                                                <i class="icon-history"></i>View Complaint
                                                                            </a>
                                                                            <a class="dropdown-item" href='@Url.Action("AddDisposition", "CustComplaint", new { id_custcomplaint_nc = order.id_custcomplaint_nc.ToString(), id_complaint = item.id_complaint.ToString() })' title="Immediate Actions(Disposition)" onclick="HyperLinkProgressIconFunction()">
                                                                                <i class="icon-history"></i>Immediate Actions
                                                                            </a>
                                                                            @*<a class="dropdown-item" href='@Url.Action("AddTeam", "CustComplaint", new { id_custcomplaint_nc = order.id_custcomplaint_nc.ToString(), id_complaint = item.id_complaint.ToString() })' title="Team formation" onclick="HyperLinkProgressIconFunction()">
                                                                                <i class="icon-history"></i>Team formation
                                                                            </a>*@
                                                                            <a class="dropdown-item" href='@Url.Action("AddRCA", "CustComplaint", new { id_custcomplaint_nc = order.id_custcomplaint_nc.ToString(), id_complaint = item.id_complaint.ToString() })' title="Root Cause Analysis" onclick="HyperLinkProgressIconFunction()">
                                                                                <i class="icon-history"></i>Root Cause Analysis
                                                                            </a>
                                                                            if (order.rca_action == "Yes")
                                                                            {
                                                                            <a class="dropdown-item" href='@Url.Action("AddCA", "CustComplaint", new { id_custcomplaint_nc = order.id_custcomplaint_nc.ToString(), id_complaint = item.id_complaint.ToString() })' title="Corrective Action" onclick="HyperLinkProgressIconFunction()">
                                                                                <i class="icon-history"></i>Corrective Action
                                                                            </a>
                                                                            }
                                                                            
                                                                            <a class="dropdown-item" href='@Url.Action("NCDetails", "CustComplaint", new { id_custcomplaint_nc = order.id_custcomplaint_nc.ToString(),id_complaint = item.id_complaint.ToString() })' title="Complaint Details" onclick="HyperLinkProgressIconFunction()">
                                                                                <i class="icon-history"></i>Complaint Details
                                                                            </a>
                                                                           
                                                                            using (Html.BeginForm("NCPDF", "CustComplaint", FormMethod.Post, new { id = "form22", name = "form22" }))
                                                                            {
                                                                                @Html.AntiForgeryToken()
                                                                                <input type="hidden" id="id_custcomplaint_nc" name="id_custcomplaint_nc" value="@order.id_custcomplaint_nc" />
                                                                                <input type="hidden" id="id_complaint" name="id_complaint" value="@item.id_complaint" />
                                                                                <button class="dropdown-item">
                                                                                    <i class="icon-printer2"></i>Complaint Report
                                                                                </button>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            flag1 = "1";
                                                                        }
                                                                    @if (order.ca_verfiry_duedate.ToString() != "" && order.ca_verfiry_duedate > Convert.ToDateTime("01/01/0001") && order.ca_proposed_by == user)
                                                                    {
                                                                    <a class="dropdown-item" href='@Url.Action("AddVerification", "CustComplaint", new { id_custcomplaint_nc = order.id_custcomplaint_nc.ToString(), id_complaint = item.id_complaint.ToString() })' title="Verification" onclick="HyperLinkProgressIconFunction()">
                                                                        <i class="icon-history"></i>Verification
                                                                    </a>
                                                                    }
                                                                    else
                                                                    {
                                                                        flag2 = "1";
                                                                    }
                                                                    @if(flag1 == "1" && flag2 == "1")
                                                                    {
                                                                        <a>Access Denied</a>
                                                                    }


                                                                    @*}*@

                                                                </div>
                                                            </div>
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                        else
                                        {
                                            <tr>
                                                <td colspan="4">
                                                    <div style="text-align: center;">
                                                        <h4 style="color: grey;">No data exists</h4>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </td>
                        <td>
                            @Html.ActionLink(item.ComplaintNo.ToString(), "CustomerComplaintDetails", new { id_complaint = item.id_complaint.ToString() }, new { data_toggle = "popover", data_trigger = "hover", id = item.id_complaint, onclick = "HyperLinkProgressIconFunction()" })
                            @*@Html.DisplayFor(modelItem => item.ComplaintNo)*@
                        </td>
                        @*<td>
                            @Html.DisplayFor(modelItem => item.CustomerRef)
                        </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.CustomerName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ReportedBy)
                            <br />
                            @Html.DisplayFor(modelItem => item.reportedby_email)
                        </td>
                        @*<td>
                             @Html.Raw(HttpUtility.HtmlDecode(item.Details))
                        </td>*@
                        <td>
                            @if (item.ReceivedDate != null && item.ReceivedDate > Convert.ToDateTime("01/01/0001"))
                            {
                                @Html.Label(item.ReceivedDate.ToString("dd/MM/yyyy"))
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ComplaintStatus)
                        </td>
                        <td class="text-center">
                            <div class="list-icons">
                                <div class="list-icons-item dropdown">
                                    <a href="#" class="list-icons-item caret-0 dropdown-toggle" data-toggle="dropdown">
                                        <i class="icon-gear mr-2"></i>
                                    </a>
                                    <div class="dropdown-menu dropdown-menu-right">
                                        @*@if (ShowEdit)
                                        {*@
                                            @if (user == item.LoggedBy)
                                            {
                                                <a class="dropdown-item" href='@Url.Action("CustomerComplaintResponse", "CustComplaint", new { id_complaint = item.id_complaint.ToString() })' title="Add" onclick="HyperLinkProgressIconFunction()">
                                                    <i class="icon-add"></i>Customer Complaint Response
                                                </a>
                                                if (item.ForwarderAssign == "" && ShowEdit)
                                                {
                                                    <a class="dropdown-item" href='@Url.Action("CustomerComplaintEdit", "CustComplaint", new { id_complaint = item.id_complaint })' title="Edit" onclick="HyperLinkProgressIconFunction()">
                                                        <i class="icon-pencil7"></i>Edit
                                                    </a>
                                                }
                                            }
                                            @if (item.ForwarderAssign == "" && user == item.ForwardToId)
                                            {
                                                <a class="dropdown-item" href='@Url.Action("AssignCustomerComplaint", "CustComplaint", new { id_complaint = item.id_complaint.ToString() })' title="Add" onclick="HyperLinkProgressIconFunction()">
                                                    <i class="icon-add"></i>Review & Assign Complaint
                                                </a>
                                            }
                                        @*}*@

                                        @*<div class="dropdown-divider"></div>*@
                                    <a class="dropdown-item" href='@Url.Action("CustomerComplaintReport", "CustComplaint", new { id_complaint = item.id_complaint })' title="PDF Report">
                                        <i class="icon-printer2"></i>Generate Report
                                    </a>
                                        @*@using (Html.BeginForm("CustomerComplaintReport", "CustComplaint", FormMethod.Post, new { id = "form22", name = "form22" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" id="id_complaint" name="id_complaint" value="@item.id_complaint" />
                                            <button class="dropdown-item">
                                                <i class="icon-printer2"></i> Report
                                            </button>
                                        }*@
                                        @if (ShowDel)
                                        {
                                            <span class="dropdown-item text-center" title="Delete" onclick="DeleteItems(@item.id_complaint)" style="cursor:pointer;"><i class="icon-bin"></i>Delete</span>
                                        }

                                    </div>
                                </div>
                            </div>
                        </td>

                    </tr>
                        }
                    }

                </tbody>
            </table>
        </div>

    </div>


@section scripts {
    <script type="text/javascript">
        //----zzz
        $(document).ready(function () {

        @if (TempData["alertdata"] != null)
        {

           @: new Noty({
                                                           @:     text: '@TempData["alertdata"]',
                                                           @:     type: 'error'
                                                           @: }).show();
                                                                            }

        @if (@TempData["Successdata"] != null)
        {

        @:    new Noty({
                                                         @:       text: '@TempData["Successdata"]',
                                                         @:       type: 'success'
                     @:}).show();
        }
    });
    //zzz----


    function setData(id) {

        var set_data = '';
        var element = $(this);
        var id = element.attr("id");
        $.ajax({
            url: '@Url.Action("CustomerComplaintInfo", "CustComplaint")',
                methos: "post",
                async: false,
                data: { id: id },
                success: function (data) {
                    set_data = data;
                }
            });
            return set_data;
        }

         function setData1() {
             var currentRow = $(this).closest("tr"); 
            // var col1 = currentRow.find("td:eq(0)").text(); // get current row 1st TD value
             var col2 = currentRow.find("td:eq(1)").text();
            // var col3 = currentRow.find("td:eq(2)").text(); // get current row 3rd TD
          //   alert(col2);
             if (col2.includes("No data exists")) {
                 return "Complaint is not assigned";
             }
             else {
                 return "Complaint is assigned";
             }
             
        }
        var customer = function () {

             @*var ShowEdit = @(Obj.GetCurrentUserSession().Complaints.Contains("3") ? "true" : "false");
                 var ShowDel = @(Obj.GetCurrentUserSession().Complaints.Contains("5") ? "true" : "false");*@

            // Basic Datatable examples
            var _componentDatatableBasic = function () {
                if (!$().DataTable) {
                    console.warn('Warning - datatables.min.js is not loaded.');
                    return;
                }

                //Setting datatable defaults
                $.extend($.fn.dataTable.defaults, {
                    autoWidth: false,
                    responsive: true,
                    columnDefs: [{
                        orderable: false,
                        //width: 100,
                        targets: 'not-export-column'
                 
                    }],
                    responsivePriority: 2, targets: -1,
                    colReorder: false,
                    dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                    //dom: 'lBfrtip',
                    language: {
                        search: '<span>Filter:</span> _INPUT_',
                        searchPlaceholder: 'Type to filter...',
                        lengthMenu: '<span>Show:</span> _MENU_',
                        paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                    }
                });

          var myClass = "";
                var Delclass= @(Obj.GetCurrentUserSession().Complaints.Contains("4") ? "true" : "false");
                if (Delclass == false) { myClass = 'hidden'  };

                var table = $('#customer').DataTable({
                    drawCallback: function () {
                        $('[data-toggle="popover"]').popover({

                            html: true,
                            content: setData,
                            container: 'body'
                            //data: setData,


                        });
                        $('[data_rel=popover]').popover({
                            html: true,
                            trigger: "hover",
                            content: setData1,
                        });                        

                        var dropdownMenu;

                        // and when you show it, move it to the body                                     
                        $('.datatable-responsive').on('show.bs.dropdown', function (e) {
                        
                            // grab the menu        
                            dropdownMenu = $(e.target).find('.dropdown-menu');

                            // detach it and append it to the body
                            $('body').append(dropdownMenu.detach());

                            // grab the new offset position
                            var eOffset = $(e.target).offset();

                            // make sure to place it where it would normally go (this could be improved)
                            dropdownMenu.css({
                                'display': 'block',
                                'top': eOffset.top + $(e.target).outerHeight(),
                                'left': eOffset.left
                            });
                        });
                                
                        // and when you hide it, reattach the drop down, and hide it normally                                                   
                        $('.datatable-responsive').on('hide.bs.dropdown', function (e) {
                            $(e.target).append(dropdownMenu.detach());
                            dropdownMenu.hide();
                        });
                    },
                    lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                    colReorder: {
                        fixedColumnsLeft: 1
                    },
                    stateSave: true,
                    //stateSaveParams: function (settings, data) {
                    //    for (var i = 0, ien = data.columns.length; i < ien; i++) {
                    //        delete data.columns[i].visible;
                    //        delete data.columns[i].search;
                    //    }
                    //},
                    //scrollY: '350px',
                    scrollCollapse: true,
                   

                    keys: {
                        className: 'focus focus-success'
                    },

                    buttons: {
                        buttons: [
                            {
                                extend: 'copyHtml5',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'customer complaint Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },
                            {
                                extend: 'excelHtml5',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'customer complaint Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },

                            },
                            {
                                extend: 'pdfHtml5',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'customer complaint Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },
                            {
                                extend: 'csvHtml5',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'customer complaint Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },
                            {
                                extend: 'print',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'customer complaint Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },

                            {
                                extend: 'colvis',
                                text: '<i class="icon-three-bars"></i>',
                                className: 'btn bg-blue btn-icon dropdown-toggle',
                                columns: ':visible:not(.not-export-column)'
                            }
                        ]
                    }
                });
                // Adjust columns on window resize
                setTimeout(function () {
                    $(window).on('resize', function () {
                        table.columns.adjust();
                    });
                }, 100);


                //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                $('.sidebar-control').on('click', function () {

                    setTimeout(function () {
                        //alert("gii");

                        table.columns.adjust().draw();
                        $("#customer").resize();
                    }, 100);

                    $(".plus").each(function () {
                        $(this).attr("src", "../Images/add.png");
                    });

                });
                //}

                $('#customer').on('page.dt', function () {
                    //table.draw();
                    //alert("zzz1");
                    $("#customer").resize();

                    $(".plus").each(function () {
                        $(this).attr("src", "../Images/add.png");
                    });
                });

                $('#customer').on('column-visibility.dt', function () {
                    //table.draw();
                    //alert("zzz2");
                    $("#customer").resize();

                });

                $('#customer').on('order.dt', function () {
                    //table.draw();
                    //alert("zzz3");
                    $("#customer").resize();

                    $(".plus").each(function () {
                        $(this).attr("src", "../Images/add.png");
                    });
                });


                $('#customer').on('responsive-display.dt', function () {
                    //table.draw();
                    //alert("zzz4");
                    $("#customer").resize();

                    $(".plus").each(function () {
                        $(this).attr("src", "../Images/add.png");
                    });

                });


                $('#customer').on('responsive-resize.dt', function () {
                    //table.draw();
                    //alert("zzz4");
                    $("#customer").resize();

                    $(".plus").each(function () {
                        $(this).attr("src", "../Images/add.png");
                    });
                });


                //.on('order.dt', function () {
                //    table.columns.adjust().draw();
                //    $("#qhse").resize(); })
                //.on('search.dt', function () {
                //    table.columns.adjust().draw();
                //    $("#qhse").resize(); })

                //.on('column-visibility.dt', function () {
                //    table.columns.adjust().draw();
                //    $("#qhse").resize();
                //})



            };

            // Select2 for length menu styling
            var _componentSelect2 = function () {
                if (!$().select2) {
                    console.warn('Warning - select2.min.js is not loaded.');
                    return;
                }

                // Initialize
                $('.dataTables_length select').select2({
                    minimumResultsForSearch: Infinity,
                    dropdownAutoWidth: true,
                    width: 'auto'
                });
            };


            //
            // Return objects assigned to module
            //

            return {
                init: function () {
                    _componentDatatableBasic();
                    _componentSelect2();
                }
            }
        }();


        // Initialize module
        // ------------------------------

        document.addEventListener('DOMContentLoaded', function () {
            customer.init();
        });

       

        $("body").on("click", "img[src*='plus.png']", function () {
             $(this).closest("tr").after("<tr><td colspan='8'>" + $(this).next().html() + "</td></tr>");
             $(this).attr("src", "../Images/minus.png");
        });
        //Assign Click event to Minus Image.
        $("body").on("click", "img[src*='minus.png']", function () {
            $(this).attr("src", "../Images/plus.png");
            $(this).closest("tr").next().remove();
        });


        function DeleteItems(id_complaint) {
            bootbox.confirm({
                title: 'Confirm dialog',
                message: 'Are you Sure you want to Delete the current Record?',
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-primary'
                    },
                    cancel: {
                        label: 'Cancel',
                        className: 'btn-link'
                    }
                },
                callback: function (r) {
                    if (r == true) {
                        jQuery.ajax({

                            url: '@Url.Action("CustComplaintDocDelete", "CustComplaint")',
                                        type: 'POST',
                                        dataType: "json",
                                        data: { 'id_complaint': id_complaint },
                                        success: function (result) {

                                            //// Add new params to the querystring dictionary

                                            window.location.href =
                                                window.location.protocol + "//" +
                                                window.location.host +
                                                window.location.pathname

                                        }
                                    });
                                    return true;
                                }
                                else if (r == false) {
                                    bootbox.hideAll();
                                    return false;
                                }

                            }
                        });
        }

        function getDetails() {
                var branch_name = document.getElementById("branch_name").value;

                                             var params = {
                                branch_name: branch_name
                            };
                            queryString = $.param(params);

                            window.location.href =
                                window.location.protocol + "//" +
                                window.location.host +
                                window.location.pathname +
                               '?' + queryString;
            }
    </script>

}