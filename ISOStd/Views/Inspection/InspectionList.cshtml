
@model List<ISOStd.Models.InspectionCategoryModels>

    @{
        ViewBag.Title = "InspectionList";
        ISOStd.Models.clsGlobal objGlobaldata = new ISOStd.Models.clsGlobal();
    }

    @section featured {
        <div class="page-header page-header-light">

            <div class="page-header-content header-elements-md-inline">
                <div class="page-title d-flex">
                    <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

                </div>
            </div>

            <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
                <div class="d-flex">
                    <div class="breadcrumb">

                        <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                            <span class="breadcrumb-item"> Home</span>
                        </a>

                        <span class="breadcrumb-item active">HSE Inspection</span>
                    </div>

                    <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
                </div>

                @*<div class="header-elements d-none">
                    <div class="breadcrumb justify-content-center">


                        <div class="breadcrumb-elements-item dropdown p-0">
                            <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                                <i class="icon-gear mr-2"></i>
                                Settings
                            </a>

                            <div class="dropdown-menu dropdown-menu-right">

                                <div class="dropdown-divider"></div>
                                <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                            </div>
                        </div>
                    </div>
                </div>*@
            </div>
        </div>
    }

        <div class="card">
            <div class="card-header header-elements-inline bg-primary">
                <h5 class="card-title">HSE Inspection</h5>
                <div class="header-elements">
                    <div class="list-icons">
                        <a class="list-icons-item" data-action="collapse"></a>

                    </div>
                </div>
            </div>
            @if (objGlobaldata.GetCurrentUserSession().HseInsp.Contains("3"))
            {
                <div class="card-header bg-white header-elements-sm-inline">

                    <div class="header-elements">
                        @Html.ActionLink("Inspection Section", "AddInspectionSection", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })
                        @Html.ActionLink("Inspection Questions", "AddInspectionQuestions", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400 ml-3", onclick = "HyperLinkProgressIconFunction()" })
                        @Html.ActionLink("Inspection Rating", "AddInspectionRatings", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400 ml-3", onclick = "HyperLinkProgressIconFunction()" })
                   </div>
                </div>
            }
            <div class="card-body">
                <div class="options d-flex flex-fill">
                    @using (Html.BeginForm("InspectionChecklistList", "Inspection", FormMethod.Post, new { id = "form1", name = "form1", style = "width:25%" }))
                    {
                        if (ViewBag.Branch != null)
                        {
                            <select class="select-fixed-single" data-fouc id="branch_name" name="branch_name" onchange="getDetails()">
                                <option value='' hidden>Division</option>
                                @if (ViewBag.Branch != null)
                                {
                                    foreach (var item in ViewBag.Branch)
                                    {
                                        if (item.Value == ViewBag.Branch_name)
                                        {
                                            <option value='@item.Value' selected>@item.Text</option>
                                        }
                                        else
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                }
                            </select>
                        }
                    }
                </div>
            </div>
            <div class="card-body">
                <table class="table table-bordered table-striped table-hover datatable-responsive" id="table1">
                    <thead>
                        <tr>
                            <th>
                                Sl No
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.First().Category)
                            </th>
                            @if (objGlobaldata.GetCurrentUserSession().HseInsp.Contains("3"))
                            {
                                <th>Perform Inspection</th>
                            }
                            <th>View Inspection Details</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Count() > 0)
                        {
                            int i = 0;
                            foreach (var item in Model)
                            {
                                i = i + 1;
                        <tr>
                            <td>
                                @i
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.Category)
                            </td>
                            @if (objGlobaldata.GetCurrentUserSession().HseInsp.Contains("3"))
                            {
                                <td>
                                    <a href='@Url.Action("GenerateInspectionChecklist", "Inspection", new { Category = item.Category,branch = ViewBag.Branch_name  })' title="Generate Checklist" onclick="HyperLinkProgressIconFunction()">
                                        <center><i class="icon-person fa-lg"></i></center>
                                    </a>
                                </td>
                            }
                            <td>
                                <a href='@Url.Action("InspectionChecklistList", "Inspection", new { Category = item.Category,branch = ViewBag.Branch_name  })' title="Inspection List" onclick="HyperLinkProgressIconFunction()">
                                    <center><i class="icon-list3"></i></center>
                                </a>
                            </td>

                        </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>

        </div>
    @section scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script type="text/javascript">

                $(document).ready(function () {

        @if (TempData["alertdata"] != null ) {

           @: new Noty({
           @:     text: '@TempData["alertdata"]',
           @:     type: 'error'
           @: }).show();
        }

        @if (@TempData["Successdata"] != null ) {

        @:    new Noty({
         @:       text: '@TempData["Successdata"]',
         @:       type: 'success'
         @:   }).show();
        }
            });




            var table1 = function () {


                //
                // Setup module components
                //

                // Basic Datatable examples
                var _componentDatatableBasic = function () {
                    if (!$().DataTable) {
                        console.warn('Warning - datatables.min.js is not loaded.');
                        return;
                    }

                    //Setting datatable defaults
                    $.extend($.fn.dataTable.defaults, {
                        autoWidth: false,
                        responsive: true,
                        columnDefs: [{
                            orderable: false,
                            width: 100,
                            targets: [2,3]
                        }],

                        colReorder: false,
                        dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                        //dom: 'lBfrtip',
                        language: {
                            search: '<span>Filter:</span> _INPUT_',
                            searchPlaceholder: 'Type to filter...',
                            lengthMenu: '<span>Show:</span> _MENU_',
                            paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                        }
                    });


                    var table1 = $('#table1').DataTable({

                        lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                        colReorder: {
                            fixedColumnsLeft: 1
                        },
                        stateSave: true,

                        scrollY: '350px',
                        scrollCollapse: true,


                        keys: {
                            className: 'focus focus-success'
                        },

                        buttons: {
                            buttons: [


                                {
                                    extend: 'colvis',
                                    text: '<i class="icon-three-bars"></i>',
                                    className: 'btn bg-blue btn-icon dropdown-toggle'
                                }
                            ]
                        }




                    });
                    // Adjust columns on window resize
                    setTimeout(function () {
                        $(window).on('resize', function () {
                            table1.columns.adjust();
                        });
                    }, 100);


                    //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                    $('.sidebar-control').on('click', function () {

                        setTimeout(function () {
                            //alert("gii");

                            table.columns.adjust().draw();
                            $("#table1").resize();
                        }, 100);

                    });
                    //}

                    $('#table1').on('page.dt', function () {
                        //table.draw();
                        //alert("zzz1");
                        $("#table1").resize();

                    });

                    $('#table1').on('column-visibility.dt', function () {
                        //table.draw();
                        //alert("zzz2");
                        $("#table1").resize();

                    });

                    $('#table1').on('order.dt', function () {
                        //table.draw();
                        //alert("zzz3");
                        $("#table1").resize();

                    });


                    $('#table1').on('responsive-display.dt', function () {
                        //table.draw();
                        //alert("zzz4");
                        $("#table1").resize();

                    });


                    $('#table1').on('responsive-resize.dt', function () {
                        //table.draw();
                        //alert("zzz4");
                        $("#table1").resize();

                    });


                    //.on('order.dt', function () {
                    //    table.columns.adjust().draw();
                    //    $("#qhse").resize(); })
                    //.on('search.dt', function () {
                    //    table.columns.adjust().draw();
                    //    $("#qhse").resize(); })

                    //.on('column-visibility.dt', function () {
                    //    table.columns.adjust().draw();
                    //    $("#qhse").resize();
                    //})

                };


                // Select2 for length menu styling
                var _componentSelect2 = function () {
                    if (!$().select2) {
                        console.warn('Warning - select2.min.js is not loaded.');
                        return;
                    }

                    // Initialize
                    $('.dataTables_length select').select2({
                        minimumResultsForSearch: Infinity,
                        dropdownAutoWidth: true,
                        width: 'auto'
                    });
                };


                //
                // Return objects assigned to module
                //

                return {
                    init: function () {
                        _componentDatatableBasic();
                        _componentSelect2();
                    }
                }
            }();


            // Initialize module
            // ------------------------------

            document.addEventListener('DOMContentLoaded', function () {
                table1.init();
            });

            function DeleteItems(Category) {

                bootbox.confirm({
                title: 'Confirm dialog',
                message: 'Are you Sure you want to Delete the current Record?',
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-primary'
                    },
                    cancel: {
                        label: 'Cancel',
                        className: 'btn-link'
                    }
                },
                callback: function (r) {
                    if (r == true) {
                   jQuery.ajax({
                        url: '@Url.Action("InspectionChecklistDocDelete", "Inspection")',
                        type: 'POST',
                        dataType: "json",
                       data: { 'Category': Category },
                        success: function (result) {
                            var params = {
                                View: 1
                            };


                            //// Add new params to the querystring dictionary


                            window.location.href =
                                window.location.protocol + "//" +
                                window.location.host +
                                window.location.pathname

                        }
                    });
                    return true;
                }
                else if (r == false) {
                        bootbox.hideAll();
                        return false;
                    }

                }
            });
        }

function getDetails() {
                var branch_name = document.getElementById("branch_name").value;

                   jQuery.ajax({
                                url: '@Url.Action("InspectionListSearch", "Inspection")',
                        type: 'POST',
                        dataType: "json",
                        data: { 'branch_name': branch_name },
                        success: function (result) {
                            var params = {
                                branch_name: branch_name
                            };
                            queryString = $.param(params);

                            window.location.href =
                                window.location.protocol + "//" +
                                window.location.host +
                                window.location.pathname +
                               '?' + queryString;

                        }
                    });  
            }

        </script>

    }
