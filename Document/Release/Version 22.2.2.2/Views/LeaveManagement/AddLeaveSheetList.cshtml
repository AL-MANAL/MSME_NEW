@using PagedList;
@using PagedList.Mvc;

@model IPagedList<ISOStd.Models.LeaveManagementModels>

@{
    ViewBag.Title = "AddLeaveSheetList";
}

<div class="groupedassets margin10">
    <span class="groupedassetshead margin10 onestphdcolor">Leave List </span>
</div>
<div class = "ActionLink">@Html.ActionLink("Add New", "AddLeaveSheet", null,null, new { @class = "ActionLink", onclick="HyperLinkProgressIconFunction()" })</div>
<div id="divmsg">
    @if (TempData["alertdata"] != null)
    {
        <span class="errMsg" style="color: red;font-weight: bold;">@TempData["alertdata"]</span>
    }
    @if (TempData["Successdata"] != null)
    {
        <span class="errMsg" style="color: green; font-weight: bold;">@TempData["Successdata"]</span>
    }
</div>
<br />
@using (Html.BeginForm("AddLeaveSheetList", "LeaveManagement", FormMethod.Post, new { id = "form1", name = "form1" }))
{
    <div>
    <span id="tab" style="color:#31b0d5;font-weight: bold; padding: 10px;"></span>
        @Html.TextBox("SearchText", (string)ViewBag.SearchText, new { placeholder = "Search by Employee Id", style = "width: 20%; " })

        <button type="submit" class="btn btn-info" onclick="ProgressIconFunction('#form1')">
            <span class="glyphicon glyphicon-search"></span>Search
        </button>
       
        <span style="margin-left:5px"> <img src="@Url.Content("~/Images/excel.png")" title="Export as Excel" style="cursor:pointer; " id="downloadLink" />Download</span>
    </div>

}
@Html.PagedListPager(Model, page => Url.Action("AddLeaveSheetList",
    new
    {
        page,
        SearchText = Request.QueryString["SearchText"],


    }),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true })

<br />

    <div id="content">
        <table id="table1">
            <thead>

                <tr>
                    <th style="width: 90px; min-width: 90px; max-width: 90px;">
                        @Html.DisplayNameFor(model => model.First().emp_no)
                    </th>
                     <th style="width: 150px; min-width: 150px; max-width: 150px;">
                        @Html.DisplayNameFor(model => model.First().emp_firstname)
                    </th>
                    <th style="width: 100px; min-width: 100px; max-width: 100px;">
                        @Html.DisplayNameFor(model => model.First().fr_date)
                    </th>
                     <th style="width: 100px; min-width: 100px; max-width: 100px;">
                        @Html.DisplayNameFor(model => model.First().to_date)
                    </th>
                       <th style="width: 50px; min-width: 50px; max-width: 50px;">
                        @Html.DisplayNameFor(model => model.First().duration)
                    </th>
                      <th style="width: 150px; min-width: 150px; max-width: 150px;">
                        @Html.DisplayNameFor(model => model.First().reason_leave)
                    </th>
                     <th style="width: 100px; min-width: 100px; max-width: 100px;">
                        @Html.DisplayNameFor(model => model.First().leave_type)
                    </th>
                   <th style="width: 100px; min-width: 100px; max-width: 100px;">
                       Type
                    </th>
                    <th style="width: 150px; min-width: 150px; max-width: 150px;">
                        @Html.DisplayNameFor(model => model.First().approver)
                    </th>
                     <th style="width: 100px; min-width: 100px; max-width: 100px;">
                        @Html.DisplayNameFor(model => model.First().applied_date)
                    </th>
                     <th style="width: 150px; min-width: 150px; max-width: 150px;">
                        @Html.DisplayNameFor(model => model.First().approved_status)
                    </th>
                      <th style="width: 100px; min-width: 100px; max-width: 100px;">
                        @Html.DisplayNameFor(model => model.First().approved_Date)
                    </th>
                     <th style="width: 100px; min-width: 100px; max-width: 100px;">
                        @Html.DisplayNameFor(model => model.First().logged_by)
                    </th>
                  
                      @if (ViewBag.DeleteFlg != null && ViewBag.DeleteFlg == true)
                  {
                <th style="width:60px;min-width:60px; max-width:60px;">Delete </th>
                    }
            </thead>
            <tbody>
                @if (Model != null && Model.Count() > 0)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td style="width: 90px; min-width: 90px; max-width: 90px;">
                            @Html.DisplayFor(modelItem => item.emp_no)
                        </td>
                        <td style="width: 150px; min-width: 150px; max-width: 150px;">
                            @Html.DisplayFor(modelItem => item.emp_firstname)
                        </td>
                         <td style="width: 100px; min-width: 100px; max-width: 100px;">

                            @if (item.fr_date != null && item.fr_date > Convert.ToDateTime("01/01/0001"))
                            {
                                @Html.Label(item.fr_date.ToString("dd/MM/yyyy"))
                                 }
                        </td>
                         <td style="width: 100px; min-width: 100px; max-width: 100px;">

                            @if (item.to_date != null && item.to_date > Convert.ToDateTime("01/01/0001"))
                            {
                                @Html.Label(item.to_date.ToString("dd/MM/yyyy"))
                             }
                        </td>
                          <td style="width: 50px; min-width: 50px; max-width: 50px;">
                            @Html.DisplayFor(modelItem => item.duration)
                        </td>
                          <td style="width: 150px; min-width: 150px; max-width: 150px;">
                            @Html.DisplayFor(modelItem => item.reason_leave)
                        </td>
                         <td style="width: 100px; min-width: 100px; max-width: 100px;">
                            @Html.DisplayFor(modelItem => item.leave_type)
                        </td>
                          <td style="width: 100px; min-width: 100px; max-width: 100px;">
                            @Html.DisplayFor(modelItem => item.bal_type)
                        </td>
                        <td style="width: 150px; min-width: 150px; max-width: 150px;">
                            @Html.DisplayFor(modelItem => item.approver)
                        </td>
                       <td style="width: 100px; min-width: 100px; max-width: 100px;">

                            @if (item.applied_date != null && item.applied_date > Convert.ToDateTime("01/01/0001"))
                            {
                                @Html.Label(item.applied_date.ToString("dd/MM/yyyy"))
                            }
                        </td>
                            <td style="width: 150px; min-width: 150px; max-width: 150px;">
                            @Html.DisplayFor(modelItem => item.approved_status)
                        </td>
                         <td style="width: 100px; min-width: 100px; max-width: 100px;">

                            @if (item.approved_Date != null && item.approved_Date > Convert.ToDateTime("01/01/0001"))
                            {
                                @Html.Label(item.approved_Date.ToString("dd/MM/yyyy"))
                            }
                        </td>
                       <td style="width: 100px; min-width: 100px; max-width: 100px;">
                            @Html.DisplayFor(modelItem => item.logged_by)
                        </td>
                     
                        @if (ViewBag.DeleteFlg != null && ViewBag.DeleteFlg == true && item.approved_status == "Yet To Be Reviewed")
                          {
                            <td style="width: 60px; min-width: 60px; max-width: 60px;">
                                <img src="@Url.Content("~/Images/delete.png")" title="Delete Leave" onclick="DeleteItems(@item.leave_id)" style="cursor:pointer;" />
                            </td>
                          }
                    </tr>
                    }

                }

            </tbody>
        </table>
    </div>


@section scripts {

    <script type="text/javascript">
        function downloadInnerHtml(filename, elId) {
            var $table = $('#table1');
            $rows = $table.find('tr');

            var csvData = "";

            for (var i = 0; i < $rows.length; i++) {
                var $cells = $($rows[i]).children('th,td'); //header or content cells

                for (var y = 0; y < $cells.length; y++) {
                    if (y > 0) {
                        csvData += ",";
                    }

                    var txt = ($($cells[y]).text()).toString().trim();

                    if (txt.indexOf(',') >= 0 || txt.indexOf('\"') >= 0 || txt.indexOf('\n') >= 0) {
                        txt = "\"" + txt.replace(/\"/g, "\"\"") + "\"";
                    }
                    csvData += txt;
                }
                csvData += '\n';
            }


            var elHtml = csvData;
            var link = document.createElement('a');
            mimeType = 'application/csv;charset=utf-8';

            link.setAttribute('download', filename);
            link.setAttribute('href', 'data:' + mimeType + ';charset=utf-8,' + encodeURIComponent(elHtml));
            link.click();
        }
        var fileName = 'LeaveSheet.csv'; // You can use the .txt extension if you want

        $('#downloadLink').click(function () {
            downloadInnerHtml(fileName, 'content');
        });

        function DeleteItems(leave_id) {
            jConfirm('Do you want to delete?', 'Are you Sure?', function (r) {
                if (r == true) {
                    jQuery.ajax({
                        url: '@Url.Action("LeaveDelete", "LeaveManagement")',
                           type: 'POST',
                           dataType: "json",
                           data: { 'leave_id': leave_id },
                           success: function (result) {
                               var params = {
                                   View: 1
                               };

                               //// Add new params to the querystring dictionary
                               queryString = $.param(params);

                               window.location.href =
                                   window.location.protocol + "//" +
                                   window.location.host +
                                   window.location.pathname +
                                  '?' + queryString;
                           }
                       });
                       return true;
                   }
                   else if (r == false) {
                       return false;
                   }
               });
           }
    </script>

}