@model ISOStd.Models.CustomerAuditModels
@using System.Data

@{
    ViewBag.Title = "CustomerAuditDetails";
    DataSet dsFindingsDetails = ViewBag.FindingsDetails;
    ISOStd.Models.clsGlobal objGlobaldata = new ISOStd.Models.clsGlobal();
}
@section featured {
    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("CustomerAuditList", "CustomerAudit", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Customer Audit Details</span>
                    </a>
                    <span class="breadcrumb-item active"> Customer Audit Details</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>

}

    <style>
        .hidden {
            display: none !important;
        }
    </style>

<div class="card">
    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">Customer Audit Details</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>

            </div>
        </div>
    </div>
    <div>
        <div class="card-header bg-white header-elements-sm-inline">

            <div class="header-elements">
                <div class="mt-2 mt-sm-0">

                    @if (objGlobaldata.GetCurrentUserSession().CustAudit.Contains("3"))
                    {
                        <a class="btn bg-orange btn-labeled btn-labeled-left" data-style="radius" href='@Url.Action("CustomerAuditEdit", "CustomerAudit", new { CustAuditID = Model.CustAuditID })' title="Edit" onclick="HyperLinkProgressIconFunction()">
                            <b>  <i class="icon-add-to-list"></i></b> Edit
                        </a>
                    }
                    @Html.ActionLink("Back to List", "CustomerAuditList", null, new { @class = "btn btn-outline bg-orange text-orange border-orange", onclick = "HyperLinkProgressIconFunction()" })
                </div>
            </div>
        </div>

    </div>
    <div class="card-body">


        <div class="container-fluid">
            <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                <thead></thead>
                <tbody>

                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.branch)
                            </p>
                        </td>
                        <td class="col">
                            <span class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.branch)
                            </span>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Department)
                            </p>
                        </td>
                        <td class="col">
                            <span class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Department)
                            </span>
                        </td>

                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Location)
                            </p>
                        </td>
                        <td class="col">
                            <span class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Location)
                            </span>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.AuditNum)
                            </p>
                        </td>
                        <td class="col">
                            <span class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.AuditNum)
                            </span>
                        </td>

                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.CustomerName)
                            </p>
                        </td>
                        <td class="col">
                            <span class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.CustomerName)
                            </span>
                        </td>
                    </tr>

                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Customer_Audit_Team)
                            </p>
                        </td>
                        <td class="col">
                            <span class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Customer_Audit_Team)
                            </span>
                        </td>

                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.AuditDate)
                            </p>
                        </td>
                        <td class="col">
                            <span class="bg-dark py-1 px-2 rounded">
                                @Model.AuditDate.ToString("dd/MM/yyyy")
                            </span>
                        </td>
                    </tr>
                </tbody>
</table>



            @if (dsFindingsDetails.Tables.Count > 0 && dsFindingsDetails.Tables[0].Rows.Count > 0)
            {

                <h2 class="bg-dark pl-sm-2"> Findings Detail</h2>
                <div class="table-responsive">
                    <table class="table table-bordered table-striped table-hover datatable-responsive" id="audit">
                        <thead>
                            <tr class="bg-brown">

                                <th>NCR No.</th>
                                <th>Audit Finding</th>
                                <th>Correction Taken</th>
                                <th>Correction Date</th>
                                <th>Proposed Corrective Action</th>
                                <th>Corrective Action Date</th>
                                <th>Action Taken By</th>
                                <th>NCR Status</th>
                                <th>Reviewed By</th>
                            </tr>
                            </thead>
                        <tbody>
                            @for (int i = 0; i < dsFindingsDetails.Tables[0].Rows.Count; i++)
                            {
                                <tr>
                                    <td>
                                        @dsFindingsDetails.Tables[0].Rows[i]["NCNo"].ToString()
                                    </td>
                                    <td>
                                        @dsFindingsDetails.Tables[0].Rows[i]["AuditFindingDesc"].ToString()
                                    </td>
                                    <td>
                                        @dsFindingsDetails.Tables[0].Rows[i]["CorrectionTaken"].ToString()
                                    </td>
                                    <td>
                                        @Convert.ToDateTime(dsFindingsDetails.Tables[0].Rows[i]["CorrectionDate"].ToString()).ToString("dd/MM/yyyy")
                                    </td>
                                    <td>
                                        @dsFindingsDetails.Tables[0].Rows[i]["ProposedcorrectiveAction"].ToString()
                                    </td>
                                    <td>
                                        @Convert.ToDateTime(dsFindingsDetails.Tables[0].Rows[i]["CorrectiveActionDate"].ToString()).ToString("dd/MM/yyyy")
                                    </td>
                                    <td>
                                        @dsFindingsDetails.Tables[0].Rows[i]["Action_taken_by"].ToString()
                                    </td>
                                    <td>
                                        @objGlobaldata.GetAuditStatusNameById(dsFindingsDetails.Tables[0].Rows[i]["NC_status"].ToString())
                                    </td>
                                    <td>
                                        @dsFindingsDetails.Tables[0].Rows[i]["reviewed_by"].ToString()
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
            }

        </div>
    </div>
</div>



@section scripts {
    <script>
    //----zzz


     $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
    });

    //zzz----



        var audit = function () {


            //
            // Setup module components
            //

            // Basic Datatable examples
            var _componentDatatableBasic = function () {
                if (!$().DataTable) {
                    console.warn('Warning - datatables.min.js is not loaded.');
                    return;
                }

                //Setting datatable defaults
                $.extend($.fn.dataTable.defaults, {
                    autoWidth: false,
                    responsive: true,


                    colReorder: false,
                    dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                    //dom: 'lBfrtip',
                    language: {
                        search: '<span>Filter:</span> _INPUT_',
                        searchPlaceholder: 'Type to filter...',
                        lengthMenu: '<span>Show:</span> _MENU_',
                        paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                    }
                });

          var myClass = "";
                var Delclass= @(objGlobaldata.GetCurrentUserSession().CustAudit.Contains("4") ? "true" : "false");
                if (Delclass == false) { myClass = 'hidden' };

                var table = $('#audit').DataTable({

                    lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                    colReorder: {
                        fixedColumnsLeft: 1
                    },
                    stateSave: true,
                    stateSaveParams: function (settings, data) {
                        for (var i = 0, ien = data.columns.length; i < ien; i++) {
                            delete data.columns[i].visible;
                            delete data.columns[i].search;
                        }
                    },
                    scrollY: '350px',
                    scrollCollapse: true,


                    keys: {
                        className: 'focus focus-success'
                    },

                    buttons: {
                        buttons: [
                            {
                                extend: 'copyHtml5',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'External Audit Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },
                            {
                                extend: 'excelHtml5',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'External Audit Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },

                            },
                            {
                                extend: 'pdfHtml5',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'External Audit Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },
                            {
                                extend: 'csvHtml5',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'External Audit Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },
                            {
                                extend: 'print',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'External Audit Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },

                            {
                                extend: 'colvis',
                                text: '<i class="icon-three-bars"></i>',
                                className: 'btn bg-blue btn-icon dropdown-toggle',
                                columns: ':visible:not(.not-export-column)'
                            }
                        ]
                    }




                });
                // Adjust columns on window resize
                setTimeout(function () {
                    $(window).on('resize', function () {
                        table.columns.adjust();
                    });
                }, 100);


                //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                $('.sidebar-control').on('click', function () {

                    setTimeout(function () {
                        //alert("gii");

                        table.columns.adjust().draw();
                        $("#audit").resize();
                    }, 100);

                });
                //}

                $('#audit').on('page.dt', function () {
                    //table.draw();
                    //alert("zzz1");
                    $("#audit").resize();

                });

                $('#audit').on('column-visibility.dt', function () {
                    //table.draw();
                    //alert("zzz2");
                    $("#audit").resize();

                });

                $('#audit').on('order.dt', function () {
                    //table.draw();
                    //alert("zzz3");
                    $("#audit").resize();

                });


                $('#audit').on('responsive-display.dt', function () {
                    //table.draw();
                    //alert("zzz4");
                    $("#audit").resize();

                });


                $('#audit').on('responsive-resize.dt', function () {
                    //table.draw();
                    //alert("zzz4");
                    $("#audit").resize();

                });






            };






            // Select2 for length menu styling
            var _componentSelect2 = function () {
                if (!$().select2) {
                    console.warn('Warning - select2.min.js is not loaded.');
                    return;
                }

                // Initialize
                $('.dataTables_length select').select2({
                    minimumResultsForSearch: Infinity,
                    dropdownAutoWidth: true,
                    width: 'auto'
                });
            };


            //
            // Return objects assigned to module
            //

            return {
                init: function () {
                    _componentDatatableBasic();
                    _componentSelect2();
                }
            }
        }();


        // Initialize module
        // ------------------------------

        document.addEventListener('DOMContentLoaded', function () {
            audit.init();
        });



    </script>


}
