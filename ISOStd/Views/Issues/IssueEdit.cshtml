@model ISOStd.Models.IssuesModels

@{
    ViewBag.Title = "IssueEdit";
    int itemcnt1 = 0;
    int itemcnt = 0;


    string[] notified_Array = new string[0];
    if (ViewBag.notified_Array != null)
    {
        notified_Array = ViewBag.notified_Array;
        itemcnt1 = notified_Array.Length;
    }

    string[] ReportedByArray = new string[0];
    if (ViewBag.ReportedByArray != null)
    {
        ReportedByArray = ViewBag.ReportedByArray;
        itemcnt = ReportedByArray.Length;
    }
    ISOStd.Models.clsGlobal objGlobaldata = new ISOStd.Models.clsGlobal();
}

@section featured {
    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">
                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("IssuesList", "Issues", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Internal & External Issues</span>
                    </a>
                    <span class="breadcrumb-item active">Update Internal & External Issues</span>
                </div>
                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">
                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>
                        <div class="dropdown-menu dropdown-menu-right">
                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}

@using (Html.BeginForm("IssueEdit", "Issues", FormMethod.Post,
                         new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    
<input type="hidden" id="id_issue" name="id_issue" value="@ViewBag.id_issue" />
<input type="hidden" id="branchId" name="branchId" value="@Model.branchId" />
<div class="card">
    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">Update Internal & External Issues</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>

            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="container-fluid">
            <table class="table table-lg">
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Issue_refno)
                        </div>
                    </td>
                    <td class="col-xs-6 col-md-4">
                        <div class="editor-field">
                            @Html.DisplayFor(model => model.Issue_refno)
                        </div>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        @Html.LabelFor(model => model.branch)
                    </td>
                    <td class="col">
                        @Html.DisplayFor(model => model.branch)
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Deptid)
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            @Html.DisplayFor(model => model.Deptid)
                        </div>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        @Html.LabelFor(model => model.Location)
                    </td>
                    <td class="col">
                        @Html.DisplayFor(model => model.Location)
                    </td>
                </tr>
                <tr class="row">

                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.issue_date)<text style="color: red;">*</text>
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            @if (Model.issue_date != null && Model.issue_date > Convert.ToDateTime("01/01/0001"))
                            {
                                <input class="form-control" type="date" id="issue_date" name="issue_date" value="@Model.issue_date.ToString("yyyy-MM-dd")" required />
                            }
                            else
                            {
                                <input class="form-control" type="date" id="issue_date" name="issue_date" required />
                            }
                            @Html.ValidationMessageFor(m => m.issue_date)
                        </div>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.reporting_to)
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            <select class="form-control select-fixed-multiple" data-fouc id="reporting_to" name="reporting_to" multiple="multiple" onchange="GetReportedByDetails()">
                                @if (ViewBag.EmpList != null)
                                {
                                    foreach (var item in ViewBag.EmpList)
                                    {
                                        <option value='@item.Value'>@item.Text</option>
                                    }
                                }
                            </select>
                        </div>
                    </td>
                </tr>
            </table>
            <div class="card is-visible" id="hidden card">
                <div class="card-body">
                    <input type="hidden" id="itemcnt" name="itemcnt" value="@itemcnt" />

                    <div class="card card-table table-responsive shadow-0 mb-0">
                        <table class="table" id="team-list">
                            <tr class="bg-blue">
                                <th>Action</th>
                                <th>Id</th>
                                <th>Name</th>
                                <th>Division</th>
                                <th>Location</th>
                                <th>Department</th>
                                <th>Email</th>
                            </tr>
                            @if (ViewBag.ReportedByArray != null && ReportedByArray != null && ReportedByArray.Length > 0)
                            {
                                for (int index = 0; index < ReportedByArray.Length; index++)
                                {
                                    //string[] sEmp = @objIncidentLTIList.lstIncidentLTIModels[index].Emp_Id.Split(';');
                                    <tr>
                                        <td>
                                            <span class='badge badge-info' onclick='deleteRow1(this)' style='cursor:pointer;'>Delete</span>
                                            @*<img src='@Url.Content("~/images/cancel.png")' onclick='deleteRow1(this)' style='cursor:pointer; padding-right: 5px;' />Remove*@
                                            <input type='hidden' id='empno @index' name="empno @index" value='@ReportedByArray[index]' />
                                        </td>
                                        <td>
                                            <input type='hidden' id='empid @index' name="empid @index" readonly>@objGlobaldata.GetEmpIDByEmpNo(ReportedByArray[index])
                                        </td>
                                        <td>
                                            <input type='hidden' id='empname @index' name="empname @index" readonly>@objGlobaldata.GetEmpHrNameById(ReportedByArray[index])
                                        </td>
                                        <td>
                                            <input type='hidden' id='empdiv @index' name="empdiv @index" readonly>@objGlobaldata.GetCompanyBranchNameById(objGlobaldata.GetDivisionIdByHrEmpId(ReportedByArray[index]))
                                        </td>
                                        <td>
                                            <input type='hidden' id='emploc @index' name="emploc @index" readonly>@objGlobaldata.GetDivisionLocationById(objGlobaldata.GetWorkLocationIdByHrEmpId(ReportedByArray[index]))
                                        </td>
                                        <td>
                                            <input type='hidden' id='empdept @index' name="empdept @index" readonly>@objGlobaldata.GetDeptNameById(objGlobaldata.GetDeptIdByHrEmpId(ReportedByArray[index]))
                                        </td>
                                        <td>
                                            <input type='hidden' id='empemail @index' name="empemail @index" readonly>@objGlobaldata.GetHrEmpEmailIdById(ReportedByArray[index])
                                        </td>
                                    </tr>
                                }
                            }
                        </table>
                    </div>
                </div>
            </div>
            <table class="table table-lg">
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            Type of issue
                        </div>
                    </td>
                    <td class="col" style="font-size:12px;">
                        <div class="editor-field">
                            @if (Model.Issue != null && Model.Issue != "")
                            {
                                <label><input type="radio" id="issue_type" name="issue_type" value="new" checked onchange="GetIssueType()" />New</label>
                                <label><input type="radio" id="issue_type" name="issue_type" value="old" onchange="GetIssueType()" />Repetitive</label>
                            }
                            else if (Model.Repet_Issue != null && Model.Repet_Issue != "")
                            {
                                <label><input type="radio" id="issue_type" name="issue_type" value="new" onchange="GetIssueType()" />New</label>
                                <label><input type="radio" id="issue_type" name="issue_type" value="old" checked onchange="GetIssueType()" />Repetitive</label>
                            }
                           else
                            {
                                <label><input type="radio" id="issue_type" name="issue_type" value="new" onchange="GetIssueType()" />New</label>
                                <label><input type="radio" id="issue_type" name="issue_type" value="old" onchange="GetIssueType()" />Repetitive</label>
                            }
                        </div>
                    </td>
                </tr>

            </table>
            <table class="table" id="Divnewissue" style="display:none">
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Issue)<text style="color: red;">*</text>
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            <textarea id="Issue" name="Issue" maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" required>@Model.Issue</textarea>
                        </div>
                    </td>

                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Effect)
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            @*<textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="Effect" name="Effect">@Model.Effect</textarea>*@
                            <select class="form-control select-search select2-hidden-accessible" data-fouc id="Effect" name="Effect" multiple required>
                                @*<option value='' hidden>Select</option>*@
                                @if (ViewBag.IssueEffect != null)
                                {
                                    foreach (var item in ViewBag.IssueEffect)
                                    {
                                        if (Array.IndexOf(Model.Effect.ToString().Split(','), item.Value) >= 0)

                                        {
                                            <option value='@item.Value' selected>@item.Text</option>
                                        }
                                        else
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                }
                            </select>
                        </div>
                    </td>
                </tr>
            </table>
            <table class="table" id="Divoldissue" style="display:none">
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Repet_Issue)
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            <select class="form-control select-search select2-hidden-accessible" data-fouc id="Repet_Issue" name="Repet_Issue" onchange="GetRepeatissueDetail()">
                                <option value='' hidden>Select</option>
                                @if (ViewBag.Repet_Issue != null)
                                {
                                    foreach (var item in ViewBag.Repet_Issue)
                                    {
                                        if (Array.IndexOf(Model.Repet_Issue.ToString().Split(','), item.Value) >= 0)

                                        {
                                            <option value='@item.Value' selected>@item.Text</option>
                                        }
                                        else
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                }
                            </select>
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            <textarea id="Repet_Issue_detail" name="Repet_Issue_detail" maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" disabled readonly></textarea>
                        </div>
                    </td>
                </tr>
            </table>
            <table class="table">
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.additional_details)
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            <textarea id="additional_details" name="additional_details" maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position">@Model.additional_details</textarea>
                        </div>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Issue_Category)<text style="color: red;">*</text>
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            <select class="form-control select-search select2-hidden-accessible" data-fouc id="Issue_Category" name="Issue_Category" required>
                                <option value='' hidden>Select</option>
                                @if (ViewBag.IssueCategory != null)
                                {
                                    foreach (var item in ViewBag.IssueCategory)
                                    {
                                        if (item.Text == Model.Issue_Category)
                                        {
                                            <option value='@item.Value' selected>@item.Text</option>
                                        }
                                        else
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                }
                            </select>
                        </div>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.IssueType)<text style="color: red;">*</text>
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            <select class="form-control select-search select2-hidden-accessible" data-fouc id="IssueType" name="IssueType" required>
                                <option value='' hidden>Select</option>
                                @if (ViewBag.IssueType != null)
                                {
                                    foreach (var item in ViewBag.IssueType)
                                    {
                                        if (item == Model.IssueType)
                                        {
                                            <option value='@item' selected>@item</option>
                                        }
                                        else
                                        {
                                            <option value='@item'>@item</option>
                                        }
                                    }
                                }
                            </select>
                        </div>
                    </td>
                </tr>

                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Impact)<text style="color: red;">*</text>
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            <select class="form-control select-search select2-hidden-accessible" data-fouc id="Impact" name="Impact" onchange="GetImpactType()" required>
                                <option value='' hidden>Select</option>
                                @if (ViewBag.Impact != null)
                                {
                                    foreach (var item in ViewBag.Impact)
                                    {
                                        if (item == Model.Impact)
                                        {
                                            <option value='@item' selected>@item</option>
                                        }
                                        else
                                        {
                                            <option value='@item'>@item</option>
                                        }
                                    }
                                }
                            </select>
                        </div>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Impact_detail)
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            <select class="form-control select-fixed-multiple" data-fouc id="Impact_detail" name="Impact_detail" multiple="multiple" required>
                                <option value='' hidden>Select</option>
                                @if (ViewBag.ImpactDetails != null)
                                {
                                    foreach (var item in ViewBag.ImpactDetails)
                                    {
                                        if (Array.IndexOf(Model.Impact_detail.ToString().Split(','), item.Value) >= 0)
                                        {
                                            <option value='@item.Value' selected>@item.Text</option>
                                        }
                                        else
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                }
                            </select>
                        </div>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Evidence)
                        </div>
                    </td>
                    @*<td class="col">
                        <div class="editor-field">
                            <input class="bootstrap-uploader" data-fouc type="file" name="file" id="file" value="" onchange="FileFormatValidation(this)" accept=".pdf,.xlsx,.xls,.jpeg,.jpg,.png,.doc,.docx" />
                            @if (Model.Evidence != "")
                            {
                                <a href='@Url.Action("DisplayDocument", "Reports", new { Document = Model.Evidence })' class="text-orange" target="_blank">Preview</a>
                            }
                        </div>
                    </td>*@
                     <td class="col">
                            <input type="file" name="Evidence" id="Evidence" title="Documents" onchange="FileFormatValidation(this)"
                                   multiple="multiple" accept=".pdf, .doc, .docx,image/*" class="bootstrap-uploader" data-fouc />

                            <span class="form-text text-muted"><code>(Hold Ctrl Key in case of multiple files or drag multiple files and drop here)</code></span>
                            <br />
                            @if (Model.Evidence != null && Model.Evidence != "" && Model.Evidence.Length > 0)
                            {
                                <h6> <span class="bg-dark py-1 px-2 rounded">Document List</span></h6>

                                <span class="form-text text-muted">
                                    <code>
                                        (Uncheck in case to remove a uploaded file)
                                    </code>
                                </span>
                                foreach (var docs in Model.Evidence.Trim(',').Split(','))
                                {
                                    <div class="form-check">
                                        <label class="form-check-label">
                                            <input type="checkbox" id="QCDocsVal" name="QCDocsVal" class="form-check-input-styled QCDocsVal" value="@docs.Trim(',')" checked title="Uncheck in case to remove a uploaded file" data-fouc />
                                            <input type="hidden" id="QCDocsValselectall" name="QCDocsValselectall" />
                                            <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" class="text-orange">
                                                @System.IO.Path.GetFileName(docs)
                                            </a>
                                        </label>
                                    </div>
                                }
                            }
                        </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.notified_to)
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            <select class="form-control select-fixed-multiple" data-fouc id="notified_to" name="notified_to" multiple="multiple" onchange="GetNotifiedDetails()">
                                @*<option value='' hidden>Select</option>*@
                                @if (ViewBag.EmpList != null)
                                {
                                    foreach (var item in ViewBag.EmpList)
                                    {
                                        <option value='@item.Value'>@item.Text</option>
                                    }
                                }
                            </select>
                        </div>
                    </td>
                </tr>
            </table>
            <div id="estdiv" @*style="display:none"*@>
                <div class="card-body">
                    <input type="hidden" id="itemcnt1" name="itemcnt1" value="@itemcnt1" />

                    <div class="card card-table table-responsive shadow-0 mb-0">
                        <table class="table" id="team-list1">
                            <tr class="bg-blue">
                                <th>Action</th>
                                <th>Id</th>
                                <th>Name</th>
                                <th>Division</th>
                                <th>Department</th>
                                <th>Email</th>
                            </tr>
                            @if (ViewBag.notified_Array != null && notified_Array != null && notified_Array.Length > 0)
                            {
                                for (int index = 0; index < notified_Array.Length; index++)
                                {
                                    <tr>
                                        <td>
                                            <span class='badge badge-info' onclick='deleteRow1(this)' style='cursor:pointer;'>Delete</span>
                                            <input type='hidden' id='nempno @index' name="nempno @index" value='@notified_Array[index]' />
                                        </td>
                                        <td>
                                            <input type='hidden' id='nempid @index' name="nempid @index" readonly>@objGlobaldata.GetEmpIDByEmpNo(notified_Array[index])
                                        </td>
                                        <td>
                                            <input type='hidden' id='nempname @index' name="nempname @index" readonly>@objGlobaldata.GetEmpHrNameById(notified_Array[index])
                                        </td>
                                        <td>
                                            <input type='hidden' id='nempdiv @index' name="nempdiv @index" readonly>@objGlobaldata.GetCompanyBranchNameById(objGlobaldata.GetDivisionIdByHrEmpId(notified_Array[index]))
                                        </td>
                                        <td>
                                            <input type='hidden' id='nempdept @index' name="nempdept @index" readonly>@objGlobaldata.GetDeptNameById(objGlobaldata.GetDeptIdByHrEmpId(notified_Array[index]))
                                        </td>
                                        <td>
                                            <input type='hidden' id='nempemail @index' name="nempemail @index" readonly>@objGlobaldata.GetHrEmpEmailIdById(notified_Array[index])
                                        </td>
                                    </tr>
                                }
                            }
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="card-footer bg-white d-flex justify-content-between align-items-center">
        @Html.ActionLink("Back to List", "IssuesList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })

        <button type="submit" id="btnCreate" value="Update" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Update</button>
    </div>
</div>
    }

    @section Scripts {
        <script>
            $(document).ready(function () {
                GetRepeatissueDetail();
                GetIssueTypeEdit();
            });

           

             function GetDeptList() {
            var selectedValues = [];
            $("#branch :selected").each(function () {
                selectedValues.push($(this).val());
            });
                jQuery.ajax({
                    url: '@Url.Action("FunGetAllDeptList", "EmployeeDetails")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'branch': selectedValues },
                    success: function (result) {
                        GetLocList(selectedValues);
                        $("#Deptid").children('option').remove();
                        $("#Deptid").trigger('change');
                        if (result != null && result.length > 0) {
                            $.each(result, function (index, item) {
                                $("#Deptid").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                                $("#Deptid").trigger('change');
                            });
                            return;
                        }
                        //else {
                        //    bootbox.alert({
                        //        title: 'Department List',
                        //        message: 'No Department exists.'
                        //    });
                        //}
                    }
                });
        }


        function GetLocList(selectedValues) {
            jQuery.ajax({
                url: '@Url.Action("FunGetAllLocList", "EmployeeDetails")',
                type: 'POST',
                dataType: "json",
                data: { 'branch': selectedValues },
                success: function (result) {
                    $("#Location").children('option').remove();
                    $("#Location").trigger('change');
                    if (result != null && result.length > 0) {
                        $.each(result, function (index, item) {
                            $("#Location").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            $("#Location").trigger('change');
                        });
                        return;
                    }
                    //else {
                    //    bootbox.alert({
                    //        title: 'Location List',
                    //        message: 'No Location exists.'
                    //    });
                    //}
                }
            });
            }

             function GetNotifiedDetails() {
            var notified_to = $('#notified_to').val();
            if (notified_to != "" && notified_to != null) {
                jQuery.ajax({
                    url: '@Url.Action("FunGetEmpDetails", "EmployeeDetails")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'semp_no': notified_to },
                    success: function (result) {
                        if (result != null) {

                            var nempno = $('#notified_to option:Selected').val();
                            var nempid = result.emp_id;
                            var nempname = result.empname;
                            var nempdiv = result.division;
                            var nempdept = result.department;
                            var nempemail = result.EmailId;

                            var cnt = document.getElementById("itemcnt1").value;

                            document.getElementById("itemcnt1").value = cnt;
                            // Find a <table> element with id="myTable":
                            var table = document.getElementById("team-list1");

                            // Create an empty <tr> element and add it to the 1st position of the table:
                            var row = table.insertRow();


                            // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
                            var cell0 = row.insertCell(0);
                            var cell1 = row.insertCell(1);
                            var cell2 = row.insertCell(2);
                            var cell3 = row.insertCell(3);
                            var cell4 = row.insertCell(4);
                            var cell5 = row.insertCell(5);

                            cell0.innerHTML = "<span class='badge badge-info' onclick='deleteRow1(this)' style='cursor:pointer;'>Delete</span> <input type = 'hidden' id = 'nempno " + cnt + "' name = 'nempno " + cnt + "' value = '" + nempno + "'>";
                            cell1.innerHTML = "<input type='hidden' id='nempid " + cnt + "' name='nempid " + cnt + "' value='" + nempid + "'>" + nempid;
                            cell2.innerHTML = "<input type='hidden' id='nempname " + cnt + "' name='nempname " + cnt + "' value='" + nempname + "'>" + nempname;
                            cell3.innerHTML = "<input type='hidden' id='nempdiv " + cnt + "' name='nempdiv " + cnt + "' value='" + nempdiv + "'>" + nempdiv;
                            cell4.innerHTML = "<input type='hidden' id='nempdept " + cnt + "' name='nempdept " + cnt + "' value='" + nempdept + "'>" + nempdept;
                            cell5.innerHTML = "<input type='hidden' id='nempemail " + cnt + "' name='nempemail " + cnt + "' value='" + nempemail + "'>" + nempemail;

                            cnt++;
                            document.getElementById("itemcnt1").value = cnt;

                            $("#notified_to").val('').trigger('change');
                        }
                    }
                });
            }
        }

        function deleteRow1(btn) {
            var row = btn.parentNode.parentNode;
            row.parentNode.removeChild(row);
        }


        function GetImpactType() {
            var Impact = $('#Impact option:selected').text();
            if (Impact != null && Impact != "") {
                jQuery.ajax({
                    url: '@Url.Action("FunGetIssueImpactTypeList", "Issues")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'Impact_type': Impact },
                    success: function (result) {
                        $("#Impact_detail").children('option').remove();
                        $("#Impact_detail").trigger('change');
                        if (result != null && result.length > 0) {
                            $.each(result, function (index, item) {
                                $("#Impact_detail").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            });
                            $("#Impact_detail").trigger('change');
                            return;
                        }
                    }
                });
            }
            }

             function GetReportedByDetails() {
            var reporting_to = $('#reporting_to option:selected').val();

            if (reporting_to != "" && reporting_to != null) {
                jQuery.ajax({
                    url: '@Url.Action("FunGetEmpDetails", "NC")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'semp_no': reporting_to },
                    success: function (result) {
                        if (result != null) {
                           // document.getElementById("reportedbydiv").classList.remove(hideClass);
                           //document.getElementById("reportedbydiv").classList.add(showClass);

                           //document.getElementById("reportedbydiv").style.display = 'block';

                            var reporting_to = $('#reporting_to option:selected').val();
                            var empid = result.emp_id;
                            var empname = result.empname;
                            var empdivision = result.division;
                            var empdept = result.department;
                            var emploc = result.location;
                            var empemail = result.EmailId;

                            if (empid != null) {
                                var cnt = document.getElementById("itemcnt").value;

                                document.getElementById("itemcnt").value = cnt;
                                // Find a <table> element with id="myTable":
                                var table = document.getElementById("team-list");

                                // Create an empty <tr> element and add it to the 1st position of the table:
                                var row = table.insertRow();


                                // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
                                var cell0 = row.insertCell(0);
                                var cell1 = row.insertCell(1);
                                var cell2 = row.insertCell(2);
                                var cell3 = row.insertCell(3);
                                var cell4 = row.insertCell(4);
                                var cell5 = row.insertCell(5);
                                var cell6 = row.insertCell(6);


                                cell0.innerHTML = "<span class='badge badge-info' onclick='deleteRow(this)' style='cursor:pointer;'>Delete</span> <input type='hidden' id='empno " + cnt + "' name='empno " + cnt + "' value='" + reporting_to + "'>";
                                cell1.innerHTML = "<input type='hidden' id='empid " + cnt + "' name='empid " + cnt + "' value='" + empid + "'>" + empid;
                                cell2.innerHTML = "<input type='hidden' id='empname " + cnt + "' name='empname " + cnt + "' value='" + empname + "'>" + empname;
                                cell3.innerHTML = "<input type='hidden' id='empdivision " + cnt + "' name='empdivision " + cnt + "' value='" + empdivision + "'>" + empdivision;
                                cell4.innerHTML = "<input type='hidden' id='emploc " + cnt + "' name='emploc " + cnt + "' value='" + emploc + "'>" + emploc;
                                cell5.innerHTML = "<input type='hidden' id='empdept " + cnt + "' name='empdept " + cnt + "' value='" + empdept + "'>" + empdept;
                                cell6.innerHTML = "<input type='hidden' id='empemail " + cnt + "' name='empemail " + cnt + "' value='" + empemail + "'>" + empemail;

                                cnt++;
                                document.getElementById("itemcnt").value = cnt;

                                //document.getElementById("hidden card").classList.remove(hideClass);
                                //document.getElementById("hidden card").classList.add(showClass);
                                //document.getElementById("hidden card").style.display = 'block';

                                $("#reporting_to").val('').trigger('change');
                              }
                        }
                    }
                });
            }
            }


             function GetRepeatissueDetail() {
            var Repet_Issue = $('#Repet_Issue option:selected').val();
            if (Repet_Issue != null && Repet_Issue != "") {
                jQuery.ajax({
                    url: '@Url.Action("FunGetIssueDetailbyRefNo", "Issues")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'Issue_id': Repet_Issue },
                    success: function (result) {
                        document.getElementById("Repet_Issue_detail").value = result;
                    }
                });
            }
        }


            function GetIssueType() {
                var issue_type = $("input[name='issue_type']:checked").val();

                if (issue_type == "new") {
                    $("#Divnewissue").show();
                    $("#Divoldissue").hide();
                    $("#Repet_Issue").val('').trigger("chosen:updated");                   
                }
                else {
                    $("#Divnewissue").hide();
                    $("#Divoldissue").show();
                    document.getElementById("Issue").value = "";
                    $("#Effect").val('').trigger("chosen:updated");                  
                }
            }

            function GetIssueTypeEdit() {
                var Issue = $("#Issue").val();
                var Repet_Issue = $("#Repet_Issue").val();

                if (Issue != null && Issue != "") {
                    $("#Divnewissue").show();
                    $("#Divoldissue").hide();                   
                }
                else if (Repet_Issue != null && Repet_Issue != "") {
                    $("#Divnewissue").hide();
                    $("#Divoldissue").show();                   
                }
            }

            $('.form-check-input-styled').uniform();

            function FileFormatValidation(file) {
                var ext = file.value.split(".").pop().toLowerCase();
                if ($.inArray(ext, ["pdf", "xlsx", "xls", "doc", "docx", "jpeg", "jpg", "png"]) == -1) {
                    file.value = "";
                    bootbox.alert({
                        title: 'File type',
                        message: 'Invalid file format, please upload only xlsx,xls,pdf,jpeg,jpg,png format.'
                    });
                }
            }

            $("#QCDocsVal").click(function () {
                if ($("#QCDocsVal").prop('checked')) {
                    {
                        $(this).prop('checked', true);
                    }
                }
                else {

                    $(this).prop('checked', false);
                    document.getElementById("QCDocsValselectall").value = "DeleteQC";
                }

            });


        </script>
        @Scripts.Render("~/bundles/jqueryval")
    }
