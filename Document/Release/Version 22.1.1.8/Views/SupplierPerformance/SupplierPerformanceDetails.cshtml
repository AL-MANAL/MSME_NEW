@model ISOStd.Models.SupplierPerformanceModels
@using System.Data;

@{
   ViewBag.Title = "";
    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
    string Action = "", Rating = "";
    if (Model.Action_sup.Contains("&"))
    {
        Action = Model.Action_sup.Split('&')[0];
        Rating = Model.Action_sup.Split('&')[1];
    }
}

@section featured {

    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("SupplierPerformanceList", "SupplierPerformance", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">External Provider Performance List</span>
                    </a>
                    <span class="breadcrumb-item active">External Provider Performance Details</span>
                </div>
                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            <div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">
                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="card">

    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">External Provider Performance Details</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>

            </div>
        </div>
    </div>

    <div>
        <div class="card-header bg-white header-elements-sm-inline">

            <div class="header-elements">
                <div class="mt-2 mt-sm-0">

                    @Html.ActionLink("Back to List", "SupplierPerformanceList", null, new { @class = "btn btn-outline bg-orange text-orange border-orange", onclick = "HyperLinkProgressIconFunction()" })
                </div>
            </div>
        </div>

    </div>

    <div class="card-body">
        <div class="container-fluid">

            <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                <thead></thead>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.Eval_FromDate)
                        </p>
                    </td>

                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                             @if (Model.Eval_FromDate != null && Model.Eval_FromDate > Convert.ToDateTime("01/01/0001"))
                            {
                                @Html.Label(Model.Eval_FromDate.ToString("dd/MM/yyyy"))
                            }
                        </span>
                    </td>
		    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.Eval_ToDate)
                        </p>
                    </td>

                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.Eval_ToDate)
                        </span>
                    </td>

                </tr>
             <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.Supplier_Name)
                        </p>
                    </td>

                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                             @Html.DisplayFor(model => model.Supplier_Name)
                        </span>
                    </td>
		    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.total_delv)
                        </p>
                    </td>

                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.total_delv)
                        </span>
                    </td>
                </tr>
               <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.accept_delv)
                        </p>
                    </td>

                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                             @Html.DisplayFor(model => model.accept_delv)
                        </span>
                    </td>
		    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.ontime_delv)
                        </p>
                    </td>

                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.ontime_delv)
                        </span>
                    </td>
                </tr>
		<tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.lowest_price)
                        </p>
                    </td>

                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                             @Html.DisplayFor(model => model.lowest_price)
                        </span>
                    </td>
		    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.supp_price)
                        </p>
                    </td>

                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.supp_price)
                        </span>
                    </td>
                </tr>
		<tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.hse_compliance)
                        </p>
                    </td>

                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                             @Html.DisplayFor(model => model.hse_compliance)
                        </span>
                    </td>
		    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.iso9001_compliance)
                        </p>
                    </td>

                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.iso9001_compliance)
                        </span>
                    </td>
                </tr>
		<tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.recomend_by)
                        </p>
                    </td>

                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                             @Html.DisplayFor(model => model.recomend_by)
                        </span>
                    </td>
		    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.payment_terms)
                        </p>
                    </td>

                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.payment_terms)
                        </span>
                    </td>
                </tr>
		<tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.sale_perf)
                        </p>
                    </td>

                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                             @Html.DisplayFor(model => model.sale_perf)
                        </span>
                    </td>
		    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.EnvMgmt)
                        </p>
                    </td>

                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.EnvMgmt)
                        </span>
                    </td>
                </tr>
                    </table>



                </div>
            
        </div>
    </div>

 @section scripts {
            <script>
                //----zzz


                $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
                                        @:     text: '@TempData["alertdata"]',
                                        @:     type: 'error'
                                        @: }).show();
                                                                         }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
                                        @:       text: '@TempData["Successdata"]',
                                        @:       type: 'success'
        @:}).show();
                                                                }
                });

</script>


        }

