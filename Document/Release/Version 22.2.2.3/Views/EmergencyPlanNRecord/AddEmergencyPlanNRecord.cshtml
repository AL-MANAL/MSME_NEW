@model ISOStd.Models.EmergencyPlanNRecordModels

@{
    ViewBag.Title = "Emergency Plan and Record";
    int icnt = 0;

}
@section featured {

    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("EmergencyPlanNRecordList", "EmergencyPlanNRecord", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Emergency Evacuation Plan</span>
                    </a>
                    <span class="breadcrumb-item active">Add Emergency Evacuation Plan</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}


@using (Html.BeginForm("AddEmergencyPlanNRecord", "EmergencyPlanNRecord", FormMethod.Post,
    new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Add Emergency Evacuation Plan</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>

                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">

                <table class="table table-lg">
                    <tbody>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.branch)
                            </td>
                            <td class="col">
                                <select class="form-control select-fixed-multiple" multiple="multiple" data-fouc id="branch" name="branch" onchange="GetDeptList()">
                                    @*<option value='' hidden>Select</option>*@
                                    @if (ViewBag.Branch != null)
                                    {
                                        foreach (var data in ViewBag.Branch)
                                        {
                                            if (Array.IndexOf(Model.branch.ToString().Split(','), data.Value) >= 0)
                                            {
                                                <option value='@data.Value' selected>@data.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@data.Value'>@data.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.Department)<text style="color:red;">*</text>
                            </td>
                            <td class="col">
                                <select class="form-control select-fixed-multiple" data-fouc id="Department" name="Department" multiple="multiple" required>
                                    @if (ViewBag.Department != null)
                                    {
                                        foreach (var item in ViewBag.Department)
                                        {
                                            if (Array.IndexOf(Model.Department.ToString().Split(','), item.Value) >= 0)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>

                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.Location)<text style="color:red;">*</text>
                            </td>
                            <td class="col">
                                <select class="form-control select-fixed-multiple" data-fouc id="Location" name="Location" multiple="multiple" required>
                                    @if (ViewBag.Location != null)
                                    {
                                        foreach (var item in ViewBag.Location)
                                        {
                                            if (Array.IndexOf(Model.Location.ToString().Split(','), item.Value) >= 0)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.DisplayNameFor(model => model.emp_id)

                            </td>
                            <td class="col">

                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="emp_id" name="emp_id">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.EmpList != null)
                                    {
                                        foreach (var item in ViewBag.EmpList)
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                </select>

                            </td>
                            <td class="col-xs-3 col-md-2">

                                @Html.DisplayNameFor(model => model.Emergency_Type) <text style="color:red;"> *</text>

                            </td>
                            <td class="col">

                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="Emergency_Type" name="Emergency_Type" required>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.EmergencyType != null)
                                    {
                                        foreach (var item in ViewBag.EmergencyType)
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                </select>

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.DisplayNameFor(model => model.Plan_From)

                            </td>
                            <td class="col">

                                <input class="form-control" type="date" id="Plan_From" name="Plan_From" />

                            </td>
                            <td class="col-xs-3 col-md-2">

                                @Html.DisplayNameFor(model => model.Plan_To)

                            </td>
                            <td class="col">

                                <input class="form-control" type="date" id="Plan_To" name="Plan_To" onchange="checkDate();" />

                            </td>
                        </tr>

                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.DisplayNameFor(model => model.Plan_Date_Time)

                            </td>
                            <td class="col">

                                <input type="date" id="Plan_Date_Time" name="Plan_Date_Time" onchange="checkDate2();" class="form-control" />
                                Hr: @Html.DropDownList("PlanTimeInHour", new SelectList(ViewBag.PlanTimeInHour, "PlanTimeInHour"), new { @class = "select-fixed-single" })
                                Min: @Html.DropDownList("PlanTimeInMin", new SelectList(ViewBag.PlanTimeInMin, "PlanTimeInMin"), new { @class = "select-fixed-single" })

                            </td>
                            <td class="col-xs-3 col-md-2">

                                @Html.DisplayNameFor(model => model.Incharge)

                            </td>
                            <td class="col">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="Incharge" name="Incharge">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.EmpList != null)
                                    {
                                        foreach (var item in ViewBag.EmpList)
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                </select>
                            </td>
                        </tr>
                        <tr class="row">

                            <td class="col-xs-3 col-md-2">

                                @Html.DisplayNameFor(model => model.Drill_Location)

                            </td>
                            <td class="col">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="Drill_Location" name="Drill_Location">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.DrillLocation != null)
                                    {
                                        foreach (var item in ViewBag.DrillLocation)
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                </select>
                            </td>
                            @*<td class="col">
                @Html.TextAreaFor(model => model.Drill_Location, new { @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position" })
            </td>*@

                            <td class="col-xs-3 col-md-2">

                                @Html.DisplayNameFor(model => model.Need_Reporting)

                            </td>
                            <td class="col">

                                @Html.TextAreaFor(model => model.Need_Reporting, new { @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position" })

                            </td>
                        </tr>
                        <tr class="row">
                            @*<td class="col-xs-3 col-md-2">

                                @Html.DisplayNameFor(model => model.Plan_Status)

                            </td>
                            <td class="col">

                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="Plan_Status" name="Plan_Status">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.HSEPerformance != null)
                                    {
                                        foreach (var item in ViewBag.HSEPerformance)
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                </select>

                            </td>*@
                            @*<td class="col-xs-3 col-md-2">

                                @Html.DisplayNameFor(model => model.Performance)

                            </td>
                            <td class="col">

                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="Performance" name="Performance">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.DrillPerformance != null)
                                    {
                                        foreach (var item in ViewBag.DrillPerformance)
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                </select>

                            </td>*@
                        </tr>
                        <tr class="row">

                            @*  <td class="col-xs-3 col-md-2">

                @Html.DisplayNameFor(model => model.ReportNo)<text style="color:red;"> *</text>

            </td>
            <td class="col">


                @Html.EditorFor(model => model.ReportNo, new { htmlAttributes = new { @class = "form-control" } })

            </td>*@
                            @*<td class="col-xs-3 col-md-2">

                                @Html.DisplayNameFor(model => model.Upload_Report)

                            </td>
                            <td class="col">

                                <input type="file" name="Upload" id="Upload" title="Documents" onchange="FileFormatValidation(this)"
                                       accept=".pdf, .doc, .docx,image/*" class="bootstrap-uploader" data-fouc />


                            </td>*@
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.DisplayNameFor(model => model.Remarks)

                            </td>
                            <td class="col">

                                @Html.TextAreaFor(model => model.Remarks, new { @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position" })

                            </td>
                            @*<td class="col-xs-3 col-md-2">

                                @Html.DisplayNameFor(model => model.No_Emp)

                            </td>
                            <td class="col">

                                <input class="form-control" type="text" id="No_Emp" name="No_Emp" />

                            </td>*@
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.DisplayNameFor(model => model.ReviewedBy)

                            </td>
                            <td class="col">

                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="ReviewedBy" name="ReviewedBy">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.EmpList != null)
                                    {
                                        foreach (var item in ViewBag.EmpList)
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                </select>

                            </td>
                            <td class="col-xs-3 col-md-2">

                                @Html.DisplayNameFor(model => model.ApprovedBy)

                            </td>
                            <td class="col">

                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="ApprovedBy" name="ApprovedBy">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.EmpList != null)
                                    {
                                        foreach (var item in ViewBag.EmpList)
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                </select>

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.DisplayNameFor(model => model.Observation)

                            </td>
                            <td class="col" colspan="3">
                                @Html.TextAreaFor(model => model.Observation, new { @id = "editor-full", @rows = "4", @cols = "4" })
                            </td>
                        </tr>
                    </tbody>
                </table>


                <fieldset class="border p-2">
                    <legend class="font-weight-semibold"><i class="icon-file-text mr-2"></i> Action details</legend>
                    <table class="table table-lg" id="table1">
                        @*<thead>
                                <tr style="background-color: #4cc4dd; color: #fff;">
                                    <th style="font-weight: bold;">Accident Type</th>
                                    <th style="font-weight: bold;">Name</th>
                                    <th style="font-weight: bold;">LTI (Hrs)</th>
                                    <th style="font-weight: bold;">sAction</th>
                                </tr>
                            </thead>*@
                        <tbody>
                            <tr class="row">
                                <th class="col-xs-3 col-md-2" style="font-weight: bold;">Corrective Action</th>
                                <td class="col">
                                    @Html.TextAreaFor(model => model.Corrrective_action, new { @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position" })
                                    @Html.ValidationMessageFor(model => model.Corrrective_action)
                                    <span class="field-validation-error"><span id="Corrrective_action-message" style="display: none;">Please enter corrective action</span></span>
                                </td>

                            </tr>

                            <tr class="row">
                                <th class="col-xs-3 col-md-2" style="font-weight: bold;">Target Date</th>
                                <td class="col">

                                    <input type="date" id="Target_date" name="Target_date" class="form-control" />
                                    @Html.ValidationMessageFor(model => model.Target_date)
                                    <span class="field-validation-error"><span id="Target_date-message" style="display: none;">Please enter target date</span></span>
                                </td>

                            </tr>
                            <tr class="row">
                                <th class="col-xs-3 col-md-2" style="font-weight: bold;">Action</th>

                                <td class="col">
                                    <img src='@Url.Content("~/images/icon_add.png")' onclick='AddLTI()' style='cursor:pointer; padding-right: 5px;' />Add
                                </td>
                            </tr>

                        </tbody>
                    </table>
                </fieldset>

                <span class="form-text text-muted"><code>Please click Add or Plus button to add N number of Accident details</code></span>
            </div>


        </div>





        <div class="card-footer bg-white d-flex justify-content-between align-items-center">

            @Html.ActionLink("Back to List", "EmergencyPlanNRecordList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })

            <button type="submit" id="btnCreate" value="Save" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Save</button>

            @*<input type="submit" id="btnCreate" value="Save" class="btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400" onclick="ProgressIconFunction('#form1')" />*@
            @*<input type="button" value="Add" class="btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400" onclick="AddPlanner()" />*@
        </div>


    </div>

  



    <div class="card invisible" id="hidden card">
        <div class="card-header header-elements-inline">
            <h5 class="card-title">Corrective action Details</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>


                </div>
            </div>
        </div>

        <div class="card-body">

            <input type="hidden" id="itemcnt" name="itemcnt" value="@icnt" />

            <div class="card card-table table-responsive shadow-0 mb-0">
                <table class="table" id="team-list">
                    <tr class="bg-blue">
                        <th>Action</th>
                        <th>Corrective action</th>
                      
                        <th>Target Date</th>
                    </tr>
                </table>

            </div>
        </div>
    </div>



}

@section Scripts {
    <script>



                   //----zzz
    $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }





    });
    //zzz----


        function reformatDate(dateStr) {
            dArr = dateStr.split("-");  // ex input 2010-01-18
            return dArr[2] + "/" + dArr[1] + "/" + dArr[0]; //ex out: 2018/01/10
        }



        var showClass = 'is-visible';
        var hideClass = 'invisible';



        function deleteRow(btn) {
            var row = btn.parentNode.parentNode;
            row.parentNode.removeChild(row);
            var cnt = document.getElementById("itemcnt").value;
            cnt--;

            document.getElementById("itemcnt").value = cnt;
            if (cnt == "0") {


                document.getElementById("hidden card").classList.remove(showClass);
                document.getElementById("hidden card").classList.add(hideClass);
            }

        }

        function AddLTI() {

            if (Validation() == true) {


                var cnt = document.getElementById("itemcnt").value;

                document.getElementById("itemcnt").value = cnt;
                // Find a <table> element with id="myTable":
                var table = document.getElementById("team-list");


                // Create an empty <tr> element and add it to the 1st position of the table:
                var row = table.insertRow();


                // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
                var cell0 = row.insertCell(0);
                var cell1 = row.insertCell(1);
                var cell2 = row.insertCell(2);


                var Corrrective_action = $('#Corrrective_action').val();
                var Target_date = reformatDate($('#Target_date').val());

                cell0.innerHTML = " <img src='@Url.Content("~/images/cancel.png")' onclick='deleteRow(this)' style='cursor:pointer; padding-right: 5px;'/>Remove";
                cell1.innerHTML = "<input type='hidden' id='Corrrective_action " + cnt + "' name='Corrrective_action " + cnt + "' value='" + Corrrective_action + "'>" + Corrrective_action;
                cell2.innerHTML = "<input type='hidden' id='Target_date " + cnt + "' name='Target_date " + cnt + "' value='" + Target_date + "'>" + Target_date;


            cnt++;
                document.getElementById("itemcnt").value = cnt;
                document.getElementById("hidden card").classList.remove(hideClass);
                document.getElementById("hidden card").classList.add(showClass);
        }

        }
        function Validation() {
            var validflg = true;
            var ssnMessage = "";

            if (document.getElementById("Corrrective_action").value == "") {
                ssnMessage = $('#Corrrective_action-message');
                ssnMessage.show();

                validflg = false;
            }
            else {
                ssnMessage = $('#Corrrective_action-message');
                ssnMessage.hide();
            }
            if (document.getElementById("Target_date").value == "") {
                ssnMessage = $('#Target_date-message');
                ssnMessage.show();
                validflg = false;
            }
            else {
                ssnMessage = $('#Target_date-message');
                ssnMessage.hide();
            }
            return validflg;
        }







            function checkDate() {


                var dt2 = document.getElementById("Plan_From").value;
                var dt1 = document.getElementById("Plan_To").value;

                if (new Date(dt1).getTime() < new Date(dt2).getTime()) {

                    bootbox.alert({
                        title: 'Plan To Date',
                        message: 'Plan to date cannot be before from date.'
                    });
                    $('#Plan_To').val("");
                }
            }



            function checkDate2() {


                var dt2 = document.getElementById("Plan_From").value;
                var dt1 = document.getElementById("Plan_Date_Time").value;

                if (new Date(dt1).getTime() < new Date(dt2).getTime()) {

                    bootbox.alert({
                        title: 'Plan to Date',
                        message: 'Planned date time cannot be before Planned from date'
                    });
                    $('#Plan_Date_Time').val("");
                }
            }





        function FileFormatValidation(file) {
            var ext = file.value.split(".").pop().toLowerCase();
            if ($.inArray(ext, ["pdf", "doc", "docx"]) == -1) {
                file.value = "";
                bootbox.alert({
                    title: 'File type',
                    message: 'Invalid file format, please upload only pdf format.'
                });
            }
        }



        // Full featured editor
        // ------------------------------

        // Setup
        CKEDITOR.replace('editor-full', {
            height: 400,
            extraPlugins: 'forms'
        });


      function GetDeptList() {
             $("#Department").empty();
             var sStd = $('#branch').val();
                jQuery.ajax({
                    url: '@Url.Action("FunGetDeptList", "EmployeeDetails")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'branch': sStd },
                    success: function (result) {

                        if (result != null && result.length > 0) {
                            $("#Department").append("<option value=''>" + "Select" + "</option>");
                            $.each(result, function (index, item) {
                                $("#Department").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                                $("#Department").trigger('change');
                            });
                            return;
                        }
                        else {
                            bootbox.alert({
                                title: 'Group Code',
                                message: 'Please add group code to this directorate selected'
                            });
                            return;
                        }
                    }
                });
        }


        function GetLocList(selectedValues) {
            jQuery.ajax({
                url: '@Url.Action("FunGetAllLocList", "EmployeeDetails")',
                type: 'POST',
                dataType: "json",
                data: { 'branch': selectedValues },
                success: function (result) {
                    $("#Location").children('option').remove();
                    $("#Location").trigger('change');
                    if (result != null && result.length > 0) {
                        $.each(result, function (index, item) {
                            $("#Location").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            $("#Location").trigger('change');
                        });
                        return;
                    }
                    //else {
                    //    bootbox.alert({
                    //        title: 'Location List',
                    //        message: 'No Location exists.'
                    //    });
                    //}
                }
            });
        }

    </script>

    @Scripts.Render("~/bundles/jqueryval")

}
