@model ISOStd.Models.ObjectivesModels

@{
    ViewBag.Title = "ObjectivePotentialEdit";
    //DateTime dtTodate = Convert.ToDateTime(ViewBag.Obj_Estld_On);
    //dtTodate = dtTodate.AddDays(1);
    //int icont = 0;
    ISOStd.Models.clsGlobal objGlobaldata = new ISOStd.Models.clsGlobal();

    string[] NotifiedtoArray = new string[0];
    int itemcnt1 = 0;
    if (ViewBag.NotifiedtoArray != null)
    {
        NotifiedtoArray = ViewBag.NotifiedtoArray;
        itemcnt1 = NotifiedtoArray.Length;
    }

}

@section featured {

    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>

                    <a class="breadcrumb-item" onclick="HyperLinkProgressIconFunction();" href='@Url.Action("ObjectivesDetails", "Objectives", new { Objectives_Id = ViewBag.Objectives_Id,View=ViewBag.View } )'>
                        <span class="breadcrumb-item"> Objective Details</span>
                    </a>
                    <span class="breadcrumb-item active"> Update Potential Causes for Failure</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                    <div class="breadcrumb justify-content-center">


                        <div class="breadcrumb-elements-item dropdown p-0">
                            <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                                <i class="icon-gear mr-2"></i>
                                Settings
                            </a>

                            <div class="dropdown-menu dropdown-menu-right">

                                <div class="dropdown-divider"></div>
                                <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                            </div>
                        </div>
                    </div>
                </div>*@
        </div>
    </div>
}

@using (Html.BeginForm("ObjectivePotentialEdit", "Objectives", FormMethod.Post,
                         new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Update Potential Causes for Failure</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">
                <input type="hidden" id="ObjectivesTrans_Id" name="ObjectivesTrans_Id" value="@ViewBag.ObjectivesTrans_Id" />
                <input type="hidden" id="Objectives_Id" name="Objectives_Id" value="@ViewBag.Objectives_Id" />
                <input type="hidden" id="view" name="view" value="@ViewBag.View" />
                <input type="hidden" id="id_potential" name="id_potential" value="@Model.id_potential" />
                @*<h2 class="bg-dark pl-sm-2"> Objective Details</h2>
         <br />
        <table class="table table-lg">
             <thead></thead>
             <tbody>
                 <tr class="row">
                     <td class="col-xs-3 col-md-2">
                         @Html.LabelFor(model => model.Objectives_val)
                     </td>
                     <td class="col">
                         <b><textarea class="form-control" id="Objectives_val" name="Objectives_val" readonly>@ViewBag.Objectives_val </textarea></b>
                     </td>
                 </tr>
                 <tr class="row">
                     <td class="col-xs-3 col-md-2">
                         @Html.LabelFor(model => model.Obj_Target)
                     </td>
                     <td class="col">
                         <input class="form-control" type="text" id="Obj_Target" name="Obj_Target" value="@ViewBag.Obj_Target" readonly />
                     <td class="col-xs-3 col-md-2">
                         @Html.LabelFor(model => model.Base_Line_Value)
                     </td>
                     <td class="col">
                         <input class="form-control" type="text" id="Base_Line_Value" name="Base_Line_Value" value="@ViewBag.Base_Line_Value" readonly />
                     </td>
                 </tr>
                 <tr class="row">
                     <td class="col-xs-3 col-md-2">
                         @Html.LabelFor(model => model.Monitoring_Mechanism)
                     </td>
                     <td class="col">
                         <input class="form-control" type="text" id="Monitoring_Mechanism" name="Monitoring_Mechanism" value="@ViewBag.Monitoring_Mechanism" readonly />
                     </td>
                     <td class="col-xs-3 col-md-2">
                         @Html.LabelFor(model => model.Target_Date)
                     </td>
                     <td class="col">
                         <input class="form-control" type="text" id="Target_Date" name="Target_Date" value="@ViewBag.Target_Date" readonly />
                     </td>
                 </tr>
         </table>
         <br />*@
                <h2 class="bg-dark pl-sm-2"> Update Potential Causes for Failure Details</h2>
                <table class="table table-lg" id="tabcontent">

                    <thead></thead>
                    <tbody>


                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.potential_causes)<text style="color:red;">*</text>
                            </td>
                            <td class="col">
                                @Html.EditorFor(model => model.potential_causes, new { htmlAttributes = new { @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position", required = "required" } })

                                @*<input class="form-control" type="text" id="actionplan" name="actionplan" required />*@
                            </td>
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.impact)<text style="color:red;">*</text>
                            </td>
                            <td class="col">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="impact" name="impact" required="required">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.PotentialImpact != null)
                                    {
                                        foreach (var item in ViewBag.PotentialImpact)
                                        {
                                            if (item.Value == Model.impact)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>
                        </tr>

                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.mitigation_measure)<text style="color:red;">*</text>
                            </td>
                            <td class="col">
                                @Html.EditorFor(model => model.mitigation_measure, new { htmlAttributes = new { @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position", required = "required" } })

                                @*<input class="form-control" type="text" id="actionplan" name="actionplan" required />*@
                            </td>
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.targeted_on)<text style="color:red;">*</text>
                            </td>
                            <td class="col">
                                @*<input class="form-control" type="date" id="targeted_on" name="targeted_on" required />*@
                                @if (Model.targeted_on > Convert.ToDateTime("01/01/0001"))
                                {
                                    <input class="form-control" type="date" id="targeted_on" name="targeted_on" value="@Model.targeted_on.ToString("yyyy-MM-dd")" required="required" />
                                }
                                else
                                {
                                    <input class="form-control" type="date" id="targeted_on" name="targeted_on" required="required" />
                                }
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.potential_status)<text style="color:red;">*</text>
                            </td>
                            <td class="col">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="potential_status" name="potential_status" required="required">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.PotentialStatus != null)
                                    {
                                        foreach (var item in ViewBag.PotentialStatus)
                                        {
                                            if (item.Value == Model.potential_status)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.updated_on)<text style="color:red;">*</text>
                            </td>
                            <td class="col">
                                @if (Model.targeted_on > Convert.ToDateTime("01/01/0001"))
                                {
                                    <input class="form-control" type="date" id="updated_on" name="updated_on" value="@Model.updated_on.ToString("yyyy-MM-dd")" required="required" />
                                }
                                else
                                {
                                    <input class="form-control" type="date" id="updated_on" name="updated_on" required="required" />
                                }
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.Pcff_Notify)<text style="color:red;">*</text>
                            </td>
                            <td class="col">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="Pcff_Notify" name="Pcff_Notify" onchange="GetNotifyDetails()" >
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.DeptHead != null)
                                    {
                                        foreach (var item in ViewBag.DeptHead)
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                </select>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div id="hidden card1">
                    <div class="card-body">
                        <input type="hidden" id="itemcount" name="itemcount" value="@itemcnt1" />
                        <div class="card card-table table-responsive shadow-0 mb-0">
                            <table class="table" id="team-list-count">
                                <tr class="bg-blue">
                                    <th>Action</th>
                                    <th>Id</th>
                                    <th>Name</th>
                                    <th>Division</th>
                                    <th>Location</th>
                                    <th>Department</th>
                                    <th>Email</th>
                                </tr>

                                @if (ViewBag.NotifiedtoArray != null && NotifiedtoArray != null && NotifiedtoArray.Length > 0)
                                {
                                    for (int index = 0; index < NotifiedtoArray.Length; index++)
                                    {
                                        //string[] sEmp = @objIncidentLTIList.lstIncidentLTIModels[index].Emp_Id.Split(';');
                                        <tr>
                                            <td>
                                                <span class='badge badge-info' onclick='deleteRow1(this)' style='cursor:pointer;'>Delete</span>
                                                @*<img src='@Url.Content("~/images/cancel.png")' onclick='deleteRow1(this)' style='cursor:pointer; padding-right: 5px;' />Remove*@
                                                <input type='hidden' id='nempno @index' name="nempno @index" value='@NotifiedtoArray[index]' />
                                            </td>
                                            <td>
                                                <input type='hidden' id='nempid @index' name="nempid @index" readonly>@objGlobaldata.GetEmpIDByEmpNo(NotifiedtoArray[index])
                                            </td>
                                            <td>
                                                <input type='hidden' id='nempname @index' name="nempname @index" readonly>@objGlobaldata.GetEmpHrNameById(NotifiedtoArray[index])
                                            </td>
                                            <td>
                                                <input type='hidden' id='nempdiv @index' name="nempdiv @index" readonly>@objGlobaldata.GetCompanyBranchNameById(objGlobaldata.GetDivisionIdByHrEmpId(NotifiedtoArray[index]))
                                            </td>
                                            <td>
                                                <input type='hidden' id='nemploc @index' name="nemploc @index" readonly>@objGlobaldata.GetDivisionLocationById(objGlobaldata.GetWorkLocationIdByHrEmpId(NotifiedtoArray[index]))
                                            </td>
                                            <td>
                                                <input type='hidden' id='nempdept @index' name="nempdept @index" readonly>@objGlobaldata.GetDeptNameById(objGlobaldata.GetDeptIdByHrEmpId(NotifiedtoArray[index]))
                                            </td>
                                            <td>
                                                <input type='hidden' id='nempemail @index' name="nempemail @index" readonly>@objGlobaldata.GetHrEmpEmailIdById(NotifiedtoArray[index])
                                            </td>
                                        </tr>
                                    }
                                }

                            </table>
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <div class="card-footer bg-white d-flex justify-content-between align-items-center">
            @Html.ActionLink("Back to List", "AddObjectivePotential", new { ObjectivesTrans_Id = ViewBag.ObjectivesTrans_Id, Objectives_Id = ViewBag.Objectives_Id, View = ViewBag.View }, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })
            <button class="btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400" type="submit" value="Save" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Save</button>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
                //function checkDate() {

                //    var dt1 = document.getElementById("begin_date").value;
                //    var dt2 = document.getElementById("end_date").value;

                //    if (new Date(dt2).getTime() < new Date(dt1).getTime()) {

                //        bootbox.alert({
                //            title: 'To Date',
                //            message: 'End date cannot be before Begin date.'
                //        });
                //        $('#end_date').val("");
                //    }
                //}

         $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
         });

           function GetNotifyDetails() {
            var Pcff_Notify = $('#Pcff_Notify option:selected').val();
            if (Pcff_Notify != "" && Pcff_Notify != null) {
                jQuery.ajax({
                    url: '@Url.Action("FunGetEmpDetails", "NC")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'semp_no': Pcff_Notify },
                    success: function (result) {
                        if (result != null) {

                            document.getElementById("hidden card1").style.display = 'block';
                            var table = document.getElementById("team-list-count");

                            var nempno = Pcff_Notify;
                            var nempid = result.emp_id;
                            var nempname = result.empname;
                            var nempdiv = result.division;
                            var nempdept = result.department;
                            var nemploc = result.location;
                            var nempemail = result.EmailId;

                            if (nempid != null) {
                                var cnt = document.getElementById("itemcount").value;

                                document.getElementById("itemcount").value = cnt;
                                // Find a <table> element with id="myTable":

                                // Create an empty <tr> element and add it to the 1st position of the table:
                                var row = table.insertRow();


                                // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
                                var cell0 = row.insertCell(0);
                                var cell1 = row.insertCell(1);
                                var cell2 = row.insertCell(2);
                                var cell3 = row.insertCell(3);
                                var cell4 = row.insertCell(4);
                                var cell5 = row.insertCell(5);
                                var cell6 = row.insertCell(6);

                                cell0.innerHTML = "<span class='badge badge-info' onclick='deleteRow1(this)' style='cursor:pointer;'>Delete</span> <input type = 'hidden' id = 'nempno " + cnt + "' name = 'nempno " + cnt + "' value = '" + nempno + "'>";
                                cell1.innerHTML = "<input type='hidden' id='nempid " + cnt + "' name='nempid " + cnt + "' value='" + nempid + "'>" + nempid;
                                cell2.innerHTML = "<input type='hidden' id='nempname " + cnt + "' name='nempname " + cnt + "' value='" + nempname + "'>" + nempname;
                                cell3.innerHTML = "<input type='hidden' id='nempdiv " + cnt + "' name='nempdiv " + cnt + "' value='" + nempdiv + "'>" + nempdiv;
                                cell4.innerHTML = "<input type='hidden' id='nemploc " + cnt + "' name='nemploc " + cnt + "' value='" + nemploc + "'>" + nemploc;
                                cell5.innerHTML = "<input type='hidden' id='nempdept " + cnt + "' name='nempdept " + cnt + "' value='" + nempdept + "'>" + nempdept;
                                cell6.innerHTML = "<input type='hidden' id='nempemail " + cnt + "' name='nempemail " + cnt + "' value='" + nempemail + "'>" + nempemail;

                                cnt++;
                                document.getElementById("itemcount").value = cnt;

                                $("#Pcff_Notify").val('').trigger('change');
                            }

                        }
                    }
                });
            }
    }


    function deleteRow1(btn) {
        var row = btn.parentNode.parentNode;
        row.parentNode.removeChild(row);
    }
</script>
    @Scripts.Render("~/bundles/jqueryval")
}


