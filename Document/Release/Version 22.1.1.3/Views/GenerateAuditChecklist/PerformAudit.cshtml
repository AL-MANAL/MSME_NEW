@model ISOStd.Models.GenerateAuditChecklistModels

@{
    ViewBag.Title = "PerformAudit";
    System.Data.DataSet dsrating = new System.Data.DataSet();

    if (ViewBag.AuditRating != null)
    {
        dsrating = ViewBag.AuditRating;
    }
}





@section featured {




    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>


        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>

                    <a href="@Url.Action("AuditChecklistList", "GenerateAuditChecklist", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Audit Checklists</span>
                    </a>


                    <span class="breadcrumb-item active"> Perform Audit</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            <div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">

                    @using (Html.BeginForm("PerformAuditReport", "GenerateAuditChecklist", FormMethod.Post, new { id = "form2", name = "form2" }))
                    {
                        @Html.AntiForgeryToken()
                    <div class="breadcrumb-elements-item dropdown p-0">
                        <input type="hidden" id="id_AuditChecklist" name="id_AuditChecklist" value="@Model.id_AuditChecklist" />
                        <input type="hidden" id="Department" name="Department" value="@Model.Department" />



                        <button type="submit" class="dropdown-item">
                            <i class="icon-printer2"></i> Report
                        </button>
                    </div>
                    }
                            <div class="breadcrumb-elements-item dropdown p-0">
                                <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                                    <i class="icon-gear mr-2"></i>
                                    Settings
                                </a>

                                <div class="dropdown-menu dropdown-menu-right">

                                    <div class="dropdown-divider"></div>
                                    <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>



                                </div>
                            </div>
                        </div>
                    </div>
        </div>
    </div>


}





@using (Html.BeginForm("PerformAudit", "GenerateAuditChecklist", FormMethod.Post,
                         new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <input type="hidden" id="id_AuditChecklist" name="id_AuditChecklist" value="@Model.id_AuditChecklist" />
    <input type="hidden" id="Department" name="Department" value="@Model.Department" />



    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Generate Audit Checklist</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>

                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">

                <table class="table table-lg">
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">

                            @Html.DisplayNameFor(model => model.AuditCriteria)

                        </td>
                        <td class="col">
                            @Html.DisplayFor(model => model.AuditCriteria)
                            @*@Html.TextBoxFor(model => model.AuditCriteria, new { @class = "form-control", @readonly = "true" })*@

                        </td>
                        <td class="col-xs-3 col-md-2">

                            @Html.DisplayNameFor(model => model.AuditNo)<text style="color:red;">*</text>

                        </td>
                        <td class="col">

                            <select class="form-control select-search select2-hidden-accessible" data-fouc id="AuditNo" name="AuditNo" required onchange="SetAudit()">
                                <option value='' hidden>Select</option>
                                @if (ViewBag.AuditNo != null)
                                {
                                    foreach (var item in ViewBag.AuditNo)
                                    {
                                        <option value='@item.Value'>@item.Text</option>
                                    }
                                }
                            </select>

                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">

                            @Html.DisplayNameFor(model => model.AuditDate)<text style="color:red;">*</text>

                        </td>
                        <td class="col">

                            <input class="form-control" type="date" id="AuditDate" name="AuditDate" required />

                        </td>

                        <td class="col-xs-3 col-md-2">

                            @Html.DisplayNameFor(model => model.Department)

                        </td>
                        <td class="col">

                            @*   @Html.DisplayFor(model => model.Department)*@
                            <select class="form-control select-search select2-hidden-accessible" data-fouc id="Department1" name="Department1" disabled>
                                <option value='' hidden>Select</option>
                                @if (ViewBag.Department != null)
                                {
                                    foreach (var item in ViewBag.Department)
                                    {
                                        if (item.Value == Model.Department)
                                        {
                                            <option value='@item.Value' selected>@item.Text</option>
                                        }
                                        else
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }

                                    }
                                }
                            </select>

                        </td>
                    </tr>
                    <tr class="row">

                        <td class="col-xs-3 col-md-2">

                            @Html.DisplayNameFor(model => model.Auditors)

                        </td>
                        <td class="col">

                            <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="Auditors" name="Auditors"></textarea>


                        </td>
                        <td class="col-xs-3 col-md-2">

                            @Html.DisplayNameFor(model => model.Auditee)

                        </td>
                        <td class="col">

                            <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="Auditee" name="Auditee"></textarea>

                        </td>
                    </tr>
                </table>




                




               @* @if (ViewBag.AuditElements != null)
                {
                    int iSrno = 0;
                    foreach (var item in ViewBag.AuditElements)
                    {
                        if (Model.Questions.Contains(item.Value))
                        {
                            iSrno = iSrno + 1;
                            itmctn = itmctn + 1;

                            <div class="card-group-control card-group-control-left border-*-3" id="accordion-control">
                                <div class="card">
                                    <div class="card-header">
                                        <h6 class="card-title">
                                            <a data-toggle="collapse" class="text-default" href="#accordion-control-group_@itmctn" aria-expanded="true">
                                                @item.Text
                                                <input type="hidden" id="Audit_Elements @item.Value" name="Audit_Elements @item.Value" value="@item.Value" />
                                            </a>
                                        </h6>
                                    </div>

                                    <div id="accordion-control-group_@itmctn" class="collapse show" data-parent="#accordion-control">
                                        <div class="card-body">
                                            @if (dsrating.Tables.Count > 0 && dsrating.Tables[0].Rows.Count > 0)
                                            {
                                                <fieldset class="border p-2">
                                                    <legend class="font-weight-semibold"><i class="icon-file-text mr-2"></i> Rating details</legend>

                                                    
                                                    @for (int rating = 0; rating < dsrating.Tables[0].Rows.Count; rating++)
                                                    {
                                                        <div class="form-check">
                                                            <label class="form-check-label">
                                                                <input type="radio" id="id_auditratings @item.Value"
                                                                       name="id_auditratings @item.Value"
                                                                       class="id_auditratings @item.Value " value="@dsrating.Tables[0].Rows[rating]["id_auditratings"].ToString()" required /> @dsrating.Tables[0].Rows[rating]["Options"].ToString()
                                                                </label>
                                                            </div>
                                                        }

                                                </fieldset>
                                                <br />

                                                <br />

                                            }


                                            <div class="form-group row">
                                                <label class="col-lg-3 col-form-label">Comment:</label>
                                                <div class="col-lg-9">
                                                    <input class="form-control" type="text" id="comment @itmctn" name="comment @itmctn" />
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label class="col-lg-3 col-form-label">Evidence:</label>
                                                <div class="col-lg-9">
                                                    <input class="form-control" type="file" name="evidence_upload @itmctn" id="evidence_upload @itmctn" onchange="FileFormatValidation(this,@itmctn)" accept=".pdf" />
                                                </div>
                                            </div>


                                        </div>
                                    </div>
                                </div>




                            </div>
                        }

                    }




                }*@


            </div>


        </div>

    </div>
      <div class="card">
<div class="card-body">
    <div style="overflow-x:auto;">
                     <table class="table table-lg">
                    <thead>

                        <tr>
                         <th>
                            Sl.No
                        </th>
                        <th>
                             Element Checked
                        </th>
                       @if (dsrating.Tables.Count > 0 && dsrating.Tables[0].Rows.Count > 0)
                       {
                           for (int item = 0; item < dsrating.Tables[0].Rows.Count; item++)
                           {
                        <th>
                            @dsrating.Tables[0].Rows[item]["Options"].ToString()
                        </th>
                           }
                }
                           
                            <th>
                            Comment
                        </th>
                        <th>
                             Evidence
                        </th>
                            </tr>
                         
                    </thead>
                    <tbody>
             @if (ViewBag.AuditElements != null)
             {
                 int iSrno = 0, itmctn = 0;
                 foreach (var item in ViewBag.AuditElements)
                 {
                     if (Model.Questions.Contains(item.Value))
                     {
                         iSrno = iSrno + 1;
                         itmctn = itmctn + 1;
                        <tr>
                            <td>
                                @iSrno
                            </td>
                            <td>
                                @item.Text
                                <input type="hidden" id="Audit_Elements @item.Value" name="Audit_Elements @item.Value" value="@item.Value" />
                            </td>
                            @if (dsrating.Tables.Count > 0 && dsrating.Tables[0].Rows.Count > 0)
                            {

                                for (int rating = 0; rating < dsrating.Tables[0].Rows.Count; rating++)
                                {
                                    <td>
                                        <input type="radio" id="id_auditratings @item.Value"
                                               name="id_auditratings @item.Value"
                                               class="id_auditratings @item.Value" value="@dsrating.Tables[0].Rows[rating]["id_auditratings"].ToString()" required />
                                    </td>
                                }
                            }
                            <td>

                                <input class="form-control" type="text" id="comment @itmctn" name="comment @itmctn" style="height:60px;width:200px" />
                            </td>
                            <td>
                                <input type="file" name="evidence_upload @itmctn" id="evidence_upload @itmctn" onchange="FileFormatValidation(this,@itmctn)" accept=".pdf" style="height: 38px;" />

                            </td>

                        </tr>
                     }
                 }
                <tr>
                    <td>
                        <input type="hidden" id="itmctn" name="itmctn" value="@itmctn" />

                    </td>
                </tr>
             }
 
                    </tbody>
                </table>
    </div>
            </div>
       <div class="card">
           <div class="card-body">
                <table class="table table-lg">
             <tr class="row">
                        <td class="col-xs-3 col-md-2">



                            @Html.DisplayNameFor(model => model.Notes)

                        </td>
                    </tr>
                    <tr>
                        <td class="col">
                            @Html.TextAreaFor(model => model.Notes, new { @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position" })

                        </td>
                    </tr>
                    <tr>
                        <td class="col-xs-3 col-md-2">

                            @Html.DisplayNameFor(model => model.Remarks)

                        </td>
                    </tr>
                    <tr>
                        <td class="col">

                            @Html.TextAreaFor(model => model.Remarks, new { @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position" })

                        </td>
                    </tr>
        </table>
               </div>
          </div>
     <div class="card-footer bg-white d-flex justify-content-between align-items-center">
          @Html.ActionLink("Back to List", "AuditChecklistList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })
  
          <button type="submit" id="btnCreate" value="Save" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Add</button>
      </div>

</div>
    <div id="dvItems" style="overflow: auto; display: none;">
        <table id="team-list" style="width: 100%">
            <tr>
                <th>Evidence</th>

            </tr>
        </table>
    </div>
}

@section Scripts {
    <script>







        // when the submit is clicked
        $("#form1 button[type='submit']").on("click", function (event) {
           
            // traverse all the required elements looking for
            var elements = document.getElementsByClassName("collapse");
         

            for (var i = 0; i < elements.length; i++) {
             


                elements[i].className += ' show';
            }
            ProgressIconFunction('#form1');
});










                        function FileFormatValidation(file, cnt) {


                 var ext = file.value.split(".").pop().toLowerCase();
                 if ($.inArray(ext, ["pdf", "xlsx", "xls", "doc", "docx"]) == -1) {
                     file.value = "";
                     bootbox.alert({
                         title: 'File type',
                         message: 'Invalid file format, please upload only pdf format.'
                     });
                 }
                 else {

                     AddEvidence(cnt)
                 }
             }
             function AddEvidence(cnt) {



                 var table = document.getElementById("team-list");
                 var row = table.insertRow();
                 var cell0 = row.insertCell(0);
                 var n = "evidence_upload" + " " + cnt;
                 var evidence_upload = document.getElementById(n).value;

                 evidence_uploadServerPath = UploadDocument(cnt);
                 cell0.innerHTML = "<input type='hidden' id='evidence_upload" + cnt + "' name='evidence_upload" + cnt + "' value='" + evidence_uploadServerPath + "'>" + evidence_upload;

             }

             function UploadDocument(ind) {


                 var evidence_upload = ($("#evidence_upload" +" "+ ind)).files; //$('#testfile').file;

                 var formData = new FormData();

                 var totalFiles = document.getElementById("evidence_upload" + " "+ ind).files.length;

                 for (var i = 0; i < totalFiles; i++) {
                     var file = document.getElementById("evidence_upload" + " " + ind).files[i];
                     formData.append("evidence_upload", file);
                 }
                 jQuery.ajax({
                     url: '@Url.Action("UploadDocument", "GenerateAuditChecklist")',
                     type: 'POST',
                     contentType: false,
                     processData: false,
                     data: formData,
                     success: function (result) {

                         //document.getElementById("evidence_upload" + " " + ind).value = result;
                         document.getElementById("evidence_upload" + ind).value = result;
                         evidence_uploadServerPath = result;
                         return result;
                     }

                 });
             }

         function SetAudit() {
             var AuditNo = $('#AuditNo').val();
             var dept = $('#Department1').val();
             jQuery.ajax({
                 url: '@Url.Action("FungetAuditDetail", "GenerateAuditChecklist")',
                type: 'POST',
                dataType: "json",
                data: { 'AuditNo': AuditNo, 'dept': dept },
                success: function (result) {
                    document.getElementById("Auditee").value = result.Auditee;
                    document.getElementById("Auditors").value = result.Auditor
                }
            });
                            }









                    


    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
