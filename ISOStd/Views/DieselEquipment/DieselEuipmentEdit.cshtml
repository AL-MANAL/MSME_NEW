@model ISOStd.Models.DieselEquipmentModels

@{
    ViewBag.Title = "AddDieselEuipment";
}

<div class="groupedassets margin10">
    <span class="groupedassetshead margin10 onestphdcolor">Edit Vehicle / Equipment details</span>
</div>

<div id="divmsg">
    @if (TempData["alertdata"] != null)
    {
        <span class="errMsg" style="color: red;font-weight: bold;">@TempData["alertdata"]</span>
        }
    @if (TempData["Successdata"] != null)
    {
        <span class="errMsg" style="color: green; font-weight: bold;">@TempData["Successdata"]</span>
        }
</div>

@using (Html.BeginForm("DieselEuipmentEdit", "DieselEquipment", FormMethod.Post, new { id = "form1", name = "form1" }))
{
     @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <input type="hidden" id="Diesel_Equip_Id" name="Diesel_Equip_Id" value="@Model.Diesel_Equip_Id"/>
        <legend>DieselEquipmentModels</legend>
        <table id="tabcontent">
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Equip_No)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                       <input type="text" id="Equip_No" name="Equip_No" value="@Model.Equip_No" required/>
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Description)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        <textarea id="Description" name="Description" required>@Model.Description</textarea>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Make)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        <input type="text" id="Make" name="Make" value="@Model.Make"/>
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Capacity)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        <input type="text" id="Capacity" name="Capacity" value="@Model.Capacity"/>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Model)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        <input type="text" id="Model" name="Model" value="@Model.Model"/>
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Chasis_No)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        <input type="text" id="Chasis_No" name="Chasis_No" value="@Model.Chasis_No"/>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Engine_No)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        <input type="text" id="Engine_No" name="Engine_No" value="@Model.Engine_No"/>
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Date_Of_Purchase)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @if (Model.Date_Of_Purchase > Convert.ToDateTime("01/01/0001"))
                        {
                            <input type="text" id="Date_Of_Purchase" name="Date_Of_Purchase" value="@Model.Date_Of_Purchase.ToString("dd/MM/yyyy")" required readonly />
                        }
                        else
                        {
                            <input type="text" id="Date_Of_Purchase" name="Date_Of_Purchase" readonly required/>
                        }
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Reg_Issued_Date)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @if (Model.Reg_Issued_Date > Convert.ToDateTime("01/01/0001"))
                        {
                            <input type="text" id="Reg_Issued_Date" name="Reg_Issued_Date" value="@Model.Reg_Issued_Date.ToString("dd/MM/yyyy")" readonly />
                        }
                        else
                        {
                            <input type="text" id="Reg_Issued_Date" name="Reg_Issued_Date" readonly />
                        }
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Reg_Expr_Date)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @if (Model.Reg_Expr_Date > Convert.ToDateTime("01/01/0001"))
                        {
                            <input type="text" id="Reg_Expr_Date" name="Reg_Expr_Date" value="@Model.Reg_Expr_Date.ToString("dd/MM/yyyy")" readonly />
                        }
                        else
                        {
                            <input type="text" id="Reg_Expr_Date" name="Reg_Expr_Date" readonly />
                        }
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Index_no)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        <input type="text" id="Index_no" name="Index_no" value="@Model.Index_no"/>
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Plate_no)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        <input type="text" id="Plate_no" name="Plate_no" value="@Model.Plate_no"/>
                    </div>
                </td>
            </tr>
            <tr>
                 <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Insurance_ExpDate)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @if (Model.Insurance_ExpDate > Convert.ToDateTime("01/01/0001"))
                        {
                            <input type="text" id="Insurance_ExpDate" name="Insurance_ExpDate" value="@Model.Insurance_ExpDate.ToString("dd/MM/yyyy")" readonly />
                        }
                        else
                        {
                            <input type="text" id="Insurance_ExpDate" name="Insurance_ExpDate" readonly />
                        }
                    </div>
                </td>
            </tr>

        </table>
    </fieldset>
    
        <div style="width: 100%; text-align: center;">
            @Html.ActionLink("Back to List", "DieselEuipmentList", null, new { onclick="HyperLinkProgressIconFunction()"})
            <input type="submit" value="Update" onclick="ProgressIconFunction('#form1')"/>
        </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {

            $('#Date_Of_Purchase').datepicker({
                dateFormat: "dd/mm/yy",
                buttonImageOnly: true,
                buttonImage: '../Images/Calender.png',
                showOn: 'both',
                changeMonth: true,
                changeYear: true
            });

            $('#Insurance_ExpDate').datepicker({
                dateFormat: "dd/mm/yy",
                buttonImageOnly: true,
                buttonImage: '../Images/Calender.png',
                showOn: 'both',
                changeMonth: true,
                changeYear: true
            });

            $('#Reg_Issued_Date').datepicker({
                dateFormat: "dd/mm/yy",
                buttonImageOnly: true,
                buttonImage: '../Images/Calender.png',
                showOn: 'both',
                changeMonth: true,
                changeYear: true
            });

            $('#Reg_Expr_Date').datepicker({
                dateFormat: "dd/mm/yy",
                buttonImageOnly: true,
                buttonImage: '../Images/Calender.png',
                showOn: 'both',
                changeMonth: true,
                changeYear: true,
                onClose: function () {
                    if ($('#Reg_Issued_Date').val() != "" && $('#Reg_Expr_Date').val() != "") {
                        var dt1 = $('#Reg_Expr_Date').datepicker('getDate');
                        var dt2 = $('#Reg_Issued_Date').datepicker('getDate');
                        //check to prevent a user from entering a date below date of dt1
                        if (dt1 < dt2) {
                            jAlert("Registration Expiry date cannot be before Registration Issued date");
                            $('#Reg_Expr_Date').val("");
                        }
                }
            }
            });
        });
    </script>
}
