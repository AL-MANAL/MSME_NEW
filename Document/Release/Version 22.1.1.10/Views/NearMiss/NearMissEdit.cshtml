@model ISOStd.Models.NearMissModels

@{
    ViewBag.Title = "AddNearMiss";
}


@section featured {




    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>


        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("NearMissList", "NearMiss", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Near Miss List</span>
                    </a>
                    <span class="breadcrumb-item active">Edit Near Miss Action</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            <div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm("NearMissEdit", "NearMiss", FormMethod.Post,
                     new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)


    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Add Near Miss </h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>

                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">
                <input type="hidden" id="id_nearmiss" name="id_nearmiss" value="@Model.id_nearmiss" />
                <table class="table table-lg">
                    <tbody>

                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.incident_date)<text style="color: red;">*</text>

                            </td>
                            <td class="col">


                                @if (Model.incident_date > Convert.ToDateTime("01/01/0001"))
                                {
                                    <input class="form-control" type="date" id="incident_date" name="incident_date" value="@Model.incident_date.ToString("yyyy-MM-dd")"
                                           required="required" />
                                }
                                else
                                {
                                    <input class="form-control" type="date" id="incident_date" name="incident_date" required="required" />
                                }
                                <br />   <p>
                                    Hr: <select class="select-fixed-single" name="PlanTimeInHour" id="PlanTimeInHour">
                                        @if (ViewBag.PlanTimeInHour != null)
                                        {
                                            foreach (var data in ViewBag.PlanTimeInHour)
                                            {
                                                if (Convert.ToInt16(Model.incident_date.ToString("HH")) == Convert.ToInt16(data))
                                                {
                                                    <option value='@data' selected>@data</option>
                                                }
                                                else
                                                {
                                                    <option value='@data'>@data</option>
                                                }
                                            }
                                        }
                                    </select>
                                    Min:
                                    <select class="select-fixed-single" name="PlanTimeInMin" id="PlanTimeInMin">
                                        @if (ViewBag.PlanTimeInMin != null)
                                        {
                                            foreach (var data in ViewBag.PlanTimeInMin)
                                            {
                                                if (Convert.ToInt16(Model.incident_date.ToString("mm")) == Convert.ToInt16(data))
                                                {
                                                    <option value='@data' selected>@data</option>
                                                }
                                                else
                                                {
                                                    <option value='@data'>@data</option>
                                                }
                                            }
                                        }
                                    </select>
                                </p>

                            </td>
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.reported_date)

                            </td>
                            <td class="col">

                                <input class="form-control" type="date" id="reported_date" name="reported_date" value="@Model.reported_date.ToString("yyyy-MM-dd")" />

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.location)

                            </td>
                            <td class="col">


                                @*<select class="select-fixed-single" readonly id="location" name="location" onchange="getReportNo()">
            <option value='' hidden>Select</option>
            @if (ViewBag.Location != null)
            {
                foreach (var item in ViewBag.Location)
                {
                    if (item.Text == Model.location)
                    {
                        <option value='@item.Value' selected>@item.Text</option>
                    }
                    else
                    {
                        <option value='@item.Value'>@item.Text</option>
                    }
                }
            }
        </select>*@


                                <input class="form-control" type="text" id="location" name="location" value="@Model.location" readonly style="background: #efefe6;" />

                            </td>
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.project)

                            </td>
                            <td class="col">
                                <select class="form-control select-search select2-hidden-accessible" id="project" name="project">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.Project != null)
                                    {
                                        foreach (var item in ViewBag.Project)
                                        {
                                            if (item.Text == Model.project)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>

                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.report_no)<text style="color: red;">*</text>

                            </td>
                            <td class="col">

                                @Html.EditorFor(model => model.report_no, new { htmlAttributes = new { @readonly = "readonly", style = "background: #efefe6;" ,@class="form-control" } })


                            </td>
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.reported_by)

                            </td>
                            <td class="col">

                                <select class="form-control select-search select2-hidden-accessible" id="reported_by" name="reported_by" onchange="SetField()">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.EmpList != null)
                                    {
                                        foreach (var item in ViewBag.EmpList)
                                        {
                                            if (item.Text == Model.reported_by)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }

                                        }
                                    }
                                </select>

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.reported_by_position)

                            </td>
                            <td class="col">

                                <input class="form-control" type="text" id="reported_by_position" name="reported_by_position" value="@Model.reported_by_position" readonly style="background: #efefe6;" />


                            </td>
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.reported_by_dept)

                            </td>
                            <td class="col">

                                <input class="form-control" type="text" id="reported_by_dept" name="reported_by_dept" value="@Model.reported_by_dept" readonly style="background: #efefe6;" />

                            </td>
                        </tr>

                        <tr class="row">
                            @*<td>
            <div class="editor-label">
                @Html.LabelFor(model => model.location)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.location)
            </div>
        </td>*@
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.upload)

                            </td>
                            <td class="col">


                     
                                <input type="file" name="upload" id="upload" title="Plan Report documents" onchange="FileFormatValidation(this)"
                                       multiple="multiple" accept=".pdf, .doc, .docx,image/*" class="bootstrap-uploader" data-fouc />

                                <span class="form-text text-muted"><code>(Hold Ctrl Key in case of multiple files or drag multiple files and drop here)</code></span>
                                <br />
                                @if (Model.upload != null && Model.upload != "" && Model.upload.Length > 0)
                                {
                                    <h6> <span class="bg-dark py-1 px-2 rounded">Document List</span></h6>

                                    <span class="form-text text-muted">
                                        <code>
                                            (Uncheck in case to remove a uploaded file)
                                        </code>
                                    </span>
                                    foreach (var docs in Model.upload.Trim(',').Split(','))
                                    {
                                        <div class="form-check">
                                            <label class="form-check-label">
                                                <input type="checkbox" id="QCDocsVal" name="QCDocsVal" class="form-check-input-styled QCDocsVal" value="@docs.Trim(',')" checked title="Uncheck in case to remove a uploaded file" data-fouc   />
                                                <input type="hidden" id="QCDocsValselectall" name="QCDocsValselectall" />
                                                <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" class="text-orange">
                                                    @System.IO.Path.GetFileName(docs)
                                                </a>
                                            </label>
                                        </div>
                                    }
                                }

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col" colspan="4">

                                <label for="Discrepancy_Details" style="background-color: #4cc4dd; width: 100%; color: white; padding-left: 5px;">Description of near-miss incident</label>

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col" colspan="4">

                                @Html.TextAreaFor(model => model.description, new {  @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position" })

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col" colspan="4">

                                <label for="Discrepancy_Details" style="background-color: #4cc4dd; width: 100%; color: white; padding-left: 5px;">Effect of incident</label>

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col" colspan="4">

                                @Html.TextAreaFor(model => model.effect_incident, new { @maxlength = "2000", @placeholder = "Textarea", @style = "overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;", @rows = "4", @cols = "4", @class = "form-control elastic maxlength-badge-position" })

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.reviewed_by)

                            </td>
                            <td class="col">

                                <select class="form-control select-search select2-hidden-accessible" id="reviewed_by" name="reviewed_by">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.EmpList != null)
                                    {
                                        foreach (var item in ViewBag.EmpList)
                                        {
                                            if (item.Text == Model.reviewed_by)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>


                            </td>
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.causes)

                            </td>
                            <td class="col">

                                <select class="form-control select-fixed-multiple" multiple="multiple" data-fouc id="causes" name="causes" >
                                    @if (ViewBag.NearmissCause != null)
                                    {
                                        foreach (var item in ViewBag.NearmissCause)
                                        {
                                            if (Model.causes.Contains(item.Text))
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>

                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>

        </div>
   
        <div class="card-footer bg-white d-flex justify-content-between align-items-center">


            @Html.ActionLink("Back to List", "NearMissList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })
            <button type="submit" id="btnCreate" value="Save" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Save</button>
        </div>

    </div>
}
@section Scripts {
    <script>
        //----zzz
    $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
    });
    //zzz----
        function SetField()
        {
            var empid = document.getElementById("reported_by").value;
            jQuery.ajax({
                url: '@Url.Action("GetEmpDetail", "NearMiss")',
                type: 'POST',
                dataType: "json",
                data: { 'empid': empid },
                success: function (result) {
                    if (result != "") {
                        document.getElementById("reported_by_position").value = result.Designation;
                        document.getElementById("reported_by_dept").value = result.DeptID;
                    }
                }

            });
        }

        // Default initialization
        $('.form-check-input-styled').uniform();

            $("#QCDocsVal").click(function () {
                if ($("#QCDocsVal").prop('checked')) {
                    {
                        $(this).prop('checked', true);
                    }
                }
                else {

                    $(this).prop('checked', false);
                    document.getElementById("QCDocsValselectall").value = "DeleteQC";
                }
            });
      
        function FileFormatValidation(file) {
            var ext = file.value.split(".").pop().toLowerCase();
            if ($.inArray(ext, ["pdf", "xlsx", "xls", "doc", "docx"]) == -1) {
                file.value = "";
                bootbox.alert({
                    title: 'File type',
                    message: 'Invalid file format, please upload only doc, pdf, xlsx, xls, docx format'
                });
            }
        }

         function getReportNo()
           {
             var location = $('#location :selected').text();

             if (location != "Select") {
             jQuery.ajax({
                    url: '@Url.Action("FunGetReportNo", "NearMiss")',
                    type: 'POST',
                    dataType: "json",

                    data: { 'location': location },
                    success: function (result) {
                        document.getElementById("report_no").value = result;
                    }
                });
              }
           }
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
