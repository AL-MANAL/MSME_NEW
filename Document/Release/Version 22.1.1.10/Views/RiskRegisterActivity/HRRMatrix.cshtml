@model IEnumerable<ISOStd.Models.RiskRegisterActivityModels>
@using System.Data;
@{
    Layout = null;
    int[,] matrix = new int[10, 10];

    if (ViewBag.Matrix != null) //with exposure
    {
        matrix = ViewBag.Matrix;
    }
    if (ViewBag.Matrix1 != null) //without exposure
    {
        matrix = ViewBag.Matrix1;
    }
    DataSet dsRating = new DataSet();

    if (ViewBag.dsRating != null)
    {
        dsRating = ViewBag.dsRating;
    }

    Dictionary<string, string> dsMatcolors = new Dictionary<string, string>();
    if (ViewBag.dsMatcolors != null)
    {
        dsMatcolors = ViewBag.dsMatcolors;
    }

    //string negligible = "";
    //string accepted = "";
    //string medium = "";
    //string high = "";
    //string veryhigh = "";
    //if (ViewBag.dsColor != null)
    //{
    //    foreach (var item in ViewBag.dsColor)
    //    {
    //        if (item.Value.ToLower() == "negligible")
    //        {
    //            negligible = item.Text;
    //        }
    //        if (item.Value.ToLower() == "accepted")
    //        {
    //            accepted = item.Text;
    //        }
    //        if (item.Value.ToLower() == "medium")
    //        {
    //            medium = item.Text;
    //        }
    //        if (item.Value.ToLower() == "high")
    //        {
    //            high = item.Text;
    //        }
    //        if (item.Value.ToLower() == "very high")
    //        {
    //            veryhigh = item.Text;
    //        }
    //    }
    //}
}
@*<style>
     .negligible {
        background-color: @negligible;
     text-align:center;
    }
    .accepted {
        background-color: @accepted;
     text-align:center;
    }
    .medium {
        background-color: @medium;
     text-align:center;
    }
    .high {
        background-color: @high;
     text-align:center;
    }
    .veryhigh {
        background-color: @veryhigh;
     text-align:center;
    }
</style>*@
<div>
    <h4 style="text-align: center; border-bottom: 1px solid #808080">HRR Matrix</h4>

</div>
@if (ViewBag.Matrix1 != null)
{
<div>
    <table>
        <tr>
          <td>
                  <h5 style="text-align:center">Severity</h5>
          </td>
            <td style="width:80px">
    <table id="tabcontent">
        @{
            int i = 0, k = 0, j = 0, zz = 0;
            string zz1 = "";
        }

        @foreach (var item in ViewBag.MatrixSev_id)
        {
        <tr>
            <td style="width: 200px; min-width: 200px; max-width: 200px; background-color: #d0f1ef; text-align: center;word-wrap:break-word">
                @item.Value<br />
                @item.Text
            </td>
            @for (i = k; i <= matrix.GetLength(0);)
            {
                j = 0;

                if (matrix[i, j] == 0 && j == 0)
                {
                    goto breakloop;
                }
                for (j = 0; j < matrix.GetLength(1); j++)
                {
                    zz++;
                    if (matrix[i, j] != 0)
                    {

                        zz1 = Convert.ToString(zz);
                        if (dsMatcolors.ContainsKey(zz1))
                        {
                            var userIDFromDictionaryByKey = dsMatcolors[zz1];

                            <td style="text-align:center;background-color:@userIDFromDictionaryByKey">
                                @matrix[i, j]
                            </td>

                        }
                        @*if (matrix[i, j] >= 1 && matrix[i, j] <= 6)
                    {
                        <td class="negligible">
                            @matrix[i, j]
                        </td>
                    }
                    if (matrix[i, j] >= 7 && matrix[i, j] <= 11)
                    {
                        <td class="accepted">
                            @matrix[i, j]
                        </td>
                    }
                    if (matrix[i, j] >= 12 && matrix[i, j] <= 20)
                    {
                        <td class="medium">
                            @matrix[i, j]
                        </td>
                    }
                    if (matrix[i, j] >= 21 && matrix[i, j] < 50)
                    {
                        <td class="high">
                            @matrix[i, j]
                        </td>
                    }*@

                    }
                    if (matrix[i, j] == 0 && j == 0)
                    {
                        goto breakloop;
                    }
                }
                break;
            }
            @{
                k++;
            }
        </tr>
        }

        @{
        breakloop:
        }
        <tr>

            <td></td>
            @foreach (var item in ViewBag.MatrixProbability)
            {
                <td style="width: 60px; min-width: 60px; max-width: 60px; background-color: #d0f1ef; text-align: center">
                    @item.Value<br />
                    @item.Text
                </td>
            }
        </tr>
    </table>
     <h5 style="text-align:center;height:2px">Probability</h5>
            </td>
        </tr>
    </table>      

</div>
}

@if(ViewBag.Matrix != null)
{
<div>
    <table>
        <tr>
          <td >
                  <h5 style="text-align:center;word-wrap:break-word">Severity</h5>
          </td>
            <td style="width:70px">
    <table>
        @{
            int i = 0, k = 0, j = 0, zz = 0;
            string zz1 = "";
        }
     
             @for (int m = 0; m < ViewBag.MatrixSeverity.Count; m++)
             {
        <tr>
            <td style="width: 200px; min-width: 200px; max-width: 200px; background-color: #d0f1ef; text-align: center;word-wrap:break-word">
                @ViewBag.MatrixSeverity[m].Id<br />
                @ViewBag.MatrixSeverity[m].Name
            </td>
            @for (i = k; i <= matrix.GetLength(0);)
            {
                j = 0;

                if (matrix[i, j] == 0 && j == 0)
                {
                    goto breakloop;
                }
                for (j = 0; j < matrix.GetLength(1); j++)
                {
                    zz++;
                    if (matrix[i, j] != 0)
                    {
                        zz1 = Convert.ToString(zz);
                        if (dsMatcolors.ContainsKey(zz1))
                        {
                            var userIDFromDictionaryByKey = dsMatcolors[zz1];

                            <td style="text-align:center;background-color:@userIDFromDictionaryByKey">
                                @matrix[i, j]
                            </td>

                        }
                        @*if (matrix[i, j] >= 1 && matrix[i, j] <= 8)
                    {
                        <td class="negligible">
                            @matrix[i, j]
                        </td>
                    }
                    if (matrix[i, j] >= 9 && matrix[i, j] <= 27)
                    {
                        <td class="accepted">
                            @matrix[i, j]
                        </td>
                    }
                    if (matrix[i, j] >= 28 && matrix[i, j] <= 64)
                    {
                        <td class="medium">
                            @matrix[i, j]
                        </td>
                    }
                    if (matrix[i, j] >= 65 && matrix[i, j] <= 100)
                    {
                        <td class="high">
                            @matrix[i, j]
                        </td>
                    }
                    if (matrix[i, j] >= 101 && matrix[i, j] <= 125)
                    {
                        <td class="veryhigh">
                            @matrix[i, j]
                        </td>
                    }*@
                    }
                    if (matrix[i, j] == 0 && j == 0)
                    {
                        goto breakloop;
                    }
                }
                break;
            }
            @{
                k++;
            }
            <td style="width: 200px; min-width: 200px; max-width: 200px; background-color: #d0f1ef; text-align: center;word-wrap:break-word">
                @ViewBag.MatrixExposure[m].Id<br />
                @ViewBag.MatrixExposure[m].Name
            </td>

        </tr>
        }

        @{
        breakloop:
        }
        <tr>

            <td></td>
            @foreach (var item in ViewBag.MatrixProbability)
            {
                <td style="width: 60px; min-width: 60px; max-width: 60px; background-color: #d0f1ef; text-align: center">
                    @item.Value<br />
                    @item.Text
                </td>
            }
        </tr>

        @*  <tr>
              <td></td>
              <td></td>
              <td colspan="4" style="width:60px;min-width:60px; max-width:60px;background-color:#d0f1ef;text-align:center">Likelihood</td>
          </tr>*@
    </table>
     <h5 style="text-align:center">Probability</h5>
            </td>
              <td style="width:15px">
                  <h5 style="text-align:center;word-wrap:break-word">Exposure</h5>
          </td>

        </tr>
    </table>
   
</div>
}

<div>
    <h5 style="text-align: center; border-bottom: 1px solid #808080">Criteria for Risk Rating</h5>

</div>
  <div style="max-width: 70%; padding-left: 300px;">
    @if (dsRating != null && dsRating.Tables.Count > 0 && dsRating.Tables[0].Rows.Count > 0)
    {
            
            <table>
                <tr>
                    <th style="width: 70px; min-width: 70px; max-width: 70px;background-color: #d0f1ef; text-align: center;">From Value</th>
                  <th style="width: 70px; min-width: 70px; max-width: 70px;background-color: #d0f1ef; text-align: center;">To Value</th>
                    <th style="width: 70px; min-width: 70px; max-width: 70px;background-color: #d0f1ef; text-align: center;">Rating</th>
                      </tr>
                @for (int m = 0; m < dsRating.Tables[0].Rows.Count; m++)
                {                 
                    <tr>
                        <td style="width: 70px; min-width: 70px; max-width: 70px;">
                            @dsRating.Tables[0].Rows[m]["from_value"].ToString()
                        </td> 
                        <td style="width: 70px; min-width: 70px; max-width: 70px;word-wrap:break-word">
                            @dsRating.Tables[0].Rows[m]["to_value"].ToString()
                        </td>
                        <td style="width: 70px; min-width: 70px; max-width: 70px;word-wrap:break-word">
                            @dsRating.Tables[0].Rows[m]["rate_desc"].ToString()
                        </td>
                    </tr>
                }
            </table>
        
    }
</div>

