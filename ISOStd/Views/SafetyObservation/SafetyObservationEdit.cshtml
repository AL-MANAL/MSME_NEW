@model ISOStd.Models.SafetyObservationModels
@{
    ViewBag.Title = "SafetyObservationEdit";
}

@section featured {

    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("SafetyObservationList", "SafetyObservation", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Safety Observation Card</span>
                    </a>
                    <span class="breadcrumb-item active"> Update Safety Observation Card</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">

                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>
                        <div class="dropdown-menu dropdown-menu-right">
                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}

@using (Html.BeginForm("SafetyObservationEdit", "SafetyObservation", FormMethod.Post,
                         new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
  
        <input type="hidden" id="id_safety_observation" name="id_safety_observation" value="@Model.id_safety_observation" />
         <div class="card">
            <div class="card-header header-elements-inline bg-primary">
                <h5 class="card-title">Update Safety Observation Card </h5>
                <div class="header-elements">
                    <div class="list-icons">
                        <a class="list-icons-item" data-action="collapse"></a>

                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="container-fluid">

                    <table class="table table-lg">

                        <tbody>
                            <tr class="row">
                                <td class="col-xs-3 col-md-2">
                                    @Html.LabelFor(model => model.report_no)
                                </td>
                                <td class="col-xs-6 col-md-4">
                                    @Html.EditorFor(model => model.report_no, new { htmlAttributes = new { @readonly = "readonly", style = "background: #efefe6;", @class = "form-control" } })
                                </td>
                            </tr>
                            <tr class="row">
                                <td class="col-xs-3 col-md-2">
                                    @Html.LabelFor(model => model.observation_date)
                                </td>
                                <td class="col">
                                    @if (Model.observation_date > Convert.ToDateTime("01/01/0001"))
                                    {
                                        <input class="form-control" type="date" id="observation_date" name="observation_date" value="@Model.observation_date.ToString("yyyy-MM-dd")" required="required" />
                                    }
                                    else
                                    {
                                        <input class="form-control" type="date" id="observation_date" name="observation_date" required="required" />
                                    }
                                    Hr: <select name="PlanTimeInHour" id="PlanTimeInHour" class="select-fixed-single" data-fouc>
                                        @if (ViewBag.PlanTimeInHour != null)
                                        {
                                            foreach (var data in ViewBag.PlanTimeInHour)
                                            {
                                                if (Convert.ToInt16(Model.observation_date.ToString("HH")) == Convert.ToInt16(data))
                                                {
                                                    <option value='@data' selected>@data</option>
                                                }
                                                else
                                                {
                                                    <option value='@data'>@data</option>
                                                }
                                            }
                                        }
                                    </select>
                                    Min:
                                    <select name="PlanTimeInMin" id="PlanTimeInMin" class="select-fixed-single" data-fouc>
                                        @if (ViewBag.PlanTimeInMin != null)
                                        {
                                            foreach (var data in ViewBag.PlanTimeInMin)
                                            {
                                                if (Convert.ToInt16(Model.observation_date.ToString("mm")) == Convert.ToInt16(data))
                                                {
                                                    <option value='@data' selected>@data</option>
                                                }
                                                else
                                                {
                                                    <option value='@data'>@data</option>
                                                }
                                            }
                                        }
                                    </select>
                                </td>
                                <td class="col-xs-3 col-md-2">
                                    @Html.LabelFor(model => model.type_observation)
                                </td>
                                <td class="col">
                                    <select class="form-control select-search select2-hidden-accessible" data-fouc id="type_observation" name="type_observation" required>
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.ObservationType != null)
                                        {
                                            foreach (var item in ViewBag.ObservationType)
                                            {
                                                if (item.Text == Model.type_observation)
                                                {
                                                    <option value='@item.Value' selected>@item.Text</option>
                                                }
                                                else
                                                {
                                                    <option value='@item.Value'>@item.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                </td>
                            </tr>
                            <tr class="row">
                                <td class="col-xs-3 col-md-2">
                                    @Html.LabelFor(model => model.desc_observation)<text style="color:red;">*</text>

                                </td>
                                <td class="col">
                                    <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="desc_observation" name="desc_observation" required>@Model.desc_observation</textarea>
                                </td>
                                <td class="col-xs-3 col-md-2">

                                    @Html.LabelFor(model => model.action_taken)<text style="color:red;">*</text>

                                </td>
                                <td class="col">
                                    <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="action_taken" name="action_taken" required>@Model.action_taken</textarea>

                                </td>
                            </tr>
                            <tr class="row">
                                <td class="col-xs-3 col-md-2">
                                    @Html.LabelFor(model => model.observed_by)<text style="color:red;">*</text>

                                </td>
                                <td class="col">
                                    <select class="form-control select-search select2-hidden-accessible" data-fouc id="observed_by" name="observed_by" required>
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.Observer != null)
                                        {
                                            foreach (var item in ViewBag.Observer)
                                            {
                                                if (item.Text == Model.observed_by)
                                                {
                                                    <option value='@item.Value' selected>@item.Text</option>
                                                }
                                                else
                                                {
                                                    <option value='@item.Value'>@item.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                </td>

                                <td class="col-xs-3 col-md-2">
                                    @Html.LabelFor(model => model.reported_by)<text style="color:red;">*</text>

                                </td>
                                <td class="col">
                                    <input class="form-control" type="text" id="reported_by" name="reported_by" value="@Model.reported_by" required />
                                </td>
                            </tr>

                            <tr class="row">
                                <td class="col-xs-3 col-md-2">
                                    @Html.LabelFor(model => model.location)<text style="color:red;">*</text>

                                </td>
                                <td class="col">
                                    @Html.EditorFor(model => model.location, new { htmlAttributes = new { @*@readonly = "readonly", @style = "background: #efefe6;",*@@class = "form-control"
                                }
                            })

                                </td>

                                <td class="col-xs-3 col-md-2">
                                    @Html.LabelFor(model => model.project)

                                </td>
                                <td class="col">
                                    @Html.EditorFor(model => model.project, new { htmlAttributes = new { @*@readonly = "readonly", @style = "background: #efefe6;",*@@class = "form-control"
                                }
                            })

                                </td>
                            </tr>
                            <tr class="row">
                                <td class="col-xs-3 col-md-2">
                                    @Html.LabelFor(model => model.status)
                                </td>
                                <td class="col">
                                    <select class="form-control select-search select2-hidden-accessible" data-fouc id="status" name="status" required>
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.Status != null)
                                        {
                                            foreach (var item in ViewBag.Status)
                                            {
                                                if (item.Text == Model.status)
                                                {
                                                    <option value='@item.Value' selected>@item.Text</option>
                                                }
                                                else
                                                {
                                                    <option value='@item.Value'>@item.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                </td>
                                <td class="col-xs-3 col-md-2">
                                    @Html.LabelFor(model => model.target_date)
                                </td>
                                <td class="col">
                                    @if (Model.target_date > Convert.ToDateTime("01/01/0001"))
                                    {
                                        <input class="form-control" type="date" id="target_date" name="target_date" value="@Model.target_date.ToString("yyyy-MM-dd")" required="required" />
                                    }
                                    else
                                    {
                                        <input class="form-control" type="date" id="target_date" name="target_date" required="required" />
                                    }
                                </td>
                            </tr>
                            <tr class="row">
                                <td class="col-xs-3 col-md-2">
                                    @Html.LabelFor(model => model.dept)<text style="color:red;">*</text>

                                </td>
                                <td class="col">
                                    <select class="form-control select-search select2-hidden-accessible" data-fouc id="dept" name="dept" required>
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.Dept != null)
                                        {
                                            foreach (var item in ViewBag.Dept)
                                            {
                                                if (item.Value == Model.dept)
                                                {
                                                    <option value='@item.Value' selected>@item.Text</option>
                                                }
                                                else
                                                {
                                                    <option value='@item.Value'>@item.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                </td>
                                <td class="col-xs-3 col-md-2">
                                    @Html.LabelFor(model => model.resp_person)<text style="color:red;">*</text>

                                </td>
                                <td class="col">
                                    <select class="form-control select-search select2-hidden-accessible" data-fouc id="resp_person" name="resp_person" required>
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.EmpList != null)
                                        {
                                            foreach (var item in ViewBag.EmpList)
                                            {
                                                if (item.Value == Model.resp_person)
                                                {
                                                    <option value='@item.Value' selected>@item.Text</option>
                                                }
                                                else
                                                {
                                                    <option value='@item.Value'>@item.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                </td>
                            </tr>
                            <tr class="row">
                                <td class="col-xs-3 col-md-2">
                                    @Html.LabelFor(model => model.comments)<text style="color:red;">*</text>

                                </td>
                                <td class="col">
                                    <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="comments" name="comments" required>@Model.comments</textarea>
                                </td>
                                <td class="col-xs-3 col-md-2">
                                    @Html.LabelFor(model => model.upload)
                                </td>
                                <td class="col">
                                    <input type="file" name="upload" id="upload" title="Documents" onchange="FileFormatValidation(this)"
                                           multiple="multiple" accept=".pdf, .doc, .docx,image/*" class="bootstrap-uploader" data-fouc />

                                    <span class="form-text text-muted"><code>(Hold Ctrl Key in case of multiple files or drag multiple files and drop here)</code></span>
                                    <br />
                                    @if (Model.upload != null && Model.upload != "" && Model.upload.Length > 0)
                                    {
                                        <h6> <span class="bg-dark py-1 px-2 rounded">Document List</span></h6>

                                        <span class="form-text text-muted">
                                            <code>
                                                (Uncheck in case to remove a uploaded file)
                                            </code>
                                        </span>
                                        foreach (var docs in Model.upload.Trim(',').Split(','))
                                        {
                                            <div class="form-check">
                                                <label class="form-check-label">
                                                    <input type="checkbox" id="QCDocsVal" name="QCDocsVal" class="form-check-input-styled QCDocsVal" value="@docs.Trim(',')" checked title="Uncheck in case to remove a uploaded file" data-fouc />
                                                    <input type="hidden" id="QCDocsValselectall" name="QCDocsValselectall" />
                                                    <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" class="text-orange">
                                                        @System.IO.Path.GetFileName(docs)
                                                    </a>
                                                </label>
                                            </div>
                                        }
                                    }
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="card-footer bg-white d-flex justify-content-between align-items-center">

                @Html.ActionLink("Back to List", "SafetyObservationList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })

                <button class="btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400" type="submit" value="Update" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Update</button>

            </div>
        </div>

           
        }

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
            <script type="text/javascript">


                                 //----zzz
                    $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
                    });

    //zzz----

                // Default initialization
                $('.form-check-input-styled').uniform();

                function FileFormatValidation(file) {
                    var ext = file.value.split(".").pop().toLowerCase();
                    if ($.inArray(ext, ["pdf", "xlsx", "xls", "doc", "docx"]) == -1) {
                        file.value = "";
                        bootbox.alert({
                            title: 'File type',
                            message: 'Invalid file format, please upload only doc, pdf, docx, jpg, jpeg, gif, png format'
                        });
                    }
                }                                             

                    $("#QCDocsVal").click(function () {
                        if ($("#QCDocsVal").prop('checked')) {
                            {
                                $(this).prop('checked', true);
                            }
                        }
                        else {

                            $(this).prop('checked', false);
                            document.getElementById("QCDocsValselectall").value = "DeleteQC";
                        }

                    });
             
              
            </script>
        }






