@model ISOStd.Models.EmpPerformanceEvalModels

@{
    ViewBag.Title = "AddEmployeeCompetenceEval";
    System.Data.DataSet dsrating=new System.Data.DataSet();

    if (ViewBag.PeformanceRating != null)
    {
        dsrating=ViewBag.PeformanceRating ;
    }
    var today = DateTime.Today;
    var z = ""; var QId = 0; var m = 0; var n = 0;
}

@section featured {

    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Home</span>
                    </a>
                    <a href="@Url.Action("EmployeePerformanceEvalList", "EmployeePerformanceEval", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Performance Evaluation</span>
                    </a>
                    <span class="breadcrumb-item active">Add Performance Evaluation</span>

                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">

                   
                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}


@using (Html.BeginForm("AddEmployeePerformanceEval", "EmployeePerformanceEval", FormMethod.Post,
                     new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Add Performance Evaluation</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">

    <table class="table table-lg">
            <tr class="row">
                <td class="col-xs-3 col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.emp_id)<text style="color:red;">*</text>
                    </div>
                </td>
                <td class="col">
                    <div class="editor-field">
                        <select class="form-control select-search select2-hidden-accessible" data-fouc  id="emp_id" name="emp_id" required>
                            <option value='' hidden>Select</option>
                            @if (ViewBag.EmpList != null)
                            {
                                foreach (var item in ViewBag.EmpList)
                                {
                                <option value='@item.Value'>@item.Text</option>
                                }
                            }
                        </select>
			@Html.ValidationMessageFor(model => model.emp_id)
                    </div>
                </td>
                <td class="col-xs-3 col-md-2">

                    <div class="editor-label">
                        @Html.LabelFor(model => model.Evaluation_DoneOn)<text style="color:red;">*</text>
                    </div>
                </td>
                <td class="col">
                    <div class="editor-field">
                        <input class="form-control" type="date" id="Evaluation_DoneOn" name="Evaluation_DoneOn" required value="@today.ToString("yyyy-MM-dd")" />
			@Html.ValidationMessageFor(model => model.Evaluation_DoneOn)
                    </div>
                </td>
            </tr>
            <tr class="row">
                <td class="col-xs-3 col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Evaluated_From)<text style="color:red;">*</text>
                    </div>
                </td>
                <td class="col">
                    <div class="editor-field">
                        <input class="form-control" type="date" id="Evaluated_From" name="Evaluated_From" required  />
			@Html.ValidationMessageFor(model => model.Evaluated_From)
                    </div>
                </td>
                <td class="col-xs-3 col-md-2">

                    <div class="editor-label">
                        @Html.LabelFor(model => model.Evaluated_To)<text style="color:red;">*</text>
                    </div>
                </td>
                <td class="col">
                    <div class="editor-field">
                       <input class="form-control" type="date" id="Evaluated_To" name="Evaluated_To" required  />
			@Html.ValidationMessageFor(model => model.Evaluated_To)
                    </div>
                </td>
            </tr>
            <tr class="row">
                <td class="col-xs-3 col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Eval_DoneBy)<text style="color:red;">*</text>
                    </div>
                </td>
                <td class="col-xs-3 col-md-3">
                    <div class="editor-field">
                        <select class="form-control select-search select2-hidden-accessible" data-fouc id="Eval_DoneBy" name="Eval_DoneBy" required>
                            <option value='' hidden>Select</option>
                            @if (ViewBag.EmpHead != null)
                            {
                                foreach (var item in ViewBag.EmpHead)
                                {
                                <option value='@item.Value'>@item.Text</option>
                                }
                            }
                        </select>
			@Html.ValidationMessageFor(model => model.Eval_DoneBy)
                    </div>
                </td>
            </tr>
            <tr class="row">
                <td class="col-xs-3 col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Weakness)<text style="color:red;">*</text>
                    </div>
                </td>
                <td class="col">
                    <div class="editor-field">
                       <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="Weakness" name="Weakness" required></textarea>                                                   
                    @Html.ValidationMessageFor(model => model.Weakness)
		  </div>
                </td>
                <td class="col-xs-3 col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Strengths)<text style="color:red;">*</text>
                    </div>
                </td>
                <td class="col">
                    <div class="editor-field">
                       <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="Strengths" name="Strengths" required></textarea>                                                   
                    @Html.ValidationMessageFor(model => model.Strengths)
                    </div>
                </td>
            </tr>
            <tr class="row">
                <td class="col-xs-3 col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Training_Reqd)<text style="color:red;">*</text>
                    </div>
                </td>
               <td class="col">
                    <div class="editor-field">
                          <select class="form-control select-search select2-hidden-accessible" data-fouc id="Training_Reqd" name="Training_Reqd" required>
                               <option value='' hidden>Select</option>
                            @if (ViewBag.YesNo != null)
                            {
                                foreach (var item in ViewBag.YesNo)
                                {
                                    <option value='@item'>@item</option>
                                }
                            }
                        </select>
 			@Html.ValidationMessageFor(model => model.Training_Reqd)
                    </div>
                </td>
                <td class="col-xs-3 col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Actions_Taken)<text style="color:red;">*</text>
                    </div>
                </td>
               <td class="col">
                    <div class="editor-field">
                      <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="Actions_Taken" name="Actions_Taken" required></textarea>                                                   
                    @Html.ValidationMessageFor(model => model.Actions_Taken) 
                    </div>
                </td>
            </tr>
            <tr class="row">
                @*<td class="col-xs-3 col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Eval_ReviewedBy)<text style="color:red;">*</text>
                    </div>
                </td>
                <td class="col">
                    <div class="editor-field">
                        <select class="form-control select-search select2-hidden-accessible" data-fouc  id="Eval_ReviewedBy" name="Eval_ReviewedBy" required>
                            <option value='' hidden>Select</option>
                            @if (ViewBag.EmpHead != null)
                            {
                                foreach (var item in ViewBag.EmpHead)
                                {
                                <option value='@item.Value'>@item.Text</option>
                                }
                            }
                        </select>
 			@Html.ValidationMessageFor(model => model.Eval_ReviewedBy) 
                    </div>
                </td>*@
                <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.DocUploadPath)
                        </div>
                    </td>
                   <td class="col">
                        <div class="editor-field">
                         
			 <input type="file" name="fileUploader" id="fileUploader" onchange="FileFormatValidation(this)" accept=".pdf,.xlsx,.xls,.doc,.docx" class="bootstrap-uploader" data-fouc /> 
                        </div>

                   </td>
            </tr>
            </table>
 	    </div>
        </div>
     
    </div>

  <div class="card">
<div class="card-body">
    <div style="overflow-x:auto;">
                     <table class="table table-lg">
                    <thead>

                        <tr>
                         <th>
                            Sl.No
                        </th>
                        <th>
                             Questions
                        </th>
                       @if (dsrating.Tables.Count > 0 && dsrating.Tables[0].Rows.Count > 0)
                       {
                           for (int item = 0; item < dsrating.Tables[0].Rows.Count; item++)
                           {
                        <th>
                            @dsrating.Tables[0].Rows[item]["RatingOptions"].ToString()
                        </th>
                           }
                        }
                    </thead>
                    <tbody>
                        @if (ViewBag.PeformanceQuestions != null)
                        {
                            int iSrno = 0, itmctn = 0;
                            foreach (var item in ViewBag.PeformanceQuestions)
                            {
                                iSrno = iSrno + 1;
                                itmctn = itmctn + 1;
                                n = 0;
                                foreach (var data in ViewBag.PeformanceSection)
                                {

                                    if (n >= m || QId == 0)
                                    {
                                        if (z == "")
                                        {
                        <tr>
                            <td colspan="2">@data.Text</td>                           
                            
                            @if (dsrating.Tables.Count > 0 && dsrating.Tables[0].Rows.Count > 0)
                            {
                                for (int rating = 0; rating < dsrating.Tables[0].Rows.Count; rating++)
                                {
                                  <td></td>
                                }
                            }


                        </tr>

                                            z = data.Text;
                                            break;
                                        }
                                        else if (Convert.ToInt32(data.Value) != QId && z != data.Text)
                                        {
                                            <tr>
                                                <td colspan="2">@data.Text</td>
                                              @if (dsrating.Tables.Count > 0 && dsrating.Tables[0].Rows.Count > 0)
                            {
                                for (int rating = 0; rating < dsrating.Tables[0].Rows.Count; rating++)
                                {
                                  <td></td>
                                }
                            }                                             

                                            </tr>
                                            z = data.Text;
                                            break;
                                        }
                                        else if (Convert.ToInt32(data.Value) != QId && z == data.Text)
                                        {
                                            break;
                                        }
                                    }
                                    n++;
                                }
                                <tr>
                                    <td>
                                        @iSrno
                                    </td>
                                    <td>
                                        @item.Text
                                        <input type="hidden" id="Question @item.Value" name="Question @item.Value" value="@item.Value" />
                                    </td>

                                    @if (dsrating.Tables.Count > 0 && dsrating.Tables[0].Rows.Count > 0)
                                    {
                                        for (int rating = 0; rating < dsrating.Tables[0].Rows.Count; rating++)
                                        {
                                            <td>
                                                <input type="radio" id="SQ_OptionsId @item.Value"
                                                       name="SQ_OptionsId @item.Value"
                                                       class="radioClass" value="@dsrating.Tables[0].Rows[rating]["SQ_OptionsId"].ToString()" required />

                                            </td>
                                        }
                                    }

                                </tr>
                                QId = Convert.ToInt32(item.Value);
                                m++;
                            }
                            <div>
                                <input type="hidden" id="itmctn" name="itmctn" value="@itmctn" />
                            </div>
                        }

                    </tbody>
                </table>
        </div>
            </div>
     <div class="card-footer bg-white d-flex justify-content-between align-items-center">
          @Html.ActionLink("Back to List", "EmployeePerformanceEvalList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })
  
          <button type="submit" id="btnCreate" value="Save" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Save</button>
      </div>

</div>

}

@section Scripts {
     <script>

         function FileFormatValidation(file) {
             var ext = file.value.split(".").pop().toLowerCase();
             if ($.inArray(ext, ["pdf"]) == -1) {
                 file.value = "";
                 jAlert("Invalid file format, please upload only pdf format");
             }
         }
  </script>
    @Scripts.Render("~/bundles/jqueryval")
}