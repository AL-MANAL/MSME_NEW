@model ISOStd.Models.DocumentCreateRequestModels

@{
    ViewBag.Title = "DCRApporveDetails";
    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
}

@section featured {
    <div class="page-header page-header-light">
        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">
                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    @*<a href="@Url.Action("PPEIssueLogList", "PPEIssueLog", null)" class="breadcrumb-item">
                            <span class="breadcrumb-item"> PPE Issue Log List</span>
                        </a>*@
                    <span class="breadcrumb-item active">Document Create Request Details</span>
                </div>
                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">
                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>
                        <div class="dropdown-menu dropdown-menu-right">
                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}

<style>
    .hidden {
        display: none !important;
    }
</style>

<div class="card">
    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">Document Create Request Details</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>
            </div>
        </div>
    </div>

    @*<div>
            <div class="card-header bg-white header-elements-sm-inline">
                <div class="header-elements">
                    @if (Obj.GetCurrentUserSession().PpeLog.Contains("3"))
                    {
                        <a class="btn bg-orange btn-labeled btn-labeled-left" data-style="radius" href='@Url.Action("PPEIssueLogEdit", "PPEIssueLog", new { IssueLog_Id = Model.IssueLog_Id.ToString() })' title="Edit" onclick="HyperLinkProgressIconFunction()">
                            <b>  <i class="icon-add-to-list"></i></b> Edit
                        </a>
                    }
                    @Html.ActionLink("Back to List", "PPEIssueLogList", null, new { @class = "btn btn-outline bg-orange text-orange border-orange ml-3", onclick = "HyperLinkProgressIconFunction()" })
                </div>
            </div>
        </div>*@


    <div class="card-body">
        <div class="container-fluid">
            <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                <tbody>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.dcr_no)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.dcr_no)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.date_request)
                            </p>
                        </td>
                        <td class="col">
                            @if (Model.date_request > Convert.ToDateTime("01/01/0001"))
                            {
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Model.date_request.ToString("dd/MM/yyyy")
                                </p>
                            }
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.division)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.division)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.department)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.department)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.location)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.location)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.checkedby)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.checkedby)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.reason)
                            </p>
                        </td>
                        <td class="col" colspan="3">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.Raw(HttpUtility.HtmlDecode(Model.reason))
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        @*<td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.division)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.division)
                            </p>
                        </td>*@
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.upload)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @if (Model.upload != null && Model.upload != "")
                                {
                                    foreach (var doc in Model.upload.Trim(',').Split(','))
                                    {
                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = doc })' target="_blank" style="color: orange;">
                                            Preview
                                        </a>
                                    }

                                }
                            </p>
                        </td>
                    </tr>
                    @if (Model.doc_statusId == "1")
                    {
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.DisplayNameFor(model => model.checklist_id)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.checklist_id)
                                </p>
                            </td>
                            @*<td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.DisplayNameFor(model => model.agreed)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.agreed)
                                </p>
                            </td>*@
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.DisplayNameFor(model => model.doc_control) 
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.doc_controlName)
                                </p>
                            </td>
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.DisplayNameFor(model => model.doc_status)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.doc_status)
                                </p>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.DisplayNameFor(model => model.comments)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.comments)
                                </p>
                            </td>
                        </tr>
                    }
</table>
           
            @if (Model.doc_statusId == "0")// Checked by
            {

                using (Html.BeginForm("DCRCheckecbyApporveDetails", "DocumentCreateRequest", FormMethod.Post,
                         new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    <input type="hidden" id="id_doc_request" name="id_doc_request" value="@Model.id_doc_request" />
                    <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">

                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    Complete Checklist <text style="color:red;">*</text>
                                </p>
                            </td>
                            <td class="col">
                                @*<p class="bg-dark py-1 px-2 rounded">
                                    <select class="form-control select-search select2-hidden-accessible" data-fouc id="checklist_id" name="checklist_id" required onmouseover="GetChecklist()">
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.CheckList != null)
                                        {
                                            foreach (var item in ViewBag.CheckList)
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    </select>
                                </p>*@
                                 <p class="bg-dark py-1 px-2 rounded">
                                    <input type="text" class="form-control" id="checklist_id" name="checklist_id" onmouseover="GetChecklist()" required />
                                </p>
                            </td>
                            <td class="col-xs-3 col-md-2">
                                <a href='@Url.Action("GenerateDCRChecklist", "DocumentCreateRequest", new { id_doc_request = Model.id_doc_request })' title="Create CheckList" target="_blank">
                                    <span class="badge badge-info">Create</span>
                                </a>
                            </td>
                            <td class="col-xs-3 col-md-2">
                                <a href="#" data-toggle="popover" data-trigger="hover" class="text-orange">ChekList Info</a>
                            </td>
                            @*<td class="col-xs-3 col-md-2">
                <p class="bg-brown py-1 px-2 rounded">
                    Agreed <text style="color:red;">*</text>
                </p>
            </td>
            <td class="col">
                <p class="bg-dark py-1 px-2 rounded">
                    <label><input type="radio" id="agreed" name="agreed" value="agreed" required />Agreed</label>
                    <label><input type="radio" id="agreed" name="agreed" value="notagreed" required />Not Agreed</label>
                </p>
            </td>*@
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    Approve <text style="color:red;">*</text>
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    <label><input type="radio" id="doc_status_checkedby" name="doc_status_checkedby" value="1" required onchange="CheckedbyRequired()" />Agreed</label>
                                    <label><input type="radio" id="doc_status_checkedby" name="doc_status_checkedby" value="3" required onchange="CheckedbyRequired()" />Not Agreed</label>
                                </p>
                            </td>

                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    Comments
                                </p>
                            </td>
                            <td class="col">
                                <div class="bg-dark py-1 px-2 rounded">
                                    <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="comments" name="comments"></textarea>
                                </div>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.DisplayNameFor(model => model.doc_control) <text style="color:red;">*</text>
                                </p>
                            </td>
                            <td class="col-xs-6 col-md-4">
                                <p class="bg-dark py-1 px-2 rounded">
                                    <select class="form-control select-search select2-hidden-accessible" data-fouc id="doc_control" name="doc_control" required>
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.EmpList != null)
                                        {
                                            foreach (var item in ViewBag.EmpList)
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    </select>
                                </p>
                            </td>
                    </table>
                    <div class="card-footer bg-white d-flex justify-content-between align-items-center">
                        <button type="submit" id="btnCreate" value="Submit" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Submit</button>
                    </div>
                }
            }
            else if (Model.doc_statusId == "1")// Controller by
            {
                using (Html.BeginForm("DCRControllerApporveDetails", "DocumentCreateRequest", FormMethod.Post,
                       new { enctype = "multipart/form-data", id = "form2", name = "form2" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    <input type="hidden" id="id_doc_request" name="id_doc_request" value="@Model.id_doc_request" />
                    <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">

                        @*<tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.LabelFor(model => model.doc_level)<text style="color:red;">*</text>
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    <select class="form-control select-search select2-hidden-accessible" data-fouc id="doc_level" name="doc_level" required>
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.DocLevel != null)
                                        {
                                            foreach (var item in ViewBag.DocLevel)
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    </select>
                                </p>
                            </td>
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.LabelFor(model => model.doc_title)<text style="color:red;">*</text>
                                </p>
                            </td>
                            <td class="col-xs-6 col-md-4">
                                <p class="bg-dark py-1 px-2 rounded">
                                    <input type="text" class="form-control" id="doc_title" name="doc_title" required />
                                </p>
                            </td>
                        </tr>*@                     
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.LabelFor(model => model.division)<text style="color:red;">*</text>
                                </p>
                            </td>
                            <td class="col-xs-6 col-md-4">
                                <p class="bg-dark py-1 px-2 rounded">
                                    <select class="form-control select-search select2-hidden-accessible" data-fouc id="division" name="division" required onchange="GetDeptList()">
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.Branch != null)
                                        {
                                            foreach (var item in ViewBag.Branch)
                                            {
                                                if (item.Value == Model.divisionId)
                                                {
                                                    <option value='@item.Value' selected>@item.Text</option>
                                                }
                                                else
                                                {
                                                    <option value='@item.Value'>@item.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                </p>
                            </td>
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.LabelFor(model => model.department)<text style="color:red;">*</text>
                                </p>
                            </td>
                            <td class="col-xs-6 col-md-4">
                                <p class="bg-dark py-1 px-2 rounded">
                                    <select class="form-control select-search select2-hidden-accessible" data-fouc id="department" name="department" onchange="FunEmpty()" required>
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.Department != null)
                                        {
                                            foreach (var item in ViewBag.Department)
                                            {
                                                if (item.Value == Model.departmentId)
                                                {
                                                    <option value='@item.Value' selected>@item.Text</option>
                                                }
                                                else
                                                {
                                                    <option value='@item.Value'>@item.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                </p>
                            </td>
                        </tr>
                        <tr class="row">                            
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.LabelFor(model => model.serial_no)<text style="color:red;">*</text>
                                </p>
                            </td>
                            <td class="col-xs-6 col-md-4">
                                <p class="bg-dark py-1 px-2 rounded">
                                    <input type="text" class="form-control" id="serial_no" name="serial_no" onchange="DocumentReferenceName()" placeholder="Serial Number" required />
                                </p>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.LabelFor(model => model.new_doc_ref)<text style="color:red;">*</text>
                                </p>
                            </td>
                            <td class="col-xs-6 col-md-4">
                                <p class="bg-dark py-1 px-2 rounded">
                                    <input type="text" class="form-control" id="new_doc_ref" name="new_doc_ref" placeholder="Generated Automatically based on selection" readonly required />
                                </p>
                            </td>
                            <td class="col">
                                <span class="form-text text-center text-muted"><code class="text-center">Please note that document reference will be generated only after department has been selected and some text has been entered in Serial No.</code></span>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    Approval
                                </p>
                            </td>
                            <td class="col-xs-6 col-md-4">
                                <p class="bg-dark py-1 px-2 rounded">
                                    <label><input type="radio" id="doc_status_conroller" name="doc_status_conroller" value="2" onchange="ControlledbyRequired()" required />Approve</label>
                                    <label><input type="radio" id="doc_status_conroller" name="doc_status_conroller" value="3" onchange="ControlledbyRequired()" required />Reject</label>
                                </p>
                            </td>
                        </tr>
                    </table>
                    <div class="card-footer bg-white d-flex justify-content-between align-items-center">
                        <button type="submit" id="btnCreate" value="Submit" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form2')"><i class="icon-checkmark3 mr-2"></i> Submit</button>
                    </div>
                }
            }
        </div>
    </div>
</div>

@section Scripts {

    <script>
         $('[data-toggle="popover"]').popover({

                 title: setData,
                 html: true,
                 placement: 'right',
                 container: 'body'
             });

          function setData(id) {
             var set_data = '';
             //var element = $(this);
             //var id = element.attr("id");
              var id = document.getElementById("checklist_id").value;
             //if(id > 0){
             $.ajax({
               url: '@Url.Action("DCRChecklistInfo", "DocumentCreateRequest")',
              @*url: '@Url.Action("AccidentReportInfo", "AccidentReport")',*@
                 method: "post",
                 async: false,
                 data: { chklist: id },                  
                 success: function (data) {
                     set_data = data;
                     bootbox.alert({                              
                              message: data
                           });
                 }
              });
        } 
        
        function CheckedbyRequired() {
            var doc_status = $("input[type='radio'][id='doc_status_checkedby']:checked").val();
            if (doc_status == "3") {
                $("#checklist_id").attr('required', false);
                //$("#agreed").attr('required', false); 
                $("#doc_control").attr('required', false);
            }
            else {
                $("#checklist_id").attr('required', true);
                //$("#agreed").attr('required', true);
                $("#doc_control").attr('required', true);
            }
        }

        function ControlledbyRequired() {
        
            var doc_status = $("input[type='radio'][id='doc_status_conroller']:checked").val();
            if (doc_status == "3") {
                $("#doc_control").attr('required', false);
                //$("#doc_level").attr('required', false);
                //$("#doc_title").attr('required', false);
                $("#serial_no").attr('required', false);
                $("#new_doc_ref").attr('required', false);
            }
            else {
                $("#doc_control").attr('required', true);
                //$("#doc_level").attr('required', true);
                //$("#doc_title").attr('required', true);
                $("#serial_no").attr('required', true);
                $("#new_doc_ref").attr('required', true);
            }
        }

      @*function DoclevelGroupcode() {
          document.getElementById("new_doc_ref").value = ""; 
          document.getElementById("serial_no").value = ""; 
             var sStd = $('#division').val();
                jQuery.ajax({
                    url: '@Url.Action("FunGetDeptList", "EmployeeDetails")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'branch': sStd },
                    success: function (result) {
                        if (result != null && result.length > 0) {
                            $("#department").append("<option value=''>" + "Select" + "</option>");
                            $.each(result, function (index, item) {
                                $("#department").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                                $("#department").trigger('change');
                            });
                            return;
                        }
                        else {
                            bootbox.alert({
                                title: 'Group Code',
                                message: 'Please add group code to this division selected'
                            });
                            return;
                        }
                    }
                });
        }*@
               

        //$(document).ready(function () {
        //});
        //$('#btnCreate').click(function () {
        //    var $form = $("#form1");
        //        if ($form.valid()) {
        //            var selected = $("input[type=radio]:checked").val();
        //            var scomments = $("#comments").val();
        //            if (selected == "4" && scomments == "") {
        //                bootbox.alert({
        //                    title: 'Comments Required',
        //                    message: 'Please write reason for rejection.'
        //                });
        //                return false;
        //            }
        //            else {
        //                return true;
        //            }

        //     }//form valid
        //    });


        //function GetApporvalNotRequired() {
        //    var selected = $("input[type=radio]:checked").val();
        //    if (selected == "4") {
        //        //$("#approve_vp").attr('required', false);
        //        $("#approve_chairman").attr('required', false);
        //    }
        //    else {
        //        //$("#approve_vp").attr('required', true);
        //        $("#approve_chairman").attr('required', true);
        //    }
        //}

        //  $("#checklist_id").on('select2:select', function (e) {
        //      alert("Hi");
        //});


        function DocumentReferenceName() {
            var dir = $("#division").val();
            var grp = $("#department").val();
            //var team = $("#team").val();
           
            var serial = $('#serial_no').val();        
            if (department != "" && serial != "") {
                jQuery.ajax({
                    url: '@Url.Action("FunGetDocRefNo", "DocumentCreateRequest")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'Direct': dir, 'Grp': grp },
                    success: function (result) {
                        if (result != null && result.length > 0) {
                            document.getElementById("new_doc_ref").value = result + "/" + serial;
                        }
                    }
                });
            }
            else {
                document.getElementById("new_doc_ref").value = "";
            }
        }
      
        function GetChecklist() {
            var id_doc_request = document.getElementById("id_doc_request").value;/* $('#id_doc_request').value;*/          

            if (id_doc_request != "") {
                jQuery.ajax({
                    url: '@Url.Action("GetDCRChecklistByRef", "DocumentCreateRequest")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'id_doc_request': id_doc_request},
                    success: function (result) { 
                        if (result != null && result.length > 0) {
                            //$("#checklist_id").empty();
                            //if (result != null && result.length > 0) {
                            //    $("#checklist_id").append("<option value=''>" + "Select" + "</option>");
                            //    $.each(result, function (index, item) {
                            //        $("#checklist_id").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            //        $("#checklist_id").trigger('change');
                            //    });
                            //    return;
                            //} 
                            document.getElementById("checklist_id").value = result ; 
                        }                       
                    }
                });          
            }
        }


          function GetDeptList() {
            var selectedValues = [];
            $("#division :selected").each(function () {
                selectedValues.push($(this).val());
            });  
                jQuery.ajax({
                    url: '@Url.Action("FunGetAllDeptList", "EmployeeDetails")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'branch': selectedValues },
                    success: function (result) {
                        //GetLocList(selectedValues);
                        $("#department").children('option').remove();
                        $("#department").trigger('change');
                        if (result != null && result.length > 0) {
                            $("#department").append("<option value=''> Select</option>");

                            $.each(result, function (index, item) {
                                $("#department").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                                $("#department").trigger('change');
                            });
                            return;
                        }
                        //else {
                        //    bootbox.alert({
                        //        title: 'Department List',
                        //        message: 'No Department exists.'
                        //    });
                        //}
                    }
                });          
        }


        function FunEmpty() {          
            document.getElementById("new_doc_ref").value = ""; 
            document.getElementById("serial_no").value = "";
        }
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}

