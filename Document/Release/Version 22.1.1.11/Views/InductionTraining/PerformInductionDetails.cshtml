@model ISOStd.Models.InductionTrainingModels
@{
    ViewBag.Title = "InductionDetails";
    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
    ISOStd.Models.InductionTrainingModelsList objMatList = new ISOStd.Models.InductionTrainingModelsList();

    if (ViewBag.objMatList != null)
    {
        objMatList = ViewBag.objMatList;
    }

    string current_user=Obj.GetCurrentUserSession().empid;
}
@section featured {
    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">
                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("PerformInductionList", "InductionTraining", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Perform Induction Training</span>
                    </a>
                    <span class="breadcrumb-item active">Perform Induction Training Details</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            <div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">

                    @using (Html.BeginForm("PerformInductionPdf", "InductionTraining", FormMethod.Post, new { id = "form1", name = "form1" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="breadcrumb-elements-item dropdown p-0">
                                <input type="hidden" id="id_induction" name="id_induction" value="@Model.id_induction" />
                                <input type="hidden" id="employee_id" name="employee_id" value="@ViewBag.semployee_id" />

                                <button type="submit" class="dropdown-item">
                                    <i class="icon-printer2"></i> Report
                                </button>

                            </div>
                        }

                    @*<div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>
                        <div class="dropdown-menu dropdown-menu-right">
                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>*@
                </div>
            </div>
        </div>
    </div>
}


<div class="card">
    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">
            Perform Induction Training Details
        </h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>
            </div>
        </div>
    </div>

    <div>
        <div class="card-header bg-white header-elements-sm-inline">
            <div class="header-elements">
                    @if ((Model.planned_by).Split(',').Contains(current_user) || (Model.employee_id).Contains(current_user))
                    {
                        <a class="btn bg-orange btn-labeled btn-labeled-left" data-style="radius" href='@Url.Action("AddPerformInduction", "InductionTraining", new { id_induction = Model.id_induction.ToString(),employee_id=ViewBag.semployee_id  })' title="Edit" onclick="HyperLinkProgressIconFunction()">
                            <b>  <i class="icon-add-to-list"></i></b> Edit
                        </a>
                    }
                    @Html.ActionLink("Back to List", "PerformInductionList", new { id_induction = Model.id_induction.ToString(), employee_id = ViewBag.semployee_id }, new { @class = "btn btn-outline bg-orange text-orange border-orange ml-3", onclick = "HyperLinkProgressIconFunction()" })
                </div>
        </div>
    </div>

    <div class="card-body">
        <div class="container-fluid">
            <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                <thead></thead>
                <tbody>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                Training Employee
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @ViewBag.semployee_Name
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.ref_no)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.ref_no)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.division)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.division)
                            </p>
                        </td>

                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.department)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.department)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.location)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.location)
                            </p>
                        </td>

                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.start_date)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @if (Model.start_date > Convert.ToDateTime("01/01/0001"))
                                {
                                    @Model.start_date.ToString("dd/MM/yyyy HH:mm:ss")
                                }
                            </p>

                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.end_date)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @if (Model.end_date > Convert.ToDateTime("01/01/0001"))
                                {
                                    @Model.end_date.ToString("dd/MM/yyyy HH:mm:ss")
                                }
                            </p>
                        </td>

                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.training_topic)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.training_topic)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.planned_by)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.planned_by)
                            </p>
                        </td>

                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.employee_id)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.employee_Name)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.plan_notifiedto)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.plan_notifiedto)
                            </p>
                        </td>

                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.priority)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.priority)
                            </p>
                        </td>
                    </tr>
            </table>

            @if (objMatList.lstInd != null && objMatList.lstInd.Count > 0)
            {
                <h2 class="bg-dark pl-sm-2">  Material Details</h2>
                <div class="table-responsive">
                    <table class="table-sm table-dark table-bordered table-striped table-hover bg-blue-300">

                        <thead>
                            <tr class="bg-brown">
                                <th>Material</th>
                                <th>Attachment</th>
                                <th>Start Date</th>
                                <th>Completion Date</th>
                                <th>Comments</th>
                                <th>Need further explanation</th>
                                <th>Training Notified To</th>
                            </tr>
                        </thead>
                        <tbody>

                            @for (int index = 0; index < objMatList.lstInd.Count; index++)
                            {
                                <tr>
                                    <td>@objMatList.lstInd[index].mat_description</td>
                                    <td>
                                        @if (objMatList.lstInd[index].upload != null && objMatList.lstInd[index].upload != "")
                                        {
                                           
                                            foreach (var docs in objMatList.lstInd[index].upload.Trim(',').Split(','))
                                            {
                                                <p style="margin: 0px;">

                                                    <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" style="color: orange;">
                                                        @*@System.IO.Path.GetFileName(docs)*@
                                                        preview
                                                    </a>
                                                </p>
                                                <br />
                                            }
                                        }
                                    </td>
                                    <td>
                                        @if (objMatList.lstInd[index].traing_start_date != null && objMatList.lstInd[index].traing_start_date > Convert.ToDateTime("01/01/0001"))
                                        {
                                            @objMatList.lstInd[index].traing_start_date.ToString("dd/MM/yyyy")
                                        }
                                    </td>
                                    <td>
                                        @if (objMatList.lstInd[index].compled_date != null && objMatList.lstInd[index].compled_date > Convert.ToDateTime("01/01/0001"))
                                        {
                                            @objMatList.lstInd[index].compled_date.ToString("dd/MM/yyyy")
                                        }
                                    </td>
                                    <td>@objMatList.lstInd[index].comments</td>
                                    <td>@objMatList.lstInd[index].explain</td>
                                    <td>@objMatList.lstInd[index].notify_to</td>
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
            }

            <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                <thead></thead>
                <tbody>
                  
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.final_status)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.final_status)
                            </p>
                        </td>

                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.effectness)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.effectness)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.suggestion)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.suggestion)
                            </p>
                        </td>

                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.further_training)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.further_training)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.completion_date)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @if (Model.completion_date > Convert.ToDateTime("01/01/0001"))
                                {
                                    @Model.completion_date.ToString("dd/MM/yyyy")
                                }
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.final_notifyto)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.final_notifyto)
                            </p>
                        </td>
                    </tr>
</table>

        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">

     $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
        });

    </script>
}
