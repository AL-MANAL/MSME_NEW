@model ISOStd.Models.EmpPerformanceElementsModels
@using System.Data;

@{
    ViewBag.Title = "AddPerformanceRatings";

    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
    //MultiSelectList dsMeeting = ViewBag.dsMeeting;

    DataSet dsPerformance = new DataSet();

    if (ViewBag.dsPerformance != null)
    {
        dsPerformance = ViewBag.dsPerformance;
    }
}

@section featured {
    <div class="page-header page-header-light">
        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>

                    <a href="@Url.Action("EmployeePerformanceEvalList", "EmployeePerformanceEval", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Performance Evalution</span>
                    </a>


                    <span class="breadcrumb-item active"> Add Employee Performance Evalution Ratings</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}

<div class="row">
    <div class="col-md-5">

        <!-- Basic layout-->
        <div class="card">
            <div class="card-header header-elements-inline">
                <h5 class="card-title">Add Performance Evalution Ratings</h5>
                <div class="header-elements">
                    <div class="list-icons">
                        <a class="list-icons-item" data-action="collapse"></a>

                    </div>
                </div>
            </div>

            <div class="card-body">

                @using (Html.BeginForm("AddPerformanceRatings", "EmployeePerformanceEval", FormMethod.Post, new { id = "form1", name = "form1" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)

                    <div class="container-fluid">
                        <table class="table table-lg">
                            <tbody>
                                <tr>
                                    <td>
                                        @Html.LabelFor(model => model.RatingOptions)
                                    </td>
                                    <td>
                                        <textarea class="form-control elastic maxlength-badge-position" maxlength="25" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" id="RatingOptions" name="RatingOptions" required></textarea>
                                        @Html.ValidationMessageFor(model => model.RatingOptions)
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Html.LabelFor(model => model.Weightage)
                                    </td>
                                    <td>
                                        <input class="form-control" type="number" id="Weightage" name="Weightage" min="0" required   />
                                        @Html.ValidationMessageFor(model => model.Weightage)
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <div class="text-right">
                        <button type="submit" class="btn bg-indigo-400">Submit<i class="icon-paperplane ml-2"></i></button>
                        @Html.ActionLink("Back to List", "EmployeePerformanceEvalList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })
                    </div>
                }
            </div>
        </div>
        <!-- /basic layout -->

    </div>

    <div class="col-md-7">

        <!-- Basic layout-->
        <div class="card">
            <div class="card-header header-elements-inline">
                <h5 class="card-title">Employee Performance Evalution Ratings</h5>
                <div class="header-elements">
                    <div class="list-icons">
                        <a class="list-icons-item" data-action="collapse"></a>

                    </div>
                </div>
            </div>
            <div class="card-body">
                <table class="table table-lg" id="tbl_Agenda">
                    @if (dsPerformance.Tables.Count > 0 && dsPerformance.Tables[0].Rows.Count > 0)
                    {
                        <tr class="row">
                            <td class="col" colspan="3" style="background-color: #4cc4dd; color: #fff; font-weight: bold;">Rating List</td>
                        </tr>
                        <tr class="row" style="background-color: #e5eafe; color: #0099ff; font-weight: bold;">
                            <th class="col col-xs-10">RatingOptions </th>
                            <th class="col col-xs-10">Weightage</th>
                            <th class="col col-xs-2">Actions</th>
                        </tr>
                        for (int item = 0; item < dsPerformance.Tables[0].Rows.Count; item++)
                        {
                            <tr class="row">
                                <td class="col col-xs-10">                                  
                                    <textarea class='form-control elastic maxlength-badge-position' maxlength='25' placeholder='Textarea' style='overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;' rows='4' cols='4' id='RatingOptions @dsPerformance.Tables[0].Rows[item]["SQ_OptionsId"].ToString()' name='RatingOptions @dsPerformance.Tables[0].Rows[item]["SQ_OptionsId"].ToString()'>@dsPerformance.Tables[0].Rows[item]["RatingOptions"].ToString()</textarea>
                                </td>
                                <td class="col col-xs-10">
                                    <input class="form-control" type="text" id="Weightage @dsPerformance.Tables[0].Rows[item]["SQ_OptionsId"].ToString()"
                                        name="Weightage @dsPerformance.Tables[0].Rows[item]["SQ_OptionsId"].ToString()" value="@dsPerformance.Tables[0].Rows[item]["Weightage"].ToString()" />
                                 </td>
                                <td class="col col-xs-2">
                                    <span class='badge badge-info' style='cursor: pointer;' title='Update Rating Options' onclick='UpdateRatingOptions(@dsPerformance.Tables[0].Rows[item]["SQ_OptionsId"].ToString())'>Edit</span>
                                    <span class='badge badge-danger' onclick='DeleteRatingOptions(@dsPerformance.Tables[0].Rows[item]["SQ_OptionsId"].ToString())' style='cursor:pointer;' title='Delete Rating Options'>Delete</span>
                                </td>
                            </tr>
                        }
                    }
                </table>
            </div>

        </div>
        <!-- /basic layout -->

    </div>
</div>



@section Scripts {
    <script type="text/javascript">



         //----zzz
    $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
    });
    //zzz----

        
        function UpdateRatingOptions(SQ_OptionsId) {

            var Element = document.getElementById("RatingOptions " + SQ_OptionsId).value;
            var Element2 = document.getElementById("Weightage " + SQ_OptionsId).value;

             jQuery.ajax({
                 url: '@Url.Action("PerformanceRatingUpdate", "EmployeePerformanceEval")',
                 type: 'POST',
                 dataType: "json",
                 data: { 'SQ_OptionsId': SQ_OptionsId, 'RatingOptions': Element, 'Weightage': Element2 },
                 success: function (result) {
                     bootbox.alert({
                         title: 'Rating',
                         message: 'Your Rating Options has been updated.'
                     });  
                 }
             });
         }

        function DeleteRatingOptions(SQ_OptionsId) {            
           
             bootbox.confirm({
                 title: 'Confirm dialog',
                 message: 'Are you Sure you want to Delete the current Record?',
                 buttons: {
                     confirm: {
                         label: 'Yes',
                         className: 'btn-primary'
                     },
                     cancel: {
                         label: 'Cancel',
                         className: 'btn-link'
                     }
                 },
                 callback: function (r) {
                     if (r == true) {
                     jQuery.ajax({
                         url: '@Url.Action("PerformanceRatingDelete", "EmployeePerformanceEval")',
                         type: 'POST',
                         dataType: "json",
                         data: { 'SQ_OptionsId': SQ_OptionsId },
                         success: function (data) {                            
                              
                             window.location.href =
                                 window.location.protocol + "//" +
                                 window.location.host +
                                 window.location.pathname 
                             //'?sMeetingId=' + sMeetingId; 
                         }
                     });
                         return true;
                     }
                     else if (r == false) {
                         bootbox.hideAll();
                         return false;
                     }

                 }
             });
         }

         @*function DeleteQuestion(SQ_OptionsId) {
             var Category = document.getElementById("Category_Id").value;

             bootbox.confirm({
                 title: 'Confirm dialog',
                 message: 'Are you Sure you want to Delete the current Record?',
                 buttons: {
                     confirm: {
                         label: 'Yes',
                         className: 'btn-primary'
                     },
                     cancel: {
                         label: 'Cancel',
                         className: 'btn-link'
                     }
                 },
                 callback: function (r) {
                     if (r == true) {
                         jQuery.ajax({

                         url: '@Url.Action("InspectionRatingDelete1", "EmployeePerformanceEval")',
                         type: 'POST',
                         dataType: "json",
                         data: { 'SQ_OptionsId': SQ_OptionsId, 'Category': Category },
                         success: function (data) {
                             var Category = document.getElementById("Category_Id").value;

                             window.location.href =
                                 window.location.protocol + "//" +
                                 window.location.host +
                                 window.location.pathname +
                                '?sCategory=' + Category;
                             }
                         });
                         return true;
                     }
                     else if (r == false) {
                         bootbox.hideAll();
                         return false;
                     }

                 }
             });
         }*@


         @*function UpdateRatings(SQ_OptionsId) {

             var Ratings = document.getElementById("RatingOptions " + SQ_OptionsId).value;

             jQuery.ajax({
                 url: '@Url.Action("InspectionRatingUpdate", "EmployeePerformanceEval")',
                 type: 'POST',
                 dataType: "json",
                 data: { 'SQ_OptionsId': SQ_OptionsId, 'RatingOptions': Ratings },
                 success: function (result) {
                     var Category = document.getElementById("Category").value;

                     window.location.href =
                         window.location.protocol + "//" +
                         window.location.host +
                         window.location.pathname
                         +
                         '?sCategory=' + Category;

                     //window.location.href =
                     //    window.location.protocol + "//" +
                     //    window.location.host +
                     //    window.location.pathname +
                     //    createQueryString(queryString);

                 }
             });
         }*@


         @*function GetRatings() {
             var Category = $('#Category').val();
             document.getElementById("Cat_Id").value = Category;
             if (Category != "") {
                 jQuery.ajax({
                     url: '@Url.Action("GetRatings", "EmployeePerformanceEval")',
                     type: 'POST',
                     dataType: "json",
                     data: { 'Category': Category },
                     success: function (result) {

                         var table = document.getElementById("tblMeetingList");
                         //document.getElementById("divAgendasTitle").style.display = "";


                         while (table.rows.length > 0) {
                             table.deleteRow(0);
                         }

                         if (result != "") {

                             document.getElementById("tblMeetingList").style.display = "";

                             var thTitleRow = table.insertRow();
                              
                             var theaderRow = table.insertRow();

                             theaderRow.style = "background-color: #e5eafe; font-weight: bold;";
                             var cellth0 = theaderRow.insertCell(0);
                             var cellth1 = theaderRow.insertCell(1);
                             //var cellth2 = theaderRow.insertCell(2);

                             cellth0.innerHTML = "<th>Ratings</th>";
                             cellth1.innerHTML = "<th>Action</th>";
                             //cellth2.innerHTML = "<th>Action</th>";

                             table.rows[1].cells[0].style = "color:#0099ff";
                             table.rows[1].cells[1].style = "color:#0099ff";
                             //table.rows[1].cells[2].style = "color:#0099ff";

                             var list = result;
                             for (var i = 0; i < result.length; i++) {

                                 // Create an empty <tr> element and add it to the 1st position of the table:
                                 var row = table.insertRow();

                                 // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
                                 var cell0 = row.insertCell(0);
                                 var cell1 = row.insertCell(1);

                                 var Id = result[i].Value;

                                 cell0.innerHTML = " <textarea class='form-control elastic maxlength-badge-position' maxlength = '25' placeholder = 'Textarea' style = 'overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;' rows = '4' cols = '4' id='RatingOptions " + Id + "' name='RatingOptions " + Id + "'>" + result[i].Text + "</textarea>";
                               

                                 cell1.innerHTML = "<span class='badge badge-info' style='cursor: pointer;' title='Delete Rating' onclick='UpdateRatings(" + Id + ")'>Edit</span>"
                                     + " <span class='badge badge-danger' onclick='DeleteQuestion(" + Id + ")' style='cursor:pointer;' title='Delete Question'/>Delete</span>";


                                 autosize($('.elastic'));
                                 $('.maxlength-badge-position').maxlength({
                                     alwaysShow: true,
                                     placement: 'top'
                                 });
                             }
                         }
                         else {
                             document.getElementById("tblMeetingList").style.display = "none";
                             //bootbox.alert({
                             //    title: 'No Data Exist',
                             //    message: 'No Item exists, please add Items and then try again'
                             //});
                             bootbox.dialog({
                                 title: 'No Data Exist',
                                 message: 'No Item exists, please add Items and then try again',
                             });

                             window.setTimeout(function () {
                                 bootbox.hideAll();
                             }, 2000);
                         }

                     }
                 });
             }
         }*@


    </script>
    @Scripts.Render("~/bundles/jqueryval")

}

