@model ISOStd.Models.DocumentLevelsModels
@using System.Data;

@{
    ViewBag.Title = "AddDocumentLevel";
    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();

    DataSet dsDocLevel = new DataSet();
    dsDocLevel = ViewBag.DocumentLevels;

    DataSet dsDocDetails = new DataSet();
    if (ViewBag.dsDoclevelDetails != null)
    {
        dsDocDetails = ViewBag.dsDoclevelDetails;
    }
}


@section featured {
    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">
                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <span class="breadcrumb-item active"> Document Level Details</span>
                </div>
                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">
                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>
                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}

@*<div class="header-elements">
        <div class="d-flex justify-content-center">
            <a href="@Url.Action("AddDirectoratecode", "DocumentLevels", null)" class="btn btn-link btn-float text-default"><i class="icon-2x icon-barcode2 text-primary"></i><span>Directorate (xxx)</span></a>
            <a href="@Url.Action("AddGroupcode", "DocumentLevels", null)" class="btn btn-link btn-float text-default"><i class="icon-2x icon-barcode2 text-primary"></i> <span>Group (yyy)</span></a>
            <a href="@Url.Action("AddTeamcode", "DocumentLevels", null)" class="btn btn-link btn-float text-default"><i class="icon-2x icon-barcode2 text-primary"></i> <span>Team (zzz)</span></a>
        </div>
    </div>*@
<div class="row">
    <div class="col-md-6">
        <!-- Basic layout-->
        <div class="card">
            <div class="card-header header-elements-inline">
                <h5 class="card-title">Document Levels Add / Remove</h5>
                <div class="header-elements">
                    <div class="list-icons">
                        <a class="list-icons-item" data-action="collapse"></a>
                    </div>
                </div>
            </div>

            <div class="card-body">
                @using (Html.BeginForm("AddDocumentLevel", "DocumentLevels", FormMethod.Post, new { id = "form1", name = "form1" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)

                    <div class="container-fluid">
                        <table class="table table-lg">
                            <tbody>
                                <tr>
                                    <td>
                                        Document Level
                                    </td>
                                    <td>
                                        @Html.EditorFor(m => m.Document_Level, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
                                        @Html.ValidationMessageFor(m => m.Document_Level)
                                    </td>
                                </tr>                             
                            </tbody>
                        </table>
                    </div>
                    <div class="card-footer bg-white ml-auto">
                        <button type="submit" name="button" id="button" value="Save" class="btn bg-indigo-400 float-right" onclick="ProgressIconFunction('#form1')">Submit<i class="icon-paperplane ml-2"></i></button>
                    </div>
                }
            </div>
        </div>
        <!-- /basic layout -->

    </div>
    <div class="col-md-6">
        <!-- Basic layout-->
        <div class="card">
            <div class="card-header header-elements-inline">
                <h5 class="card-title">Document Levels Details</h5>
                <div class="header-elements">
                    <div class="list-icons">
                        <a class="list-icons-item" data-action="collapse"></a>
                    </div>
                </div>
            </div>

            <div class="card-body">
                <div class="container-fluid">
                    <div>
                        @if (dsDocLevel.Tables.Count > 0 && dsDocLevel.Tables[0].Rows.Count > 0)
                        {
                            @*<div id="tblMeetingList" class="row">
                                <div class="col" style="background-color: #e5eafe; color: #0099ff; font-weight: bold;"><h5>Document Level Details</h5></div>

                             
                            </div>*@

                            int index = 2;
                            for (int item = 0; item < dsDocLevel.Tables[0].Rows.Count; item++)

                            {
                                <div class="row card-body">
                                    <div class="col">

                                        @if (dsDocLevel.Tables[0].Rows[item]["id_doc_level"].ToString() == ViewBag.DocLevelId)
                                        {
                                            <div class="row bg-info" id="row_@dsDocLevel.Tables[0].Rows[item]["id_doc_level"].ToString()">
                                                <div class="col">
                                                    <input type="radio" class="DocLevelList" name="DocLevelList" value="@dsDocLevel.Tables[0].Rows[item]["id_doc_level"].ToString()" checked="checked" onclick="PopulateDocLevel(@dsDocLevel.Tables[0].Rows[item]["id_doc_level"].ToString(),@index)" />
                                                    Get @dsDocLevel.Tables[0].Rows[item]["Document_Level"].ToString() Document Type Details
                                                </div>

                                            </div>
                                        }
                                        else
                                        {
                                            <div class="row" id="row_@dsDocLevel.Tables[0].Rows[item]["id_doc_level"].ToString()">
                                                <div class="col">
                                                    <input type="radio" class="DocLevelList" name="DocLevelList" value="@dsDocLevel.Tables[0].Rows[item]["id_doc_level"].ToString()" onclick="PopulateDocLevel(@dsDocLevel.Tables[0].Rows[item]["id_doc_level"].ToString(),@index)" />
                                                    Get @dsDocLevel.Tables[0].Rows[item]["Document_Level"].ToString() Document Details
                                                </div>

                                            </div>
                                        }


                                        <fieldset>
                                            <legend class="font-weight-semibold text-uppercase font-size-sm">
                                                <i class="icon-file-text2 mr-2"></i>
                                                @dsDocLevel.Tables[0].Rows[item]["Document_Level"].ToString() Details
                                                <a class="float-right text-default" data-toggle="collapse" data-target="#collapsible_@dsDocLevel.Tables[0].Rows[item]["id_doc_level"].ToString()" aria-expanded="true">
                                                    <i class="icon-circle-down2"></i>
                                                </a>
                                            </legend>

                                            <div class="collapse" id="collapsible_@dsDocLevel.Tables[0].Rows[item]["id_doc_level"].ToString()">
                                                <div>Document Type</div>
                                                <input class="form-control" type="text" id="Document_level_@dsDocLevel.Tables[0].Rows[item]["id_doc_level"].ToString()" name="Document_level_@dsDocLevel.Tables[0].Rows[item]["id_doc_level"].ToString()" value="@dsDocLevel.Tables[0].Rows[item]["Document_Level"].ToString()" />

                                                <div>Action</div>
                                                <button onclick="EditItem('@dsDocLevel.Tables[0].Rows[item]["id_doc_level"].ToString()')" title="Edit Level" type="button" class="btn btn-primary btn-icon mr-1"><i class="icon-pencil5 mr-1"></i>Edit</button>
                                                <button onclick="DeleteItem('@dsDocLevel.Tables[0].Rows[item]["id_doc_level"].ToString()')" title="Delete Level" type="button" class="btn btn-danger btn-icon ml-1 font-weight-bold"><i class="icon-trash mr-1"></i>Delete</button>
                                            </div>
                                        </fieldset>
                                    </div>

                                    @*<div class="col">
                                        <button onclick="EditItem('@dsDocLevel.Tables[0].Rows[item]["id_doc_level"].ToString()')" title="Edit Level" type="button" class="btn btn-primary btn-icon mr-1"><i class="icon-pencil5 mr-1"></i>Edit</button>
                                        <button onclick="DeleteItem('@dsDocLevel.Tables[0].Rows[item]["id_doc_level"].ToString()')" title="Delete Level" type="button" class="btn btn-danger btn-icon ml-1 font-weight-bold"><i class="icon-trash mr-1"></i>Delete</button>
                                     </div>*@
                                </div>index++;
                            }
                        }



                        @using (Html.BeginForm("AddLevelDetails", "DocumentLevels", FormMethod.Post, new { id = "form2", name = "form2" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true) string sDisplay = "None";


                            if (ViewBag.DocLevelId != null)
                            {
                                sDisplay = "";
                            }

                            <input type="hidden" id="id_doc_level" name="id_doc_level" value="@ViewBag.DocLevelId" />
                            <table class="table table-lg" id="tabmeetingAgenda" style="display:@sDisplay;">

                                <tr style="background-color: #e5eafe; color: #0099ff; font-weight: bold;">
                                    <td colspan="2">
                                        Add To Document Level
                                    </td>
                                </tr>
                                <tr>
                                    <th>Document Type</th>                                   
                                </tr>
                                <tr>
                                    <td>
                                        <input class="form-control" type="text" id="description" name="description" required />
                                        <span class="field-validation-error"><span id="description-message" style="display: none;">Document Type is required.</span></span>
                                    </td>                                  
                                </tr>
                                <tr>
                                    <td colspan="2">
                                        <input type="submit" class="btn bg-indigo-400" name="button" id="button2" value="Save Document Type" onclick="ProgressIconFunction('#form2')" />
                                    </td>
                                </tr>
                            </table>
                            <br />
                        }
                    </div>

                </div>

            </div>
        </div>
        <!-- /basic layout -->

    </div>
</div>


<div class="card invisible" id="hidden card">
    <div class="card-header header-elements-inline">
        <h5 class="card-title">Document Details</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>
            </div>
        </div>
    </div>

    <div class="card-body">
        <table class="table table-lg" id="tbl_Agenda">
            @if (dsDocDetails.Tables.Count > 0 && dsDocDetails.Tables[0].Rows.Count > 0)
            {
                <tr class="row">
                    <td class="col" colspan="3" style="background-color: #4cc4dd; color: #fff; font-weight: bold;">Document List</td>
                </tr>
                <tr class="row" style="background-color: #e5eafe; color: #0099ff; font-weight: bold;">
                    <th class="col col-xs-10">Name</th>
                    <th class="col col-xs-2">Actions</th>
                </tr> for (int item = 0; item < dsDocDetails.Tables[0].Rows.Count; item++)
                {
                    <tr class="row">
                        <td class="col col-xs-10">
                             <textarea class='form-control elastic maxlength-badge-position' maxlength='25' placeholder='Textarea' style='overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;' rows='4' cols='4' id='description @dsDocDetails.Tables[0].Rows[item]["id_levels_details"].ToString()' name='description @dsDocDetails.Tables[0].Rows[item]["id_levels_details"].ToString()'>@dsDocDetails.Tables[0].Rows[item]["description"].ToString()</textarea>
                        </td>                       

                        <td class="col col-xs-2">
                            <span class='badge badge-info' style='cursor: pointer;' title='Update Document Details' onclick='UpdateDocDetails(@dsDocDetails.Tables[0].Rows[item]["id_levels_details"].ToString())'>Edit</span>
                            <span class='badge badge-danger' onclick='DeleteDocDetails(@dsDocDetails.Tables[0].Rows[item]["id_levels_details"].ToString())' style='cursor:pointer;' title='Delete Document Details'>Delete</span>
                        </td>

                    </tr>
                }
            }
        </table>
    </div>
</div>



@section Scripts {
    <script type="text/javascript">
        var showClass = 'is-visible';
        var hideClass = 'invisible';


           @if (ViewBag.DocLevelId != "")
           {
               @:var previousid='@ViewBag.DocLevelId';
           }


    $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }


           @if (dsDocDetails.Tables.Count > 0 && dsDocDetails.Tables[0].Rows.Count > 0)
           {
               @:document.getElementById("hidden card").classList.remove(hideClass);
               @:document.getElementById("hidden card").classList.add(showClass);

           }


    });


    function DeleteItem(id) {
        jQuery.ajax({
        url: '@Url.Action("DocLevelDelete", "DocumentLevels")',
                type: 'POST',
                dataType: "json",
                data: { 'id': id },
                success: function (result) {
                    window.location.href =
                        window.location.protocol + "//" +
                        window.location.host +
                        window.location.pathname +
                    '?sDocLevelId=' + id;
                  }
              });
          }


        function EditItem(id) {
          var Document_Level = document.getElementById("Document_level_" + id).value;
            jQuery.ajax({
                url: '@Url.Action("doesDocNameExist", "DocumentLevels")',
                type: 'POST',
                dataType: "json",
                data: { 'Document_Level': Document_Level },
                  success: function (result) {
                      if (result) {
                          if (Document_Level != "") {
                               var data = JSON.stringify({
                                  objLevel: { 
                                      Document_Level: Document_Level,
                                      id_doc_level: id,
                                  }
                              });

                              jQuery.ajax({
                                  url: '@Url.Action("DocLevelUpdate", "DocumentLevels")',
                                  type: 'POST',
                                  contentType: 'application/json',
                                  data: data,
                                  success: function (result) {
                                      var sDocLevelId = $("input[name='DocLevelList']:checked").val();
                                      if (sDocLevelId === undefined) {
                                          window.location.href =
                                              window.location.protocol + "//" +
                                              window.location.host +
                                              window.location.pathname
                                      }
                                      else {
                                      window.location.href =
                                          window.location.protocol + "//" +
                                          window.location.host +
                                          window.location.pathname +
                                          '?sDocLevelId=' + sDocLevelId;
                                      }
                                   }
                              });
                          }
                          else {
                              bootbox.alert({
                                  title: 'Edit By',
                                  message: 'Please fill the Document Type'
                              });
                          }
                      }
                      else {
                          bootbox.alert({
                              title: 'Level',
                              message: 'Document Level exists'
                          });
                      }
                  }
              });
          }



        function PopulateDocLevel(DocId, tabIndex) {

            if (previousid != '') {
                document.getElementById("row_"+previousid).classList.remove("bg-info");
            }
            previousid = DocId;
            document.getElementById("row_" + DocId).classList.add("bg-info");
            document.getElementById("id_doc_level").value = DocId;
            document.getElementById("tabmeetingAgenda").style.display = "";
            document.getElementById("hidden card").classList.remove(hideClass);
            document.getElementById("hidden card").classList.add(showClass);
         jQuery.ajax({
             url: '@Url.Action("GetDocLevelDetailsList", "DocumentLevels")',
                    type: 'POST',
                    dataType: "json",
             data: { 'sDocId': DocId },
                 success: function (result) {

     var table = document.getElementById("tbl_Agenda");    

     while (table.rows.length > 0) {
         table.deleteRow(0);
     }

     if (result != "") {
         var thTitleRow = table.insertRow();
         thTitleRow.style = "background-color: #4cc4dd; color: #fff; font-weight: bold;";
         var cellTitle0 = thTitleRow.insertCell(0);
         thTitleRow.className = "row";
         cellTitle0.innerHTML = "Document Level List";
         table.rows[0].cells[0].colSpan = 3;
         table.rows[0].cells[0].style = "color:#fff";

         var theaderRow = table.insertRow();
         theaderRow.className = "row";
         theaderRow.style = "background-color: #e5eafe; font-weight: bold;";
         var cellth0 = theaderRow.insertCell(0);
         cellth0.className = "col col-xs-10";
         var cellth1 = theaderRow.insertCell(1);
         cellth1.className = "col col-xs-2";
         //var cellth2 = theaderRow.insertCell(2);
         //cellth2.className = "col col-xs-2";


         cellth0.innerHTML = "<th>Name</th>";
         //cellth1.innerHTML = "<th>Details</th>";
         cellth1.innerHTML = "<th>Actions</th>";


         table.rows[1].cells[0].style = "color:#0099ff";
         table.rows[1].cells[1].style = "color:#0099ff";
         //table.rows[1].cells[2].style = "color:#0099ff";

         var list = result;
                            $.each(list, function (index, item) {

             // Create an empty <tr> element and add it to the 1st position of the table:
             var row = table.insertRow();
             row.className = "row";
             // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
             var cell0 = row.insertCell(0);
             cell0.className = "col col-xs-10";
             var cell1 = row.insertCell(1);
             cell1.className = "col col-xs-10";
             //var cell2 = row.insertCell(2);
             //cell2.className = "col col-xs-2";

             var AgendaName = item.Text;
             var Id = item.Value;

             var data = item.Text;

             //var dataarray = new Array();

             //dataarray = data.split("_");

             //cell0.innerHTML = dataarray[0];
             //cell1.innerHTML = dataarray[1];

             cell0.innerHTML = " <textarea class='form-control elastic maxlength-badge-position' maxlength = '25' placeholder = 'Textarea' style = 'overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;' rows = '4' cols = '4' id='description " + Id + "' name='description " + Id + "'>" + item.Text + "</textarea>";
             cell1.innerHTML = "<span class='badge badge-info' style='cursor: pointer;' title='Update Document Details' onclick='UpdateDocDetails(" + Id + ")'>Edit</span>"
                                    + " <span class='badge badge-danger' onclick='DeleteDocDetails(" + Id + ")' style='cursor:pointer;' title='Delete Document Details'>Delete</span>";
                             
                                autosize($('.elastic'));
                                $('.maxlength-badge-position').maxlength({
                                    alwaysShow: true,
                                    placement: 'top'
                                });
                            });
                        }
                      else {
                          bootbox.alert({
                              title: 'No Document Type',
                              message: 'No Document Type exist'
                          });
                        }
                    }
                });
        }


        function UpdateDocDetails(id_element) {

             var Element = document.getElementById("description " + id_element).value;
             
             jQuery.ajax({
                 url: '@Url.Action("DocDetailsUpdate", "DocumentLevels")',
                 type: 'POST',
                 dataType: "json",
                 data: { 'id_element': id_element, 'description': Element },
                 success: function (result) {
                     bootbox.alert({
                         title: 'Document Type',
                         message: 'Your Document Type has been updated.'
                     });
                 }
             });
         }

        function DeleteDocDetails(id_element) {

            //var MeetingType = $("input[name='DocLevelList']:checked").val();

             bootbox.confirm({
                 title: 'Confirm dialog',
                 message: 'Are you Sure you want to Delete the current Record?',
                 buttons: {
                     confirm: {
                         label: 'Yes',
                         className: 'btn-primary'
                     },
                     cancel: {
                         label: 'Cancel',
                         className: 'btn-link'
                     }
                 },
                 callback: function (r) {
                     if (r == true) {
                     jQuery.ajax({
                         url: '@Url.Action("DocDetailsDelete", "DocumentLevels")',
                         type: 'POST',
                         dataType: "json",
                         data: { 'id_element': id_element/*, 'MeetingType': MeetingType*/ },
                         success: function (data) {

                             var sDocLevelId = $("input[name='DocLevelList']:checked").val();

                             window.location.href =
                                 window.location.protocol + "//" +
                                 window.location.host +
                                 window.location.pathname +
                             '?sDocLevelId=' + sDocLevelId;
                         }
                     });
                         return true;
                     }
                     else if (r == false) {
                         bootbox.hideAll();
                         return false;
                     }
                 }
             });
         }
    </script>
    @Scripts.Render("~/bundles/jqueryval")

}
