@model ISOStd.Models.ObjectivesModels
@{
    ViewBag.Title = "ObjectiveActionPlanEdit";
    DateTime dtTodate = Convert.ToDateTime(ViewBag.Obj_Estld_On);
    dtTodate = dtTodate.AddDays(1);
    int icont = 0;
}

@section featured {

    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>

                    <a class="breadcrumb-item" onclick="HyperLinkProgressIconFunction();" href='@Url.Action("ObjectivesList", "Objectives", new { Objectives_Id = ViewBag.Objectives_Id,View=ViewBag.View } )'>
                        <span class="breadcrumb-item"> Objectives </span>
                    </a>
                    <a class="breadcrumb-item" onclick="HyperLinkProgressIconFunction();" href='@Url.Action("AddObjectiveActionPlan", "Objectives", new { ObjectivesTrans_Id = ViewBag.ObjectivesTrans_Id,View=ViewBag.View } )'>
                        <span class="breadcrumb-item">Objective Action Plan</span>
                    </a>
                    <span class="breadcrumb-item active"> Update Objective Action Plan</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}

@using (Html.BeginForm("ObjectiveActionPlanEdit", "Objectives", FormMethod.Post,
                         new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Update Objective Plan</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">
                <input type="hidden" id="ObjectivesTrans_Id" name="ObjectivesTrans_Id" value="@ViewBag.ObjectivesTrans_Id" />
                <input type="hidden" id="Objectives_Id" name="Objectives_Id" value="@ViewBag.Objectives_Id" />
                <input type="hidden" id="id_objective_action" name="id_objective_action" value="@Model.id_objective_action" />
                <input type="hidden" id="view" name="view" value="@ViewBag.View" />

                @*<h2 class="bg-dark pl-sm-2"> Objective Details</h2>
                <br />
                <table class="table table-lg">
                    <thead></thead>
                    <tbody>
                        <tr class="row">                          
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.Objectives_val)
                            </td>
                            <td class="col">
                                <textarea class="form-control" id="Objectives_val" name="Objectives_val" readonly>@ViewBag.Objectives_val </textarea>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.Obj_Target)
                            </td>
                            <td class="col">
                                <input class="form-control" type="text" id="Obj_Target" name="Obj_Target" value="@ViewBag.Obj_Target" readonly />
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.Base_Line_Value)
                            </td>
                            <td class="col">
                                <input class="form-control" type="text" id="Base_Line_Value" name="Base_Line_Value" value="@ViewBag.Base_Line_Value" readonly />
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.Monitoring_Mechanism)
                            </td>
                            <td class="col">
                                <input class="form-control" type="text" id="Monitoring_Mechanism" name="Monitoring_Mechanism" value="@ViewBag.Monitoring_Mechanism" readonly />
                            </td>
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.Target_Date)
                            </td>
                            <td class="col">
                                <input class="form-control" type="text" id="Target_Date" name="Target_Date" value="@ViewBag.Target_Date" readonly />
                            </td>
                        </tr>
                </table>
                <br />
                <h2 class="bg-dark pl-sm-2"> Add Task Details</h2>*@
                <table class="table table-lg" id="tabcontent">

                    <thead></thead>
                    <tbody>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                Action Plan Ref.<text style="color:red;">*</text>
                            </td>
                            <td class="col">
                                @Model.action_ref_no
                            </td>
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.begin_date)<text style="color:red;">*</text>
                            </td>                       
                            <td class="col">
                                <input class="form-control" type="date" id="begin_date" name="begin_date" value="@Model.begin_date.ToString("yyyy-MM-dd")" required />
                            </td>                           
                        </tr>

                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.actionplan)<text style="color:red;">*</text>
                            </td>
                            <td class="col">
                                <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="actionplan" name="actionplan" required>@Model.actionplan</textarea>
                            </td>
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.resource)
                            </td>
                            <td class="col">
                                <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="resource" name="resource">@Model.resource</textarea>
                            </td>
                        </tr>

                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.end_date)<text style="color:red;">*</text>
                            </td>
                            <td class="col">
                                <input class="form-control" type="date" id="end_date" name="end_date" value="@Model.end_date.ToString("yyyy-MM-dd")" required />
                            </td>
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.resp_person)<text style="color:red;">*</text>
                            </td>
                            <td class="col">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="resp_person" name="resp_person" required="required">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.EmpList != null)
                                    {
                                        foreach (var item in ViewBag.EmpList)
                                        {
                                            if (item.Value == Model.resp_person)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }

                                        }
                                    }
                                </select>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.upload)
                            </td>
                            <td class="col">
                                <input type="file" name="upload" id="upload" title="Objective Action Plan Upload" onchange="FileFormatValidation(this)" multiple accept=".pdf, .doc, .docx,.xls,.xlsx,.jpg,.jpeg,.png,image/*"
                                       style="height: 38px;" class="bootstrap-uploader" data-fouc />
                                
                                @if (Model.upload != null && Model.upload != "" && Model.upload.Length > 0)
                                {
                                    <div class="editor-label">
                                        <p style="font-weight: bold; margin: 0px;"> Docs. List:</p>
                                    </div>
                                    <p style="font-size: 11px; margin: 0px; color: red;">(Uncheck in case to remove a uploaded file)</p>
                                    foreach (var docs in Model.upload.Trim(',').Split(','))
                                    {
                                        <p style="margin: 0px;">
                                            <input type="checkbox" id="QCDocsVal" name="QCDocsVal" class="QCDocsVal" value="@docs.Trim(',')" checked title="Uncheck in case to remove a uploaded file" />
                                            <input type="hidden" id="QCDocsValselectall" name="QCDocsValselectall" />
                                            <span class="py-1 px-2 rounded">
                                                <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs})' target="_blank">Preview</a>
                                            </span>
                                        </p>
                                    }
                                }

                            </td>
                            @*<td class="col-xs-3 col-md-2">
                                @Html.LabelFor(model => model.action_status)<text style="color:red;">*</text>
                            </td>
                            <td class="col">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="action_status" name="action_status" required="required">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.Status != null)
                                    {
                                        foreach (var item in ViewBag.Status)
                                        {
                                            if (item.Value == Model.action_status)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }

                                        }
                                    }
                                </select>
                            </td>*@
                           </tr>
                    </tbody>
                </table>
            </div>

        </div>

        <div class="card-footer bg-white d-flex justify-content-between align-items-center">
            @Html.ActionLink("Back to List", "AddObjectiveActionPlan", new { ObjectivesTrans_Id = ViewBag.ObjectivesTrans_Id, Objectives_Id = ViewBag.Objectives_Id, View=ViewBag.View }, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })
            <button class="btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400" type="submit" value="Save" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Save</button>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

         $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }      
         });

        $("#QCDocsVal").click(function () {
            if ($("#QCDocsVal").prop('checked')) {
                {
                    $(this).prop('checked', true);
                }
            }
            else {
                $(this).prop('checked', false);
                document.getElementById("QCDocsValselectall").value = "DeleteQC";
            }
        });

               function checkDate() {
                    var dt1 = document.getElementById("begin_date").value;
                    var dt2 = document.getElementById("end_date").value;

                    if (new Date(dt2).getTime() < new Date(dt1).getTime()) {

                        bootbox.alert({
                            title: 'To Date',
                            message: 'End date cannot be before Begin date.'
                        });
                        $('#end_date').val("");
                    }
                }

                function FileFormatValidation(file) {
                    var ext = file.value.split(".").pop().toLowerCase();
                    if ($.inArray(ext, ["pdf", "jpg", "jpeg", "gif", "png", "xls" , "xlsx", "doc", "docx"]) == -1) {
                        file.value = "";
                        bootbox.alert({
                            title: 'File type',
                            message: 'Invalid file format, please upload Pdf,docx,doc,xls format.'
                        });
                    }
                }

    </script>
    @Scripts.Render("~/bundles/jqueryval")
}



