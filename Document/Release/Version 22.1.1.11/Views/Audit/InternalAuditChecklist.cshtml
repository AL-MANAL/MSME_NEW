@using PagedList;
@using PagedList.Mvc;

@model List<ISOStd.Models.InternalAuditChecklistModels>
    @{
        ViewBag.Title = "Internal Audit Checklist";
        ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
    }

    @*<div class = "ActionLink">@Html.ActionLink("Add New", "AddMgmtDocuments", null, new { @class = "ActionLink", onclick="HyperLinkProgressIconFunction()" })</div>*@

    @section featured {
        <div class="page-header page-header-light">

            <div class="page-header-content header-elements-md-inline">
                <div class="page-title d-flex">
                    <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

                </div>
            </div>

            <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
                <div class="d-flex">
                    <div class="breadcrumb">

                        <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                            <span class="breadcrumb-item"> Home</span>
                        </a>
                       
                        <span class="breadcrumb-item active"> Internal Audit Checklist</span>
                    </div>

                    <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
                </div>

                <div class="header-elements d-none">
                    <div class="breadcrumb justify-content-center">


                        <div class="breadcrumb-elements-item dropdown p-0">
                            <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                                <i class="icon-gear mr-2"></i>
                                Settings
                            </a>

                            <div class="dropdown-menu dropdown-menu-right">

                                <div class="dropdown-divider"></div>
                                <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

        <style>
            .hidden {
                display: none !important;
            }
        </style>
       
            @using (Html.BeginForm("AddChecklist", "Audit", FormMethod.Post, new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)


        <div class="card">
            <div class="card-header header-elements-inline bg-primary">
                <h5 class="card-title">Internal Audit Details</h5>
                <div class="header-elements">
                    <div class="list-icons">
                        <a class="list-icons-item" data-action="collapse"></a>

                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="container-fluid">

                    <table class="table table-lg">

                        <tbody>
                            <tr class="row">
                                <td class="col-xs-3 col-md-2">Audit No<text style="color:red;"> *</text></td>
                                <td class="col">
                                    <select class="form-control select-search select2-hidden-accessible" data-fouc id="AuditNo" name="AuditNo" onchange="GetDivisionDetails()" required>
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.AuditNo != null)
                                        {
                                            foreach (var item in ViewBag.AuditNo)
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    </select>
                                </td>
                                <td class="col-xs-3 col-md-2">
                                    Division
                                </td>
                                <td class="col">
                                    <input type="text" id="branch" name="branch" class="form-control" readonly style="background-color:lightgray;" />
                                </td>
                            </tr>

                            <tr class="row">
                                <td class="col-xs-3 col-md-2">Internal Audit checklist Name<text style="color:red;"> *</text></td>
                                <td class="col"> <input class="form-control" type="text" id="checklistName" name="checklistName" required /></td>
                                <td class="col-xs-3 col-md-2">
                                    Department<text style="color:red;"> *</text>
                                </td>
                                <td class="col">

                                    <select class="form-control select-search select2-hidden-accessible" data-fouc id="Department" name="Department" required>
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.Department != null)
                                        {
                                            foreach (var item in ViewBag.Department)
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    </select>

                                </td>
                            </tr>

                            <tr class="row">
                                <td class="col-xs-3 col-md-2">Document Path<text style="color:red;"> *</text></td>
                                <td class="col">
                                    <input class="bootstrap-uploader" data-fouc type="file" name="file" id="file" onchange="FileFormatValidation(this)" accept=".pdf" style="height: 38px;" />
                            </tr>
</table>

                </div>

            </div>
            @if (Obj.GetCurrentUserSession().InterChecklist.Contains("3"))
            {

                <div class="card-footer bg-white d-flex justify-content-between align-items-center">
                    <button type="submit" id="btnCreate" value="Save" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Save</button>

                </div>
            }
            </div>               


            }
                   
                    <br />
                   
                    <div class="card" id="hidden card">
                        <div class="card-header header-elements-inline">
                            <h5 class="card-title">Finding Log</h5>
                            <div class="header-elements">
                                <div class="list-icons">
                                    <a class="list-icons-item" data-action="collapse"></a>

                                    <a class="list-icons-item" data-action="remove"></a>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="options d-flex flex-fill">
                                @using (Html.BeginForm("InternalAuditChecklist", "Audit", FormMethod.Post, new { id = "form1", name = "form1", style = "width:25%" }))
                                {
                                    if (ViewBag.Branch != null)
                                    {
                                        <select class="form-control select-search select2-hidden-accessible" data-fouc id="branch_name" name="branch_name" onchange="getDetails()">
                                            <option value='' hidden>Division</option>
                                            @if (ViewBag.Branch != null)
                                            {
                                                foreach (var item in ViewBag.Branch)
                                                {
                                                    if (item.Value == ViewBag.Branch_name)
                                                    {
                                                        <option value='@item.Value' selected>@item.Text</option>
                                                    }
                                                    else
                                                    {
                                                        <option value='@item.Value'>@item.Text</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    }
                                }
                            </div>
                        </div>

                        <div class="card-body">
                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="table1">
                                <thead>

                                    <tr>

                                        <th>
                                            Sl.No
                                        </th>
                                        <th>
                                            Internal Audit Checklist Name
                                        </th>

                                        <th>
                                            Audit No
                                        </th>
                                        <th>Division</th>
                                        <th>
                                            Department
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                        <th>Delete</th>
                                       
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model != null && Model.Count() > 0)
                                    {
                                        int sl = 0;
                                        foreach (var item in Model)
                                        {
                                            sl = sl + 1;
                                    <tr>
                                        <td>@sl</td>
                                        <td>@Html.DisplayFor(modelItem => item.checklistName)</td>
                                        <td>@Html.DisplayFor(modelItem => item.AuditNo)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Branch)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Department)</td>
                                        <td>
                                            @if (item.DocUploadPath != "")
                                            {
                                                <a href='@Url.Action("DisplayDocument", "Reports", new { Document = item.DocUploadPath })' target="_blank">Preview</a>
                                            }
                                        </td>
                                        <td>

                                            @*<a href='@Url.Action("CustomerEnquiryDelete", "CustomerEnquiry", new { enquiry_id = item.Enquiry_id.ToString() })' title="Delete Enquiry" >*@

                                            <span class="badge badge-danger" title="Delete QHSE Planner" onclick="DeleteItems(@item.checklistId)" style="cursor:pointer;">Delete</span>
                                        </td>

                                    </tr>
                                        }
                                    }

                                </tbody>
                            </table>
                        </div>

                    </div>
                    @section scripts {
                        @Scripts.Render("~/bundles/jqueryval")
                        <script type="text/javascript">
                   //----zzz
    $(document).ready(function () {

        @if (TempData["alertdata"] != null ) {

           @: new Noty({
           @:     text: '@TempData["alertdata"]',
           @:     type: 'error'
           @: }).show();
        }

        @if (@TempData["Successdata"] != null ) {

        @:    new Noty({
         @:       text: '@TempData["Successdata"]',
         @:       type: 'success'
         @:   }).show();
        }
    });
    //zzz----
     

            function FileFormatValidation(file) {
                var ext = file.value.split(".").pop().toLowerCase();
                if ($.inArray(ext, ["doc", "pdf", "docx", "jpg", "jpeg", "gif", "png"]) == -1) {
                    file.value = "";
                    bootbox.alert({
                        title: 'File type',
                        message: 'Invalid file format, please upload a doc,pdf,doc,jpg,jpeg,gif,png format.'
                    });
                }

            }
                            function DeleteItems(checklistId) {

                                bootbox.confirm({
                                    title: 'Confirm dialog',
                                    message: 'Are you Sure you want to Delete the current Record?',
                                    buttons: {
                                        confirm: {
                                            label: 'Yes',
                                            className: 'btn-primary'
                                        },
                                        cancel: {
                                            label: 'Cancel',
                                            className: 'btn-link'
                                        }
                                    },
                                    callback: function (r) {
                                        if (r == true) {
                                            jQuery.ajax({
                                                url: '@Url.Action("ChecklistDelete", "Audit")',
                                                type: 'POST',
                                                dataType: "json",
                                                data: { 'checklistId': checklistId },
                                                success: function (result) {
                                                    var params = {
                                                        View: 1
                                                    };




                                                    window.location.href =
                                                        window.location.protocol + "//" +
                                                        window.location.host +
                                                        window.location.pathname

                                                }
                                            });
                                            return true;
                                        }
                                        else if (r == false) {

                                            bootbox.hideAll();
                                            return false;

                                        }

                                    }
                                });

                            }


                                var table1 = function () {

 var ShowDownld = @(Obj.GetCurrentUserSession().InterChecklist.Contains("4") ? "true" : "false");
                var ShowDel = @(Obj.GetCurrentUserSession().InterChecklist.Contains("5") ? "true" : "false");

                                    // Basic Datatable examples
                                    var _componentDatatableBasic = function () {
                                        if (!$().DataTable) {
                                            console.warn('Warning - datatables.min.js is not loaded.');
                                            return;
                                        }

                                        //Setting datatable defaults
                                        $.extend($.fn.dataTable.defaults, {
                                            autoWidth: false,
                                            responsive: true,
                                            columnDefs: [{
                                                orderable: false,
                                                width: 100,
                                                targets: [4,5]
                                            }, {
                                                'targets': [5],
                                                'visible': ShowDel
                                            }, {
                                                'targets': [4],
                                                    'visible': ShowDownld
                                            }],

                                            colReorder: false,
                                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                                            //dom: 'lBfrtip',
                                            language: {
                                                search: '<span>Filter:</span> _INPUT_',
                                                searchPlaceholder: 'Type to filter...',
                                                lengthMenu: '<span>Show:</span> _MENU_',
                                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                                            }
                                        });

                                        var myClass = "";
                var Delclass= @(Obj.GetCurrentUserSession().InterChecklist.Contains("4") ? "true" : "false");
                if (Delclass == false) { myClass = 'hidden'  };

                                        var table = $('#table1').DataTable({

                                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                                            colReorder: {
                                                fixedColumnsLeft: 1
                                            },
                                            stateSave: true,
                                            stateSaveParams: function (settings, data) {
                                                for (var i = 0, ien = data.columns.length; i < ien; i++) {
                                                    delete data.columns[i].visible;
                                                    delete data.columns[i].search;
                                                }
                                            },
                                            scrollY: '350px',
                                            scrollCollapse: true,


                                            keys: {
                                                className: 'focus focus-success'
                                            },

                                            buttons: {
                                                buttons: [
                                                    {
                                                        extend: 'copyHtml5',
                                                        className: myClass,
                                                        //className: 'btn btn-light',
                                                        title: 'audit Data export',
                                                        exportOptions: {
                                                            columns: ':visible :not(.not-export-column)'
                                                        },
                                                    },
                                                    {
                                                        extend: 'excelHtml5',
                                                        className: myClass,
                                                        //className: 'btn btn-light',
                                                        title: 'audit Data export',
                                                        exportOptions: {
                                                            columns: ':visible :not(.not-export-column)'
                                                        },

                                                    },
                                                    {
                                                        extend: 'pdfHtml5',
                                                        className: myClass,
                                                        //className: 'btn btn-light',
                                                        title: 'audit Data export',
                                                        exportOptions: {
                                                            columns: ':visible :not(.not-export-column)'
                                                        },
                                                    },
                                                    {
                                                        extend: 'csvHtml5',
                                                        className: myClass,
                                                        //className: 'btn btn-light',
                                                        title: 'audit Data export',
                                                        exportOptions: {
                                                            columns: ':visible :not(.not-export-column)'
                                                        },
                                                    },
                                                    {
                                                        extend: 'print',
                                                        className: myClass,
                                                        //className: 'btn btn-light',
                                                        title: 'audit Data export',
                                                        exportOptions: {
                                                            columns: ':visible :not(.not-export-column)'
                                                        },
                                                    },

                                                    {
                                                        extend: 'colvis',
                                                        text: '<i class="icon-three-bars"></i>',
                                                        className: 'btn bg-blue btn-icon dropdown-toggle',
                                                        columns: ':visible:not(.not-export-column)'
                                                    }
                                                ]
                                            }




                                        });
                                        // Adjust columns on window resize
                                        setTimeout(function () {
                                            $(window).on('resize', function () {
                                                table.columns.adjust();
                                            });
                                        }, 100);


                                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                                        $('.sidebar-control').on('click', function () {

                                            setTimeout(function () {
                                                //alert("gii");

                                                table.columns.adjust().draw();
                                                $("#table1").resize();
                                            }, 100);

                                        });
                                        //}

                                        $('#table1').on('page.dt', function () {
                                            //table.draw();
                                            //alert("zzz1");
                                            $("#table1").resize();

                                        });

                                        $('#table1').on('column-visibility.dt', function () {
                                            //table.draw();
                                            //alert("zzz2");
                                            $("#table1").resize();

                                        });

                                        $('#table1').on('order.dt', function () {
                                            //table.draw();
                                            //alert("zzz3");
                                            $("#table1").resize();

                                        });


                                        $('#table1').on('responsive-display.dt', function () {
                                            //table.draw();
                                            //alert("zzz4");
                                            $("#table1").resize();

                                        });


                                        $('#table1').on('responsive-resize.dt', function () {
                                            //table.draw();
                                            //alert("zzz4");
                                            $("#table1").resize();

                                        });






                                    };






                                    // Select2 for length menu styling
                                    var _componentSelect2 = function () {
                                        if (!$().select2) {
                                            console.warn('Warning - select2.min.js is not loaded.');
                                            return;
                                        }

                                        // Initialize
                                        $('.dataTables_length select').select2({
                                            minimumResultsForSearch: Infinity,
                                            dropdownAutoWidth: true,
                                            width: 'auto'
                                        });
                                    };


                                    //
                                    // Return objects assigned to module
                                    //

                                    return {
                                        init: function () {
                                            _componentDatatableBasic();
                                            _componentSelect2();
                                        }
                                    }
                                }();


                                // Initialize module
                                // ------------------------------

                                document.addEventListener('DOMContentLoaded', function () {
                                    table1.init();
                            });

           function getDetails() {
                var branch_name = document.getElementById("branch_name").value;

                   jQuery.ajax({
                                url: '@Url.Action("InternalAuditChecklistSearch", "Audit")',
                        type: 'POST',
                        dataType: "json",
                        data: { 'branch_name': branch_name },
                        success: function (result) {
                            var params = {
                                branch_name: branch_name
                            };
                            queryString = $.param(params);

                            window.location.href =
                                window.location.protocol + "//" +
                                window.location.host +
                                window.location.pathname +
                               '?' + queryString;
                        }
                    });  
                            }

             function GetDivisionDetails() {
                var AuditNum = $("#AuditNo").val();
                $.ajax({
                    url:'@Url.Action("GetDivisionDetailsbyAuditNum","Audit")',
                    dataType: "json",
                    type: 'post',
                    data: { 'AuditNum': AuditNum},
                    success: function (result) {
                        if (result != null && result != "") {
                            document.getElementById("branch").value = result;
                        }
                        else {
                            document.getElementById("branch").value = "";
                        }
                    }
                })

            }
       
                        </script>

                    }
