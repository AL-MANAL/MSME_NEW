@model ISOStd.Models.RiskMgmtModels
@using System.Data;
@{
    ViewBag.Title = "RiskDetails";
    DataSet dsMitigat = new DataSet();

    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
    string user = Obj.GetCurrentUserSession().empid;

    if (ViewBag.Mit != null)
    {
        dsMitigat = ViewBag.Mit;
    }
}

@section featured {
    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>


                    <a class="breadcrumb-item" onclick="HyperLinkProgressIconFunction();" href='@Url.Action("RiskList", "RiskMgmt", new { risk_id = Model.risk_id } )'>
                        <span class="breadcrumb-item">Quality Related Risk</span>
                    </a>

                    <span class="breadcrumb-item active"> Quality Related Risk Details</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}


<div class="card">
    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">  Quality Related Risk Details</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>
            </div>
        </div>
    </div>
    <div>
        <div class="card-header bg-white header-elements-sm-inline">

            <div class="header-elements">

                <div class="mt-2 mt-sm-0">
                    @if (Obj.GetCurrentUserSession().Risk.Contains("3"))
                    {
                        <a class="btn bg-orange btn-labeled btn-labeled-left" data-style="radius" href='@Url.Action("RiskEdit", "RiskMgmt", new { risk_id = Model.risk_id })' title="Edit" onclick="HyperLinkProgressIconFunction()">
                            <b>  <i class="icon-add-to-list"></i></b> Edit
                        </a>
                    }
                    @Html.ActionLink("Back to List", "RiskList", null, new { @class = "btn btn-outline bg-orange text-orange border-orange", onclick = "HyperLinkProgressIconFunction()" })

                </div>
            </div>
        </div>
    </div>

    <div class="card-body">
        <div class="container-fluid">
            <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                <thead></thead>
                <tbody>
                    <tr class="row">
                        <td class="col" colspan="4" style="background-color: #4cc4dd; color: #fff; font-weight: bold;">Risk Identification</td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.risk_refno)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.risk_refno)
                            </p>
                        </td>
                        </tr>
                      <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.branch_id)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.branch_id)
                            </p>
                        </td>                    
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.dept)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.dept)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.source_id)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.source_id)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Location)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Location)
                            </p>
                        </td>
                    </tr>
                
                    <tr class="row">

                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.risk_owner)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.risk_owner)
                            </p>
                        </td>

                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.risk_manager)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.risk_manager)
                            </p>
                        </td>
                    </tr>

                    <tr class="row">

                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.risk_desc)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.risk_desc)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.Issue)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Issue)
                            </p>
                        </td>

                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.origin_risk)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-4">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.origin_risk)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">

                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.like_id)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.like_id)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.impact_id)
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.impact_id)
                            </p>
                        </td>

                    </tr>
                    <tr class="row">

                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                Risk Rating
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.RiskRating)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                Risk Type
                            </p>
                        </td>
                        <td class="col">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.Risk_Type)
                            </p>
                        </td>

                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.consequences)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-4">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.consequences)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.apprv_status)
                            </p>
                        </td>
                        <td class="col-xs-3 col-md-4">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.apprv_status)
                            </p>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.reeval_due_date)
                            </p>
                        </td>
                        <td class="col">
                            <span class="bg-dark py-1 px-2 rounded">
                                @if (Model.reeval_due_date != null && Model.reeval_due_date > Convert.ToDateTime("01/01/0001"))
                                {
                                    @Html.Label(Model.reeval_due_date.ToString("dd/MM/yyyy"))
                                }
                            </span>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.evaluation_date)
                            </p>
                        </td>

                        <td class="col">
                            <span class="bg-dark py-1 px-2 rounded">
                                @if (Model.evaluation_date != null && Model.evaluation_date > Convert.ToDateTime("01/01/0001"))
                                {
                                    @Html.Label(Model.evaluation_date.ToString("dd/MM/yyyy"))
                                }
                            </span>
                        </td>
                    </tr>

                    @if(Model.apprv_status == "Pending for Approval")
                    {
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.DisplayNameFor(model => model.approved_by)
                                </p>
                            </td>
                            <td class="col-xs-3 col-md-4">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.approved_by)
                                </p>
                            </td>

                        </tr>
                    }
                    else if (Model.apprv_status == "Approved" || Model.apprv_status == "Rejected")
                    {
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                   Approved By
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.approved_by)
                                </p>
                            </td>
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.DisplayNameFor(model => model.approved_date)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @if (Model.approved_date != null && Model.approved_date > Convert.ToDateTime("01/01/0001"))
                                    {
                                        @Html.Label(Model.approved_date.ToString("dd/MM/yyyy hh:mm:ss"))
                                    }
                                </p>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.DisplayNameFor(model => model.apprv_status)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.apprv_status)
                                </p>
                            </td>
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    @Html.DisplayNameFor(model => model.apprv_comment)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.apprv_comment)
                                </p>
                            </td>
                        </tr>
                    }
                  
</table>
            @if (dsMitigat != null && dsMitigat.Tables.Count > 0 && dsMitigat.Tables[0].Rows.Count > 0)
            {
                <br />
                <h2 class="bg-dark pl-sm-2">Initial Mitigation</h2>
                <div class="table-responsive">
                    <table class="table table-bordered table-striped table-hover datatable-responsive" id="table1">
                        <thead>
                            <tr class="bg-brown">

                                <th>Sl No</th>
                                <th>Mitigation Measure</th>
                                <th>Person Responsible</th>
                                <th>Target Date</th>

                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0, j = 1; i < dsMitigat.Tables[0].Rows.Count; i++, j++)
                            {
                                <tr>

                                    <td>
                                        @j
                                    </td>
                                    <td>
                                        @dsMitigat.Tables[0].Rows[i]["measure"].ToString()
                                    </td>
                                    <td>
                                        @Obj.GetEmpHrNameById(dsMitigat.Tables[0].Rows[i]["pers_resp"].ToString())
                                    </td>
                                    <td>
                                        @if (dsMitigat.Tables[0].Rows[i]["target_date"].ToString() != null && Convert.ToDateTime(dsMitigat.Tables[0].Rows[i]["target_date"].ToString()) > Convert.ToDateTime("01/01/0001"))
                                        {
                                            @Html.Label(Convert.ToDateTime(dsMitigat.Tables[0].Rows[i]["target_date"].ToString()).ToString("dd/MM/yyyy"))
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>



                </div>
            }
           
         </div>

   
      

    </div>
</div>

@section scripts {
    <script>
        //----zzz


        $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
                                @:     text: '@TempData["alertdata"]',
                                @:     type: 'error'
                                @: }).show();
                                             }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
                                @:       text: '@TempData["Successdata"]',
                                @:       type: 'success'
                @:}).show();
        }
});

//zzz----

        function RejectRequired() {
            var doc_status = $("input[type='radio'][id='apprv_status']:checked").val();
            if (doc_status == "1") {
                $("#apprv_comment").attr('required', true);

            }
            else {
                $("#apprv_comment").attr('required', false);

            }
        }

var table1 = function () {


    //
    // Setup module components
    //

    // Basic Datatable examples
    var _componentDatatableBasic = function () {
        if (!$().DataTable) {
            console.warn('Warning - datatables.min.js is not loaded.');
            return;
        }

        //Setting datatable defaults
        $.extend($.fn.dataTable.defaults, {
            autoWidth: false,
            responsive: true,
            columnDefs: [{
                orderable: false,
                width: 100,
                targets: []
            }],

            colReorder: false,
            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
            //dom: 'lBfrtip',
            language: {
                search: '<span>Filter:</span> _INPUT_',
                searchPlaceholder: 'Type to filter...',
                lengthMenu: '<span>Show:</span> _MENU_',
                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
            }
        });


        var table = $('#table1').DataTable({

            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
            colReorder: {
                fixedColumnsLeft: 1
            },
            stateSave: true,

            scrollY: '350px',
            scrollCollapse: true,


            keys: {
                className: 'focus focus-success'
            },

            buttons: {
                buttons: [
                    {
                        extend: 'copyHtml5',
                        className: 'btn btn-light',
                        title: 'Data export',
                        exportOptions: {
                            columns: ':visible :not(.not-export-column)'
                        },
                    },
                    {
                        extend: 'excelHtml5',
                        className: 'btn btn-light',
                        title: 'Data export',
                        exportOptions: {
                            columns: ':visible :not(.not-export-column)'
                        },

                    },
                    {
                        extend: 'pdfHtml5',
                        className: 'btn btn-light',
                        title: 'Data export',
                        exportOptions: {
                            columns: ':visible :not(.not-export-column)'
                        },
                    },
                    {
                        extend: 'csvHtml5',
                        className: 'btn btn-light',
                        title: 'Data export',
                        exportOptions: {
                            columns: ':visible :not(.not-export-column)'
                        },
                    },
                    {
                        extend: 'print',
                        className: 'btn btn-light',
                        title: 'Data export',
                        exportOptions: {
                            columns: ':visible :not(.not-export-column)'
                        },
                    },

                    {
                        extend: 'colvis',
                        text: '<i class="icon-three-bars"></i>',
                        className: 'btn bg-blue btn-icon dropdown-toggle'
                    }
                ]
            }




        });
        // Adjust columns on window resize
        setTimeout(function () {
            $(window).on('resize', function () {
                table.columns.adjust();
            });
        }, 100);


        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
        $('.sidebar-control').on('click', function () {

            setTimeout(function () {
                //alert("gii");

                table.columns.adjust().draw();
                $("#table1").resize();
            }, 100);

        });
        //}

        $('#table1').on('page.dt', function () {
            //table.draw();
            //alert("zzz1");
            $("#table1").resize();

        });

        $('#table1').on('column-visibility.dt', function () {
            //table.draw();
            //alert("zzz2");
            $("#table1").resize();

        });

        $('#table1').on('order.dt', function () {
            //table.draw();
            //alert("zzz3");
            $("#table1").resize();

        });


        $('#table1').on('responsive-display.dt', function () {
            //table.draw();
            //alert("zzz4");
            $("#table1").resize();

        });


        $('#table1').on('responsive-resize.dt', function () {
            //table.draw();
            //alert("zzz4");
            $("#table1").resize();

        });


        //.on('order.dt', function () {
        //    table.columns.adjust().draw();
        //    $("#qhse").resize(); })
        //.on('search.dt', function () {
        //    table.columns.adjust().draw();
        //    $("#qhse").resize(); })

        //.on('column-visibility.dt', function () {
        //    table.columns.adjust().draw();
        //    $("#qhse").resize();
        //})



    };






    // Select2 for length menu styling
    var _componentSelect2 = function () {
        if (!$().select2) {
            console.warn('Warning - select2.min.js is not loaded.');
            return;
        }

        // Initialize
        $('.dataTables_length select').select2({
            minimumResultsForSearch: Infinity,
            dropdownAutoWidth: true,
            width: 'auto'
        });
    };


    //
    // Return objects assigned to module
    //

    return {
        init: function () {
            _componentDatatableBasic();
            _componentSelect2();
        }
    }
}();

var table2 = function () {


    //
    // Setup module components
    //

    // Basic Datatable examples
    var _componentDatatableBasic = function () {
        if (!$().DataTable) {
            console.warn('Warning - datatables.min.js is not loaded.');
            return;
        }

        //Setting datatable defaults
        $.extend($.fn.dataTable.defaults, {
            autoWidth: false,
            responsive: true,
            columnDefs: [{
                orderable: false,
                width: 100,
                targets: [1, 7]
            }],

            colReorder: false,
            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
            //dom: 'lBfrtip',
            language: {
                search: '<span>Filter:</span> _INPUT_',
                searchPlaceholder: 'Type to filter...',
                lengthMenu: '<span>Show:</span> _MENU_',
                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
            }
        });


        var table = $('#table2').DataTable({

            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
            colReorder: {
                fixedColumnsLeft: 1
            },
            stateSave: true,

            scrollY: '350px',
            scrollCollapse: true,


            keys: {
                className: 'focus focus-success'
            },

            buttons: {
                buttons: [
                    {
                        extend: 'copyHtml5',
                        className: 'btn btn-light',
                        title: 'Data export',
                        exportOptions: {
                            columns: ':visible :not(.not-export-column)'
                        },
                    },
                    {
                        extend: 'excelHtml5',
                        className: 'btn btn-light',
                        title: 'Data export',
                        exportOptions: {
                            columns: ':visible :not(.not-export-column)'
                        },

                    },
                    {
                        extend: 'pdfHtml5',
                        className: 'btn btn-light',
                        title: 'Data export',
                        exportOptions: {
                            columns: ':visible :not(.not-export-column)'
                        },
                    },
                    {
                        extend: 'csvHtml5',
                        className: 'btn btn-light',
                        title: 'Data export',
                        exportOptions: {
                            columns: ':visible :not(.not-export-column)'
                        },
                    },
                    {
                        extend: 'print',
                        className: 'btn btn-light',
                        title: 'Data export',
                        exportOptions: {
                            columns: ':visible :not(.not-export-column)'
                        },
                    },

                    {
                        extend: 'colvis',
                        text: '<i class="icon-three-bars"></i>',
                        className: 'btn bg-blue btn-icon dropdown-toggle'
                    }
                ]
            }




        });
        // Adjust columns on window resize
        setTimeout(function () {
            $(window).on('resize', function () {
                table.columns.adjust();
            });
        }, 100);


        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
        $('.sidebar-control').on('click', function () {

            setTimeout(function () {
                //alert("gii");

                table.columns.adjust().draw();
                $("#table2").resize();
            }, 100);

        });
        //}

        $('#table2').on('page.dt', function () {
            //table.draw();
            //alert("zzz1");
            $("#table2").resize();

        });

        $('#table2').on('column-visibility.dt', function () {
            //table.draw();
            //alert("zzz2");
            $("#table2").resize();

        });

        $('#table2').on('order.dt', function () {
            //table.draw();
            //alert("zzz3");
            $("#table2").resize();

        });


        $('#table2').on('responsive-display.dt', function () {
            //table.draw();
            //alert("zzz4");
            $("#table2").resize();

        });


        $('#table2').on('responsive-resize.dt', function () {
            //table.draw();
            //alert("zzz4");
            $("#table2").resize();

        });


        //.on('order.dt', function () {
        //    table.columns.adjust().draw();
        //    $("#qhse").resize(); })
        //.on('search.dt', function () {
        //    table.columns.adjust().draw();
        //    $("#qhse").resize(); })

        //.on('column-visibility.dt', function () {
        //    table.columns.adjust().draw();
        //    $("#qhse").resize();
        //})



    };






    // Select2 for length menu styling
    var _componentSelect2 = function () {
        if (!$().select2) {
            console.warn('Warning - select2.min.js is not loaded.');
            return;
        }

        // Initialize
        $('.dataTables_length select').select2({
            minimumResultsForSearch: Infinity,
            dropdownAutoWidth: true,
            width: 'auto'
        });
    };


    //
    // Return objects assigned to module
    //

    return {
        init: function () {
            _componentDatatableBasic();
            _componentSelect2();
        }
    }
}();




// Initialize module
// ------------------------------

document.addEventListener('DOMContentLoaded', function () {
    table1.init();
});

document.addEventListener('DOMContentLoaded', function () {
    table2.init();
});

    </script>


}