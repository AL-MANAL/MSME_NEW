@model ISOStd.Models.JDModels
@using System.Data;
@{
    ViewBag.Title = "";
    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
    string login_user = Obj.GetCurrentUserSession().empid;
    DataSet dsReview = new DataSet();
    dsReview = ViewBag.dsReview;
    DataSet dsApprove = new DataSet();
    dsApprove = ViewBag.dsApprove;


}

@section featured {

    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("JDList", "JD", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Job Description</span>
                    </a>
                    <span class="breadcrumb-item active">JD Details</span>
                </div>


            </div>


        </div>
    </div>
}

<style>
    .hidden {
        display: none !important;
    }
</style>

<div class="card">
    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">JD Details</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>

            </div>
        </div>
    </div>


    <div class="card-body">
        <div class="container-fluid">
            <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            <p class="bg-brown py-1 px-2 rounded">
                                Designation
                            </p>
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            <p class="bg-dark py-1 px-2 rounded">
                                @ViewBag.Designation
                            </p>
                        </div>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.LabelFor(model => model.jd_date)
                            </p>
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">

                            @if (Model.jd_date > Convert.ToDateTime("01/01/0001"))
                            {
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Model.jd_date.ToString("dd/MM/yyyy")
                                </p>
                            }

                        </div>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.LabelFor(model => model.deptid)
                            </p>
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.deptid)
                            </p>
                        </div>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.LabelFor(model => model.report_to)
                            </p>
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.report_to)
                            </p>
                        </div>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.LabelFor(model => model.supervises)
                            </p>
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.supervises)
                            </p>
                        </div>
                    </td>

                </tr>

                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.LabelFor(model => model.responsibility)
                            </p>
                        </div>
                    </td>
                    <td class="col" colspan="3">
                        <div class="editor-field">

                            @Html.Raw(Model.responsibility)

                        </div>
                    </td>

                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.LabelFor(model => model.authorities)
                            </p>
                        </div>
                    </td>
                    <td class="col" colspan="3">
                        <div class="editor-field">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.authorities)
                            </p>
                        </div>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.LabelFor(model => model.interfaces_internal)
                            </p>
                        </div>
                    </td>
                    <td class="col" colspan="3">
                        <div class="editor-field">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.interfaces_internal)
                            </p>
                        </div>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.LabelFor(model => model.interfaces_external)
                            </p>
                        </div>
                    </td>
                    <td class="col" colspan="3">
                        <div class="editor-field">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.interfaces_external)
                            </p>
                        </div>
                    </td>

                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.LabelFor(model => model.accountable)
                            </p>
                        </div>
                    </td>
                    <td class="col" colspan="3">
                        <div class="editor-field">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.accountable)
                            </p>
                        </div>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.LabelFor(model => model.revised_date)
                            </p>
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            @if (Model.revised_date > Convert.ToDateTime("01/01/0001"))
                            {
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Model.revised_date.ToString("dd/MM/yyyy")
                                </p>
                            }
                        </div>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.LabelFor(model => model.rev_no)
                            </p>
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.rev_no)
                            </p>
                        </div>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col" colspan="4">
                        Minimum Competency Required to hold the position
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-4">
                        <p class="bg-brown py-1 px-2 rounded">
                            Competence Parameters
                        </p>
                    </td>
                    <td class="col-xs-3 col-md-4">
                        <p class="bg-brown py-1 px-2 rounded">
                            Mandatory
                        </p>
                    </td>
                    <td class="col-xs-3 col-md-4">
                        <p class="bg-brown py-1 px-2 rounded">
                            Optional
                        </p>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-4">
                        <p class="bg-brown py-1 px-2 rounded">
                            Academic qualification
                        </p>
                    </td>
                    <td class="col-xs-3 col-md-4">
                        <div class="editor-field">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.academic_mandatory)
                            </p>
                        </div>
                    </td>
                    <td class="col-xs-3 col-md-4">
                        <div class="editor-field">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.academic_optional)
                            </p>
                        </div>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-4">
                        <p class="bg-brown py-1 px-2 rounded">
                            Trade Certificate
                        </p>
                    </td>
                    <td class="col-xs-3 col-md-4">
                        <div class="editor-field">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.trade_mandatory)
                            </p>
                        </div>
                    </td>
                    <td class="col-xs-3 col-md-4">
                        <div class="editor-field">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.trade_optional)
                            </p>
                        </div>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-4">
                        <p class="bg-brown py-1 px-2 rounded">
                            Relevant experience
                        </p>
                    </td>
                    <td class="col-xs-3 col-md-4">
                        <div class="editor-field">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.experience_mandatory)
                            </p>
                        </div>
                    </td>
                    <td class="col-xs-3 col-md-4">
                        <div class="editor-field">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.experience_optional)
                            </p>
                        </div>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-4">
                        <p class="bg-brown py-1 px-2 rounded">
                            Relevant trainings
                        </p>
                    </td>
                    <td class="col-xs-3 col-md-4">
                        <div class="editor-field">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.trainings_mandatory)
                            </p>
                        </div>
                    </td>
                    <td class="col-xs-3 col-md-4">
                        <div class="editor-field">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.trainings_optional)
                            </p>
                        </div>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-4">
                        <p class="bg-brown py-1 px-2 rounded">
                            Skills (Wherever required)
                        </p>
                    </td>
                    <td class="col-xs-3 col-md-4">
                        <div class="editor-field">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.skills_mandatory)
                            </p>

                        </div>
                    </td>
                    <td class="col-xs-3 col-md-4">
                        <div class="editor-field">
                            <p class="bg-dark py-1 px-2 rounded">
                                @Html.DisplayFor(model => model.skills_optional)
                            </p>

                        </div>
                    </td>
                </tr>
            </table>

            <br />
            <br />
            @if (dsReview != null && dsReview.Tables.Count > 0 && dsReview.Tables[0].Rows.Count > 0)
            {
                <br />
                <h2 class="bg-dark pl-sm-2">Reviewer Details</h2>
                    <div class="table-responsive">
                        <table class="table table-bordered table-striped table-hover datatable-responsive" id="table1">
                            <thead>
                                <tr class="bg-brown">

                                    <th>Sl No</th>
                                    <th>Employee Name</th>
                                    <th>Review Status</th>
                                    <th>Review date</th>
                                    <th>Comment</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0, j = 1; i < dsReview.Tables[0].Rows.Count; i++, j++)
                                {
                                    <tr>
                                        <td>
                                            @j
                                        </td>
                                        <td>
                                            @Obj.GetEmpHrNameById(dsReview.Tables[0].Rows[i]["emp_id"].ToString())
                                        </td>
                                        <td>
                                            @(dsReview.Tables[0].Rows[i]["apprv_status"].ToString())
                                        </td>
                                        <td>

                                            @if (dsReview.Tables[0].Rows[i]["apprv_date"].ToString() != "" && dsReview.Tables[0].Rows[i]["apprv_date"].ToString() != null)
                                            {
                                                @Convert.ToDateTime(dsReview.Tables[0].Rows[i]["apprv_date"].ToString()).ToString("dd/MM/yyyy hh:mm:ss")
                                            }
                                        </td>
                                        <td>
                                            @(dsReview.Tables[0].Rows[i]["comments"].ToString())
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>



                    </div>
            }
            <br />
            <br />
            @if (dsApprove != null && dsApprove.Tables.Count > 0 && dsApprove.Tables[0].Rows.Count > 0)
            {
                <br />
                <h2 class="bg-dark pl-sm-2">Approval Details</h2>
                <div class="table-responsive">
                    <table class="table table-bordered table-striped table-hover datatable-responsive" id="table1">
                        <thead>
                            <tr class="bg-brown">

                                <th>Sl No</th>
                                <th>Employee Name</th>
                                <th>Approval Status</th>
                                <th>Approval date</th>
                                <th>Comment</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0, j = 1; i < dsApprove.Tables[0].Rows.Count; i++, j++)
                            {
                                <tr>
                                    <td>
                                        @j
                                    </td>
                                    <td>
                                        @Obj.GetEmpHrNameById(dsApprove.Tables[0].Rows[i]["emp_id"].ToString())
                                    </td>
                                    <td>
                                        @(dsApprove.Tables[0].Rows[i]["apprv_status"].ToString())
                                    </td>
                                    <td>
                                        @if (dsApprove.Tables[0].Rows[i]["apprv_date"].ToString() != "" && dsApprove.Tables[0].Rows[i]["apprv_date"].ToString() != null)
                                        {
                                            @Convert.ToDateTime(dsApprove.Tables[0].Rows[i]["apprv_date"].ToString()).ToString("dd/MM/yyyy hh:mm:ss")
                                        }
                                    </td>
                                    <td>
                                        @(dsApprove.Tables[0].Rows[i]["comments"].ToString())
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>



                </div>
            }
            @if (ViewBag.ReviewStatus == true)
            {
                using (Html.BeginForm("JDReviewOrReject", "JD", FormMethod.Post,
                   new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    <input type="hidden" id="id_jd" name="id_jd" value="@Model.id_jd" />

                    <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    Review <text style="color:red;">*</text>
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    <label><input type="radio" id="apprv_status" name="apprv_status" value="2" required onchange="ReviewRequired()" />Reviewed</label>
                                    <label><input type="radio" id="apprv_status" name="apprv_status" value="1" required onchange="ReviewRequired()" />Rejected</label>
                                </p>
                            </td>

                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    Comments
                                </p>
                            </td>
                            <td class="col">
                                <div class="bg-dark py-1 px-2 rounded">
                                    <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="comments" name="comments"></textarea>
                                </div>
                            </td>
                        </tr>
                    </table>
                    <div class="card-footer bg-white d-flex justify-content-between align-items-center">
                        <button type="submit" id="btnCreate" value="Submit" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Submit</button>
                    </div>
                }
            }
            @if (ViewBag.ApproveStatus == true)
            {
                using (Html.BeginForm("JDApproveReject", "JD", FormMethod.Post,
                   new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    <input type="hidden" id="id_jd" name="id_jd" value="@Model.id_jd" />

                    <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    Approve <text style="color:red;">*</text>
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    <label><input type="radio" id="apprv_status" name="apprv_status" value="4" required onchange="ApproveRequired()" />Approved</label>
                                    <label><input type="radio" id="apprv_status" name="apprv_status" value="3" required onchange="ApproveRequired()" />Rejected</label>
                                </p>
                            </td>

                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    Comments
                                </p>
                            </td>
                            <td class="col">
                                <div class="bg-dark py-1 px-2 rounded">
                                    <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="comments" name="comments"></textarea>
                                </div>
                            </td>
                        </tr>
                    </table>
                    <div class="card-footer bg-white d-flex justify-content-between align-items-center">
                        <button type="submit" id="btnCreate" value="Submit" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Submit</button>
                    </div>
                }
            }
        </div>
    </div>

</div>





@section Scripts {
    <script type="text/javascript">
                    //----zzz


     $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }
    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
     });


        function ReviewRequired() {
            var doc_status = $("input[type='radio'][id='apprv_status']:checked").val();
            if (doc_status == "1") {
                $("#comments").attr('required', true);
            }
            else {
                $("#comments").attr('required', false);
            }
        }
        function ApproveRequired() {
            var doc_status = $("input[type='radio'][id='apprv_status']:checked").val();
            if (doc_status == "3") {
                $("#comments").attr('required', true);
            }
            else {
                $("#comments").attr('required', false);
            }
        }
    </script>
}
