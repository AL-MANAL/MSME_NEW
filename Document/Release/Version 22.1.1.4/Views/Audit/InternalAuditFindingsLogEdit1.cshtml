@model ISOStd.Models.InternalAuditFindingsLog

@{
    ViewBag.Title = "InternalAuditFindingsLogEdit";
}




@section featured {




    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>


        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("InternalAuditFindingsLogList", "Audit", new {  AuditTransID = ViewBag.AuditTransID, AuditNum = ViewBag.AuditNum, AuditID = ViewBag.AuditID })" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Internal Audit Finding List</span>
                    </a>
                    <span class="breadcrumb-item active"> ADD NCR</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            <div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


}



@using (Html.BeginForm("InternalAuditFindingsLogEdit1", "Audit", FormMethod.Post, new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)


    <input type="hidden" id="AuditFindingID" name="AuditFindingID" value="@Model.AuditFindingID" />
    <input type="hidden" id="AuditTransID" name="AuditTransID" value="@Model.AuditTransID" />
    <input type="hidden" id="AuditNum" name="AuditNum" value="@ViewBag.AuditNum" />
    <input type="hidden" id="AuditID" name="AuditID" value="@ViewBag.AuditID" />

    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Internal Audit Details</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>

                </div>
            </div>
        </div>


        <div class="card-body">
            <div class="container-fluid">

                <table class="table table-lg">

                    <tbody>












                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                AuditNum

                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    <input class="form-control" type="text" id="AuditNum" name="AuditNum" value="@ViewBag.AuditNum" disabled />
                                </div>
                            </td>
                            <td class="col-xs-3 col-md-2">

                                Department

                            </td>
                            <td class="col">

                                <input class="form-control" type="text" id="DeptID" name="DeptID" value="@ViewBag.DeptID" disabled />

                            </td>
                        </tr>

                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                Auditee(s)

                            </td>
                            <td class="col">

                                @*<input type="text" id="Auditee" name="Auditee" value="@ViewBag.Auditee" style="background-color:#efefe6;height:150px;width:250px;" disabled />*@
                                <textarea class="form-control" id="Auditee" name="Auditee" disabled>@ViewBag.Auditee</textarea>

                            </td>
                            <td class="col-xs-3 col-md-2">

                                Auditor(s)

                            </td>
                            <td class="col">

                                @*<input type="text" id="Auditor" name="Auditor" value="@ViewBag.Auditor" style="background-color:#efefe6;height:150px;width:250px;" disabled />*@
                                <textarea class="form-control" id="Auditor" name="Auditor" disabled>@ViewBag.Auditor</textarea>

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.ISOstandardID)

                            </td>
                            <td class="col">

                                <textarea class="form-control" id="ISOstandardID" name="ISOstandardID" disabled>@Model.ISOstandardID</textarea>

                            </td>
                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.ISO_standard_clause)

                            </td>
                            <td class="col">

                                <textarea class="form-control" id="ISO_standard_clause" name="ISO_standard_clause" disabled>@Model.ISO_standard_clause</textarea>

                            </td>

                        </tr>
                        <tr class="row">

                            <td class="col-xs-3 col-md-2">

                                @Html.LabelFor(model => model.NCRNo)

                            <td class="col">

                                <input class="form-control" type="text" id="NCRNo" name="NCRNo" value="@Model.NCRNo" disabled />

                            </td>

                        </tr>

                        <tr class="row">
                            <td class="col" colspan="4">

                                <b>@Html.LabelFor(model => model.NCRDesc)</b>

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col" colspan="4">

                                @Html.TextAreaFor(model => model.NCRDesc, new { @id = "editor-readonly", @rows = "4", @cols = "4", @disabled = true })

                            </td>
                        </tr>





                        @*<tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.ISOstandardID)<text style="color:red;">*</text>
                </div>
            </td>
            <td>
                <div class="editor-field">
                    <select class="chosen-select" id="ISOstandardID" name="ISOstandardID" onchange="GetISOClauses()" required="" multiple style="height: 100px;">
                        @if (ViewBag.IsoStdList != null)
                        {
                            foreach (var data in ViewBag.IsoStdList)
                            {
                                if (Model.ISOstandardID.Contains(data.Text))
                                {
                                     <option value='@data.Value' selected>@data.Text</option>
                                    }
                                    else
                                    {
                                     <option value='@data.Value'>@data.Text</option>
                                    }
                                }
                            }
                    </select>
                </div>
            </td>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.NCRNo)<text style="color:red;">*</text>
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.TextAreaFor(model => model.NCRNo, new { htmlAttributes = new { @required = "required" } })
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.NCRDesc)<text style="color:red;">*</text>
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.EditorFor(model => model.NCRDesc, new { htmlAttributes = new { @required = "required" } })
                </div>
            </td>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.ISO_standard_clause)<text style="color:red;">*</text>
                </div>
            </td>
            <td>

                 <div class="editor-field">
                    <select class="chosen-select" id="ISO_standard_clause" name="ISO_standard_clause" required style="height: 200px; width: 300px;"  multiple>
                         @if (ViewBag.AppClauses != null)
                         {
                             foreach (var data in ViewBag.AppClauses)
                             {
                                 if (Array.IndexOf(Model.ISO_standard_clause.ToString().Split(','), data.Value) >= 0)
                                {
                                <option value='@data.Value' selected>@data.Text</option>
                                 }
                                 else
                                 {
                                <option value='@data.Value'>@data.Text</option>
                                 }
                             }
                         }
                            </select>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.FindingCategory)
                </div>
            </td>
            <td>
                <div class="editor-field">
                    <select class="chosen-select" id="FindingCategory" name="FindingCategory" required>
                        <option value=''>Select</option>
                        @if (ViewBag.FindingCategory != null)
                        {
                            foreach (var data in ViewBag.FindingCategory)
                            {
                                if (data.Text == Model.FindingCategory)
                                {
                            <option value='@data.Value' selected>@data.Text</option>
                                }
                                else
                                {
                            <option value='@data.Value'>@data.Text</option>
                               }
                            }
                         }
                    </select>
                </div>
            </td>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.CorrectionDate)<text style="color:red;">*</text>
                </div>
            </td>
            <td>
                <div class="editor-field">
                    <input type="text" id="CorrectionDate" name="CorrectionDate" value="@Model.CorrectionDate.ToString("dd/MM/yyyy")" required readonly/>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Reviewed_by)<text style="color:red;">*</text>
                </div>
            </td>
            <td>
                <div class="editor-field">
                    <select class="chosen-select" id="Reviewed_by" name="Reviewed_by" required="">
                        <option value=''>Select</option>
                        @if (ViewBag.EmpLists != null)
                        {
                            foreach (var item in ViewBag.EmpLists)
                            {
                                if (item.Text == Model.Reviewed_by)
                                {
                            <option value='@item.Value' selected>@item.Text</option>
                                }
                                else
                                {
                            <option value='@item.Value'>@item.Text</option>
                               }
                            }
                         }
                    </select>
                </div>
            </td>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Checklist)
                </div>
            </td>
            <td>
                 <div class="editor-field">
                   <input type="file" name="file" id="file" value="" onchange="FileFormatValidation(this)" accept=".pdf" style="height: 38px;"/>
                     @if (Model.Checklist!= "")
                     {
                          <a href='@Url.Action("DisplayDocument", "Reports", new { Document = Model.Checklist })' target="_blank">Preview</a>
                     }
                </div>
            </td>
            </tr>*@

                        <tr class="row">
                            <td class="col" colspan="4">
                                <div class="editor-label">
                                    <label for="Discrepancy_Details" style="background-color: #4cc4dd; width: 100%; color: white;">Non Conformity / Observation Details</label>
                                </div>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.DisplayNameFor(model => model.CorrectiveActionDate)<text style="color:red;">*</text>

                            </td>
                            <td class="col">

                                <input class="form-control" type="date" id="CorrectiveActionDate" name="CorrectiveActionDate" value="@Model.CorrectiveActionDate.ToString("yyyy-MM-dd")" required onchange="checkDate();" />

                            </td>

                        </tr>

                        <tr class="row">
                            <td class="col-xs-3 col-md-2">

                                @Html.DisplayNameFor(model => model.Followupdate)<text style="color:red;">*</text>

                            </td>
                            <td class="col">

                                <input class="form-control" type="date" id="Followupdate" name="Followupdate" value="@Model.Followupdate.ToString("yyyy-MM-dd")" required onchange="checkDate2();" />

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col" colspan="4">
                                <div class="display-label" style="background-color: #4cc4dd; width: 100%; color: white;">
                                    @Html.DisplayNameFor(model => model.Correctiontaken)
                                </div>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col" colspan="4">

                                @Html.TextAreaFor(model => model.Correctiontaken, new { @class = "form-control" })

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col" colspan="4">
                                <div class="display-label" style="background-color: #4cc4dd; width: 100%; color: white;">
                                    @Html.DisplayNameFor(model => model.Resultsofinvestigation)
                                </div>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col" colspan="4">

                                @Html.TextAreaFor(model => model.Resultsofinvestigation, new { @class = "form-control" })

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col" colspan="2">

                                @Html.DisplayNameFor(model => model.CorrectiveAction)

                            </td>

                            <td class="col" colspan="2">

                                @Html.DisplayNameFor(model => model.PreventiveAction)

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col" colspan="2">

                                @Html.TextAreaFor(model => model.CorrectiveAction, new { @class = "form-control" })

                            </td>
                            <td class="col" colspan="2">

                                @Html.TextAreaFor(model => model.PreventiveAction, new { @class = "form-control" })

                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col" colspan="4">
                                <div class="display-label" style="background-color: #4cc4dd; width: 100%; color: white;">
                                    @Html.DisplayNameFor(model => model.VerificationofImplementation)
                                </div>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col" colspan="4">
                                <div class="display-field">
                                    @Html.TextAreaFor(model => model.VerificationofImplementation, new { @class = "form-control" })
                                </div>
                            </td>
                        </tr>

</table>



                <div class="card-footer bg-white d-flex justify-content-between align-items-center">
                    @Html.ActionLink("Back to List", "InternalAuditFindingsLogList", new { AuditID = ViewBag.AuditID, AuditTransID = Model.AuditTransID, AuditNum = ViewBag.AuditNum }, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })

                    <button type="submit" value="Update" class="btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Save</button>


                </div>

            </div>
        </div>
    </div>
}


@section Scripts {

    <script>
       


        function GetAuditDate() {
            var selectedId = $('#AuditNumList').val();
            //alert(selectedId);
            jQuery.ajax({
                url: '@Url.Action("GetAuditDateList", "Audit")',
                type: 'POST',
                dataType: "json",
                data: { 'sAuditNum': selectedId },
                success: function (result) {
                    //alert(result);
                    var x = document.getElementById("AuditDateList");
                    $("#AuditDateList").empty();
                    var list = result;
                    var option = document.createElement("option");
                    option.text = "Select";
                    x.add(option);

                    $.each(list, function (index, value) {
                        var option = document.createElement("option");
                        option.text = value;
                        x.add(option);
                    });
                }
            });
        };

        function GetAuditDepartment() {
            //alert("hi");
            var AuditNum = $('#AuditNum').val();
            var AuditDatetime = $('#AuditDateList').val();
            //alert(AuditDatetime);
            jQuery.ajax({
                url: '@Url.Action("GetAuditorDeptList", "Audit")',
                type: 'POST',
                dataType: "json",
                data: { 'sAuditNum': AuditNum, 'AuditDatetime': AuditDatetime },
                success: function (result) {
                    //alert(result);
                    var x = document.getElementById("AuditDepartment");
                    $("#AuditDepartment").empty();
                    var option = document.createElement("option");
                    option.text = "Select";
                    x.add(option);

                    var list = result;
                    $.each(list, function (index, value) {
                        var option = document.createElement("option");
                        option.text = value;
                        x.add(option);
                    });
                }
            });
        };

        function GetAuditorDeptDetails() {
            var AuditNum = $('#AuditNum').val();
            var AuditDatetime = $('#AuditDateList').val();
            var AuditDepartment = $('#AuditDepartment').val();
            //alert(AuditDepartment);
            jQuery.ajax({
                url: '@Url.Action("GetAuditorAndDeptDetails", "Audit")',
                type: 'POST',
                dataType: "json",
                data: { 'sAuditNum': AuditNum, 'AuditDatetime': AuditDatetime, 'sDeptName': AuditDepartment },
                success: function (result) {
                    //alert(result.ISO);

                    document.getElementById("ISOstandardID").value = result.ISO;
                    document.getElementById("AuditConductedBy").value = result.FirstName;
                    document.getElementById("EmpIds").value = result.EmpIds;
                    document.getElementById("ISOID").value = result.ISOID;
                    document.getElementById("HidAuditId").value = result.auditid;

                }
            });
        };


                    function GetISOClauses() {
                               var selMulti = $.map($("#ISOstandardID option:selected"), function (el, i) {
                                    return $(el).val();
                                });
                                var sStd = (selMulti.join(","));
                                jQuery.ajax({
                                    url: '@Url.Action("FunISOClauseList", "MgmtDocuments")',
                                    type: 'POST',
                                    dataType: "json",
                                    data: { 'ISOStdId': sStd },
                                    success: function (result) {
                                        $("#ISO_standard_clause").empty();
                                        if (result != null && result.length > 0) {
                                            $.each(result, function (index, item) {
                                                $("#ISO_standard_clause").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                                                $("#ISO_standard_clause").trigger('change');
                                            });
                                            return;
                                        }
                                        else {
                                            bootbox.alert({
                                                title: 'ISOClause List',
                                                message: 'No Clauses exists.'
                                            });
                                            return;
                                        }
                                    }
                                });                            
                        }

        // Setup
        var editorReadOnly = CKEDITOR.replace('editor-readonly', {
            height: 300,
            removePlugins: 'toolbar',

        });



        function checkDate() {


            var dt2 = document.getElementById("CorrectiveActionDate").value;
            var dt1 = document.getElementById("CorrectionDate").value;

            if (new Date(dt2).getTime() < new Date(dt1).getTime()) {

                bootbox.alert({
                    title: 'Corrective Action date',
                    message: 'Corrective Action date cannot be before Correction date.'
                });
                $('#CorrectiveActionDate').val("");
            }
        }






        function checkDate2() {


            var dt2 = document.getElementById("Followupdate").value;
            var dt1 = document.getElementById("CorrectiveActionDate").value;

            if (new Date(dt2).getTime() < new Date(dt1).getTime()) {

                bootbox.alert({
                    title: 'Follow up Date',
                    message: 'Follow up date cannot be before Corrective action date.'
                });
                $('#Followupdate').val("");
            }
        }


        function checkDate3() {


            var dt2 = document.getElementById("ReportCloseDate").value;
            var dt1 = document.getElementById("CorrectionDate").value;

            if (new Date(dt1).getTime() < new Date(dt2).getTime()) {

                bootbox.alert({
                    title: 'Report Close date',
                    message: 'Report Close date cannot be before Correction date.'
                });
                $('#ReportCloseDate').val("");
            }
        }





    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
