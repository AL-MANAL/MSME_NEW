@model ISOStd.Models.AuditScheduleModels

@{
    ViewBag.Title = "AuditScheduleEdit";

    ISOStd.Models.AuditScheduleModelsList objAuditList = new ISOStd.Models.AuditScheduleModelsList();
    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();

    int icnts = 0;

    if (ViewBag.objAuditList != null)
    {
        objAuditList = ViewBag.objAuditList;
        icnts = objAuditList.ScheculeList.Count;
    }

    var variable = ":";
}

@section featured {

    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">
                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("AuditScheduleList", "AuditSchedule", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Planning or Scheduling the Audit List</span>
                    </a>
                    <span class="breadcrumb-item active">Update Planning or Scheduling the Audits</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            <div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">
                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>
                        <div class="dropdown-menu dropdown-menu-right">
                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}

@using (Html.BeginForm("AuditScheduleEdit", "AuditSchedule", FormMethod.Post,
                     new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <input type="hidden" id="id_audit_schedule" name="id_audit_schedule" value="@Model.id_audit_schedule" />

    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Update Planning or Scheduling the Audits</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">

                <table class="table table-lg">
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            @Html.LabelFor(model => model.branch)
                        </td>
                        <td class="col">
                            <select class="form-control select-search select2-hidden-accessible" @*multiple="multiple"*@ data-fouc id="branch" name="branch" onchange="GetDetails()">
                                @*<option value='' hidden>Select</option>*@
                                @if (ViewBag.Branch != null)
                                {
                                    foreach (var data in ViewBag.Branch)
                                    {
                                        if (Array.IndexOf(Model.branch.ToString().Split(','), data.Value) >= 0)
                                        {
                                            <option value='@data.Value' selected>@data.Text</option>
                                        }
                                        else
                                        {
                                            <option value='@data.Value'>@data.Text</option>
                                        }
                                    }
                                }
                            </select>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            @Html.DisplayNameFor(model => model.audit_type)<text style="color: red;">*</text>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="audit_type" name="audit_type" required>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.AuditType != null)
                                    {
                                        foreach (var item in ViewBag.AuditType)
                                        {
                                            if (Model.audit_type == item.Value)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(m => m.audit_type)
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            @Html.DisplayNameFor(model => model.audit_no)
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                <input type="text" class="form-control" name="audit_no" id="audit_no" value="@Model.audit_no" readonly />
                            </div>
                        </td>
                    </tr>

                    @*<tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.entity_type)<text style="color: red;">*</text>
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="entity_type" name="entity_type" required>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.EntityType != null)
                                    {
                                        foreach (var item in ViewBag.EntityType)
                                        {
                                            if (Model.entity_type == item.Value)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(m => m.entity_type)
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.entity_no)<text style="color: red;">*</text>
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="entity_no" name="entity_no" required>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.EntityNo != null)
                                    {
                                        foreach (var item in ViewBag.EntityNo)
                                        {
                                            if (Model.entity_no == item.Value)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(m => m.entity_no)
                            </div>
                        </td>
                    </tr>*@

                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.audit_criteria)<text style="color: red;">*</text>
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="audit_criteria" name="audit_criteria" multiple="multiple" required>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.AuditCriteria != null)
                                    {
                                        foreach (var item in ViewBag.AuditCriteria)
                                        {
                                            if (Array.IndexOf(Model.audit_criteria.ToString().Split(','), item.Value) >= 0)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(m => m.audit_criteria)
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.audit_criticallty)<text style="color: red;">*</text>
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="audit_criticallty" name="audit_criticallty" required>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.AuditCriticality != null)
                                    {
                                        foreach (var item in ViewBag.AuditCriticality)
                                        {
                                            if (Model.audit_criticallty == item.Value)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(m => m.audit_criticallty)
                            </div>
                        </td>
                    </tr>

                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.audit_scope)<text style="color: red;">*</text>
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="audit_scope" name="audit_scope" multiple="multiple" required>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.AuditScope != null)
                                    {
                                        foreach (var item in ViewBag.AuditScope)
                                        {
                                            if (Array.IndexOf(Model.audit_scope.ToString().Split(','), item.Value) >= 0)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(m => m.audit_scope)
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.contractual_agreement)@*<text style="color: red;">*</text>*@
                            </div>
                        </td>
                        <td class="col">
                            <input type="file" name="contractual_agreement" id="contractual_agreement" title="Documents" onchange="FileFormatValidation(this)"
                                   multiple="multiple" accept=".pdf, .doc, .docx, .xls, .xlsx, image/*" class="bootstrap-uploader" data-fouc />

                            <span class="form-text text-muted"><code>(Hold Ctrl Key in case of multiple files or drag multiple files and drop here)</code></span>
                            <br />
                            @if (Model.contractual_agreement != null && Model.contractual_agreement != "" && Model.contractual_agreement.Length > 0)
                            {
                                <h6> <span class="bg-dark py-1 px-2 rounded">Document List</span></h6>

                                <span class="form-text text-muted">
                                    <code>
                                        (Uncheck in case to remove a uploaded file)
                                    </code>
                                </span>
                                foreach (var docs in Model.contractual_agreement.Trim(',').Split(','))
                                {
                                    <div class="form-check">
                                        <label class="form-check-label">
                                            <input type="checkbox" id="QCDocsVal" name="QCDocsVal" class="form-check-input-styled QCDocsVal" value="@docs.Trim(',')" checked title="Uncheck in case to remove a uploaded file" data-fouc />
                                            <input type="hidden" id="QCDocsValselectall" name="QCDocsValselectall" />
                                            <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" class="text-orange">
                                                @System.IO.Path.GetFileName(docs)
                                            </a>
                                        </label>
                                    </div>
                                }
                            }
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.purpose)
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="purpose" name="purpose"> @Model.purpose</textarea>
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.site_access)
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="site_access" name="site_access">@Model.site_access</textarea>
                            </div>
                        </td>
                    </tr>

                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.schedule_by)<text style="color: red;">*</text>
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="schedule_by" name="schedule_by" required>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.EmpList != null)
                                    {
                                        foreach (var item in ViewBag.EmpList)
                                        {
                                            if (Model.schedule_by == item.Value)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(m => m.schedule_by)
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.approvedby)<text style="color: red;">*</text>
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="approvedby" name="approvedby" required>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.EmpList != null)
                                    {
                                        foreach (var item in ViewBag.EmpList)
                                        {
                                            if (Model.approvedby == item.Value)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(m => m.approvedby)
                            </div>
                        </td>
                    </tr>

                    @*
        <td class="col-xs-3 col-md-2">
            <div class="editor-label">
                @Html.LabelFor(model => model.upload)
            </div>
        </td>
        <td class="col-xs-3 col-md-4">
            <div class="editor-field">
                <input type="file" name="upload" id="upload" onchange="FileFormatValidation(this)" multiple accept=".pdf,.xlsx,.xls,.doc,.docx" class="bootstrap-uploader" data-fouc />
            </div>
        </td>
                    *@

                    @*<tr class="row" id="justifyrow" style="display:none">
            <td class="col-xs-3 col-md-2">
                <div class="editor-label">
                    @Html.LabelFor(model => model.justify)
                </div>
            </td>

            <td class="col">
                <div class="editor-field">
                    <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="justify" name="justify"></textarea>
                </div>
            </td>
        </tr>*@
                </table>

                <br />
                @*Audit team Details*@

                <fieldset class="border p-2">
                    <legend class="font-weight-semibold"><i class="icon-file-text mr-2"></i>Audit team details</legend>
                    <table class="table table-lg" id="table1">

                        <tbody>
                            <tr class="row">
                                <th class="col-xs-3 col-md-2" style="font-weight: bold;">Auditor name</th>
                                <td class="col">
                                    <select class="form-control select-search select2-hidden-accessible" data-fouc id="auditor_name" name="auditor_name" multiple="multiple">
                                        @*<option value='' hidden>Select</option>*@
                                        @if (ViewBag.Auditor != null)
                                        {
                                            foreach (var item in ViewBag.Auditor)
                                            {                                                
                                                {
                                                    <option value='@item.Value'>@item.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @Html.ValidationMessageFor(model => model.auditor_name)
                                    <span class="field-validation-error"><span id="auditor_name-message" style="display: none;">Please select Auditor Name.</span></span>
                                </td>
                                <th class="col-xs-3 col-md-2" style="font-weight: bold;">Department to be audited</th>
                                <td class="col">
                                    <select class="form-control select-search select2-hidden-accessible" data-fouc id="audit_dept" name="audit_dept">
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.Dept != null)
                                        {
                                            foreach (var item in ViewBag.Dept)
                                            {                                               
                                                {
                                                    <option value='@item.Value'>@item.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @Html.ValidationMessageFor(model => model.audit_dept)
                                    <span class="field-validation-error"><span id="audit_dept-message" style="display: none;">Please select Auditing Department.</span></span>
                                </td>
                            </tr>

                            <tr class="row">
                                <th class="col-xs-3 col-md-2" style="font-weight: bold;">Audit Location</th>
                                <td class="col">
                                    <select class="form-control select-search select2-hidden-accessible" data-fouc id="audit_loc" name="audit_loc">
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.Location != null)
                                        {
                                            foreach (var item in ViewBag.Location)
                                            {
                                                {
                                                    <option value='@item.Value'>@item.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @Html.ValidationMessageFor(model => model.audit_loc)
                                    <span class="field-validation-error"><span id="audit_loc-message" style="display: none;">Please select Auditing Location.</span></span>
                                </td>
                                <th class="col-xs-3 col-md-2" style="font-weight: bold;">Focused Areas</th>
                                <td class="col">
                                    <input class="form-control" type='text' id='focused_area' name="focused_area" value="@Model.focused_area" />
                                    @Html.ValidationMessageFor(model => model.focused_area)
                                    <span class="field-validation-error"><span id="focused_area-message" style="display: none;">Please write Focused Area.</span></span>
                                </td>
                            </tr>
                            <tr class="row">
                                <th class="col-xs-3 col-md-2" style="font-weight: bold;">Schduled date</th>
                                <td class="col">
                                    <input class="form-control" type='date' id='scheduled_time_date' name="scheduled_time_date" />

                                    @Html.ValidationMessageFor(model => model.scheduled_time_date)
                                    <span class="field-validation-error"><span id="scheduled_time_date-message" style="display: none;">Please select Scheduling Date.</span></span>
                                </td>
                                <th class="col-xs-3 col-md-2" style="font-weight: bold;">Schduled Time</th>
                                <td class="col">

                                    @*<p>*@

                                    Hr: <select @*class="select-fixed-single"*@ name="PlanTimeInHour" id="PlanTimeInHour">
                                        @if (ViewBag.PlanTimeInHour != null)
                                        {
                                            foreach (var data in ViewBag.PlanTimeInHour)
                                            {                                                
                                                {
                                                    <option value='@data'>@data</option>
                                                }
                                            }
                                        }
                                    </select>
                                    Min:
                                    <select name="PlanTimeInMin" id="PlanTimeInMin" @*class="select-fixed-single"*@>
                                        @if (ViewBag.PlanTimeInMin != null)
                                        {
                                            foreach (var data in ViewBag.PlanTimeInMin)
                                            {                                               
                                                {
                                                    <option value='@data'>@data</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*</p>*@
                                    @Html.ValidationMessageFor(model => model.PlanTimeInHour)
                                        <span class="field-validation-error"><span id="PlanTimeInHour-message" style="display: none;">Please select Scheduling Time .</span></span>
                                </td>
                            <tr class="row">
                                <th class="col-xs-3 col-md-2" style="font-weight: bold;">Recommended CheckList</th>
                                <td class="col">
                                    <select class="form-control select-search select2-hidden-accessible" data-fouc id="checklist_id" name="checklist_id">
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.CheckList != null)
                                        {
                                            foreach (var item in ViewBag.CheckList)
                                            {                                               
                                                {
                                                    <option value='@item.Value'>@item.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @Html.ValidationMessageFor(model => model.checklist_id)
                                    <span class="field-validation-error"><span id="checklist_id-message" style="display: none;">Please select Recommended CheckList.</span></span>
                                </td>
                                @*</tr>

                                    <tr class="row">*@
                                @*<th class="col-xs-3 col-md-2" style="font-weight: bold;">Auditor Available</th>
                                    <td class="col">
                                        <select class="form-control select-search select2-hidden-accessible" data-fouc id="auditor_availability" name="auditor_availability">
                                            <option value='' hidden>Select</option>
                                            @if (ViewBag.Availability != null)
                                            {
                                                foreach (var item in ViewBag.Availability)
                                                {
                                                    {
                                                        <option value='@item'>@item</option>
                                                    }
                                                }
                                            }
                                        </select>
                                        @Html.ValidationMessageFor(model => model.auditor_availability)
                                        <span class="field-validation-error"><span id="auditor_availability-message" style="display: none;">Please select Auditor Availability.</span></span>
                                    </td>*@
                                @*<th class="col-xs-3 col-md-2" style="font-weight: bold;">If not available then next available date</th>
                                    <td class="col">
                                        <input class="form-control" type='number' id='next_availability' name="next_availability" />
                                        @Html.ValidationMessageFor(model => model.next_availability)
                                        <span class="field-validation-error"><span id="next_availability-message" style="display: none;">Please select next available date.</span></span>
                                    </td>*@
                                <td class="col">
                                    <img src='@Url.Content("~/images/icon_add.png")' onclick='AddAuditTeamDetails()' style='cursor:pointer; padding-right: 5px;' />Add
                                </td>
                            </tr>

                        </tbody>
                    </table>
                </fieldset>

                <span class="form-text text-muted"><code>Please click Add or Plus button to add N number of Audit Team details</code></span>

                <div class="card is-visible" id="hidden card">
                    <div class="card-header header-elements-inline">
                        <h5 class="card-title">Audit Team Details</h5>
                        <div class="header-elements">
                            <div class="list-icons">
                                <a class="list-icons-item" data-action="collapse"></a>
                            </div>
                        </div>
                    </div>

                    <div class="card-body">

                        <input type="hidden" id="itemcnt" name="itemcnt" value="@icnts" />

                        <div class="card card-table table-responsive shadow-0 mb-0">
                            <table class="table" id="team-list">
                                <tr class="bg-blue">
                                    <th>Action</th>
                                    <th>Auditor name</th>
                                    <th>Department to be audited</th>
                                    <th>Audit Location</th>
                                    <th>Focused Areas</th>
                                    <th>Scheduled Date</th>
                                    <th>Scheduled Time</th>
                                    <th>Recommonded CheckList</th>
                                    @*<th>
                                            Auditor Availabile
                                        </th>*@
                                    @*<th></th>*@
                                </tr>
                                @if (objAuditList.ScheculeList != null && objAuditList.ScheculeList.Count > 0)
                                {
                                    for (int index = 0; index < objAuditList.ScheculeList.Count; index++)
                                    {
                                        //string[] sEmp = @objIncidentLTIList.lstIncidentLTIModels[index].Emp_Id.Split(';');
                                <tr>
                                    <td>
                                        <img src='@Url.Content("~/images/cancel.png")' onclick='deleteRow(this)' style='cursor:pointer; padding-right: 5px;' />Remove
                                        <input type='hidden' id='id_audit_schedule @index' name="id_audit_schedule @index" value='@objAuditList.ScheculeList[index].id_audit_schedule' />
                                    </td>
                                    <td>
                                        <input type='hidden' id='auditor_name @index' name="auditor_name @index" value='@objAuditList.ScheculeList[index].auditor_name'>@Obj.GetMultiHrEmpNameById(objAuditList.ScheculeList[index].auditor_name)
                                    </td>
                                    <td>
                                        <input type='hidden' id='audit_dept @index' name="audit_dept @index" value='@objAuditList.ScheculeList[index].audit_dept'>@Obj.GetDeptNameById(objAuditList.ScheculeList[index].audit_dept)
                                    </td>
                                    <td>
                                        <input type='hidden' id='audit_loc @index' name="audit_loc @index" value='@objAuditList.ScheculeList[index].audit_loc'>@Obj.GetMultiWorkLocationById(objAuditList.ScheculeList[index].audit_loc)
                                    </td>
                                    <td>
                                        <input type='hidden' id='focused_area @index' name="focused_area @index" value='@objAuditList.ScheculeList[index].focused_area'>@objAuditList.ScheculeList[index].focused_area
                                    </td>
                                    <td>
                                        @if (objAuditList.ScheculeList[index].scheduled_time_date != null && objAuditList.ScheculeList[index].scheduled_time_date > Convert.ToDateTime("01/01/0001"))
                                        {
                                            <input type='hidden' id='scheduled_time_date @index' name="scheduled_time_date @index" value='@objAuditList.ScheculeList[index].scheduled_time_date'>@objAuditList.ScheculeList[index].scheduled_time_date.ToString("dd/MM/yyyy")
                                        }
                                    </td>
                                    <td>
                                        @if (objAuditList.ScheculeList[index].scheduled_time_date != null && objAuditList.ScheculeList[index].scheduled_time_date > Convert.ToDateTime("01/01/0001"))
                                        {
                                            <input type='hidden' id='PlanTimeInHour @index' name="PlanTimeInHour @index" value='@objAuditList.ScheculeList[index].scheduled_time_date.ToString("HH")'>@objAuditList.ScheculeList[index].scheduled_time_date.ToString("HH") @variable @objAuditList.ScheculeList[index].scheduled_time_date.ToString("mm")
                                            <input type='hidden' id='PlanTimeInMin @index' name="PlanTimeInMin @index" value='@objAuditList.ScheculeList[index].scheduled_time_date.ToString("mm")'>
                                        }
                                    </td>
                                    <td>
                                        <input type='hidden' id='checklist_id @index' name="checklist_id @index" value='@objAuditList.ScheculeList[index].checklist_id'>@objAuditList.ScheculeList[index].checklist_id - @Obj.GetChecklistDeptBychecklistId(objAuditList.ScheculeList[index].checklist_id)
                                    </td>
                                    @*<td>
            <input type='hidden' id='auditor_availability @index' name="auditor_availability @index" value='@objAuditList.ScheculeList[index].auditor_availability'>@(objAuditList.ScheculeList[index].auditor_availability)
        </td>*@
                                </tr>
                                    }
                                }
                            </table>

                        </div>
                    </div>
                </div>
            </div>


            <div class="card-footer bg-white d-flex justify-content-between align-items-center">
                @Html.ActionLink("Back to List", "AuditScheduleList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })
                <button type="submit" id="btnCreate" value="Save" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Add</button>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>

        var showClass = 'is-visible';
        var hideClass = 'invisible';

        $('.form-check-input-styled').uniform();
        function FileFormatValidation(file) {
            var ext = file.value.split(".").pop().toLowerCase();
            if ($.inArray(ext, ["doc", "pdf", "docx", "xls", "xlsx"]) == -1) {
                file.value = "";
                jAlert("Invalid file format, please upload only doc, pdf, docx, xls, xlsx format");
            }
        }

        $("#QCDocsVal").click(function () {
            if ($("#QCDocsVal").prop('checked')) {
                {
                    $(this).prop('checked', true);
                }
            }
            else {

                $(this).prop('checked', false);
                document.getElementById("QCDocsValselectall").value = "DeleteQC";
            }

        });

        function Validation() {
            var validflg = true;
            var ssnMessage = "";

            if (document.getElementById("auditor_name").value == "") {
                ssnMessage = $('#auditor_name-message');
                ssnMessage.show();

                validflg = false;
            }
            else {
                ssnMessage = $('#auditor_name-message');
                ssnMessage.hide();
            }

            if (document.getElementById("audit_dept").value == "") {
                ssnMessage = $('#audit_dept-message');
                ssnMessage.show();
                validflg = false;
            }
            else {
                ssnMessage = $('#audit_dept-message');
                ssnMessage.hide();
            }
            if (document.getElementById("audit_loc").value == "") {
                ssnMessage = $('#audit_loc-message');
                ssnMessage.show();
                validflg = false;
            }
            else {
                ssnMessage = $('#audit_loc-message');
                ssnMessage.hide();
            }
            if (document.getElementById("focused_area").value == "") {
                ssnMessage = $('#focused_area-message');
                ssnMessage.show();
                validflg = false;
            }
            else {
                ssnMessage = $('#focused_area-message');
                ssnMessage.hide();
            }
            if (document.getElementById("scheduled_time_date").value == "") {
                ssnMessage = $('#scheduled_time_date-message');
                ssnMessage.show();
                validflg = false;
            }
            else {
                ssnMessage = $('#scheduled_time_date-message');
                ssnMessage.hide();
            }
            //if (document.getElementById("checklist_id").value == "") {
            //    ssnMessage = $('#checklist_id-message');
            //    ssnMessage.show();
            //    validflg = false;
            //}
            //else {
            //    ssnMessage = $('#checklist_id-message');
            //    ssnMessage.hide();
            //}
            if (document.getElementById("PlanTimeInHour").value == "") {
                ssnMessage = $('#PlanTimeInHour-message');
                ssnMessage.show();
                validflg = false;
            }
            else {
                ssnMessage = $('#PlanTimeInHour-message');
                ssnMessage.hide();
            }
            //if (document.getElementById("auditor_availability").value == "") {
            //    ssnMessage = $('#auditor_availability-message');
            //    ssnMessage.show();
            //    validflg = false;
            //}
            //else {
            //    ssnMessage = $('#auditor_availability-message');
            //    ssnMessage.hide();
            //}

            return validflg;
        }

        function AddAuditTeamDetails() {

        if (Validation() == true) {


            var cnt = document.getElementById("itemcnt").value;

            document.getElementById("itemcnt").value = cnt;
            // Find a <table> element with id="myTable":
            var table = document.getElementById("team-list");


            // Create an empty <tr> element and add it to the 1st position of the table:
            var row = table.insertRow();


            // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
            var cell0 = row.insertCell(0);
            var cell1 = row.insertCell(1);
            var cell2 = row.insertCell(2);
            var cell3 = row.insertCell(3);
            var cell4 = row.insertCell(4);
            var cell5 = row.insertCell(5);
            var cell6 = row.insertCell(6);
            var cell7 = row.insertCell(7);
            var cell8 = row.insertCell(8);


            //var AccidentType = $('#AccidentTypeSelect').val();
            //var sAccidentTypeSelect = document.getElementById("AccidentTypeSelect");
            //var sAccidentTypeSelectText = sAccidentTypeSelect.options[sAccidentTypeSelect.selectedIndex].text;

            var auditor_name = $('#auditor_name').val();
            var AuditorName = $("#auditor_name option:selected").toArray().map(item => item.text).join();
            var audit_dept = $('#audit_dept').val();
            var AuditDept = $("#audit_dept option:selected").text();
            var audit_loc = $('#audit_loc').val();
            var AuditLoc = $("#audit_loc option:selected").text();
            var checklist_id = $('#checklist_id').val();
            var ChecklistId = $("#checklist_id option:selected").text();
            //var auditor_availability = $('#auditor_availability').val();
            //var AuditorAvailability = $("#auditor_availability option:selected").text();
            var PlanTimeInHour = $('#PlanTimeInHour').val();
            var PlanTimeInMin = $('#PlanTimeInMin').val();
            var PlanTime = PlanTimeInHour + ":" + PlanTimeInMin;
            var scheduled_time_date = reformatDate($("#scheduled_time_date").val());
            var focused_area = $('#focused_area').val();

            cell0.innerHTML = " <img src='@Url.Content("~/images/cancel.png")' onclick='deleteRow(this)' style='cursor:pointer; padding-right: 5px;'/>Remove";
            cell1.innerHTML = "<input type='hidden' id='auditor_name " + cnt + "' name='auditor_name " + cnt + "' value='" + auditor_name + "'>" + AuditorName;
            cell2.innerHTML = "<input type='hidden' id='audit_dept " + cnt + "' name='audit_dept " + cnt + "' value='" + audit_dept + "'>" + AuditDept;
            cell3.innerHTML = "<input type='hidden' id='audit_loc " + cnt + "' name='audit_loc " + cnt + "' value='" + audit_loc + "'>" + AuditLoc;
            cell4.innerHTML = "<input type='hidden' id='focused_area " + cnt + "' name='focused_area " + cnt + "' value='" + focused_area + "'>" + focused_area;
            cell5.innerHTML = "<input type='hidden' id='scheduled_time_date " + cnt + "' name='scheduled_time_date " + cnt + "' value='" + scheduled_time_date + "'>" + scheduled_time_date;
            cell6.innerHTML = "<input type='hidden' id='PlanTimeInHour " + cnt + "' name='PlanTimeInHour " + cnt + "' value='" + PlanTimeInHour + "'>" + PlanTime/*PlanTimeInHour + ":" + PlanTimeInMin*/;
            cell7.innerHTML = "<input type='hidden' id='checklist_id " + cnt + "' name='checklist_id " + cnt + "' value='" + checklist_id + "'>" + ChecklistId;
            cell8.innerHTML = "<input type='hidden' id='PlanTimeInMin " + cnt + "' name='PlanTimeInMin " + cnt + "' value='" + PlanTimeInMin + "'>" 

            //  cell7.innerHTML = "<input type='hidden' id='auditor_availability" + cnt + "' name='auditor_availability" + cnt + "' value='" + auditor_availability + "'>" + AuditorAvailability;
            //cell8.innerHTML = "<input type='hidden' id='no_person" + cnt + "' name='no_person " + cnt + "' value='" + no_person + "'>" + no_person;


            cnt++;
            document.getElementById("itemcnt").value = cnt;

            document.getElementById("hidden card").classList.remove(hideClass);
            document.getElementById("hidden card").classList.add(showClass);
            ResetControl();
            }

        }

        function ResetControl () {
            //$("#injury_type").val('').trigger("chosen:updated");
            $("#auditor_name").val('').trigger('change');
            $("#audit_dept").val('').trigger('change');
            $("#audit_loc").val('').trigger('change');
            $("#checklist_id").val('').trigger('change');
            $("#PlanTimeInHour").val('').trigger('change');
            $("#PlanTimeInMin").val('').trigger('change');
          //  $("#auditor_availability").val('').trigger('change');
            document.getElementById("focused_area").value = "";
            document.getElementById("scheduled_time_date").value = "";
        }

        function deleteRow(btn) {
            var row = btn.parentNode.parentNode;
            row.parentNode.removeChild(row);
            var cnt = document.getElementById("itemcnt").value;
            //cnt--;

            //document.getElementById("itemcnt").value = cnt;
            //if (cnt == "0") {

            //    //document.getElementById("btnCreate").classList.add(hideClass);
            //    //document.getElementById("btnCreate").classList.remove(showClass);
            //    document.getElementById("hidden card").classList.remove(showClass);
            //    document.getElementById("hidden card").classList.add(hideClass);
            //}

        }

        function reformatDate(dateStr) {
            dArr = dateStr.split("-");  // ex input 2010-01-18
            return dArr[2] + "/" + dArr[1] + "/" + dArr[0]; //ex out: 2018/01/10
        }


    </script>
    @Scripts.Render("~/bundles/jqueryval")
}





