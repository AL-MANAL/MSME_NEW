@using PagedList;
@using PagedList.Mvc;

@model IPagedList<ISOStd.Models.LegalRegisterModel>

@{
    ViewBag.Title = "LegalRegisterList";
}

<div class="groupedassets margin10">
    <span class="groupedassetshead margin10 onestphdcolor">Legal Register List </span>
</div>
    @*<div class = "ActionLink">@Html.ActionLink("Add New", "AddObjectives", null,null, new { @class = "ActionLink", onclick="HyperLinkProgressIconFunction()" })</div>*@
 <div id="divmsg">
        @if (TempData["alertdata"] != null)
        {
            <span class="errMsg" style="color: red;font-weight: bold;">@TempData["alertdata"]</span>
        }
        @if (TempData["Successdata"] != null)
        {
            <span class="errMsg" style="color: green; font-weight: bold;">@TempData["Successdata"]</span>
        }
    </div>
    <br />
@using (Html.BeginForm("LegalRegisterList", "LegalRegister", FormMethod.Post, new { id = "form1", name = "form1" }))
{
     if (ViewBag.Role != null && ViewBag.Role.ToLower() != "Preparer".ToLower())
    {
        <input type="hidden" id="ApprovestatusVal" name="ApprovestatusVal" value="@ViewBag.Approvestatus" />
    <div class="editor-field" style="float: left;">
        <b style="color:#31b0d5;">Approval Status</b>
        <select id="approvestatus" name="approvestatus" required="">
            @if (ViewBag.ApprovestatusVal != null && ViewBag.Approvestatus != null)
            {
                foreach (var item in ViewBag.Approvestatus)
                {
                        if (item.Key == ViewBag.ApprovestatusVal)
                        {
                            <option value='@item.Key' selected>@item.Value</option>
                        }
                        else
                        {
                            <option value='@item.Key'>@item.Value</option>
                        }
                    }
                

            }
            else if (ViewBag.Approvestatus != null)
            {
                foreach (var item in ViewBag.Approvestatus)
                {
                <option value='@item.Key'>@item.Value</option>
                }
            }
        </select>
        <span id="tab" style="color:#31b0d5;font-weight: bold; padding: 10px;"></span>
    </div>
    }
    <div class="editor-field" style="margin-left: 50px;">
        <b style="color:#31b0d5;">Evaluation Freq.</b>
        <select id="frequency_of_evaluation" name="frequency_of_evaluation" required="">
            <option value='Select'>Select</option>
            @if (ViewBag.frequency_of_evaluation != null)
            {
                foreach (var item in ViewBag.frequency_of_evaluation)
                {
                    if (item == @ViewBag.frequency_of_evaluationText)
                    {
                     <option value='@item' selected>@item</option>
                    }
                    else
                    {
                    <option value='@item'>@item</option>
                    }
                }
          }
        </select> 
        <span id="tab" style="color:#31b0d5;font-weight: bold; padding: 10px;"></span>
        @Html.TextBox("SearchText", (string)ViewBag.SearchText, new { placeholder = "Search by Law Number", style = "width: 20%; " })

        <button type="submit" class="btn btn-info" onclick="ProgressIconFunction('#form1')">
            <span class="glyphicon glyphicon-search"></span>Search
        </button>
        @Html.ActionLink("Add New", "AddLegalRegister", null, null, new {onclick = "HyperLinkProgressIconFunction()" })
        <span style="margin-left:5px"> <img src="@Url.Content("~/Images/excel.png")" title="Export as Excel" style="cursor:pointer; " id="downloadLink" />Download</span>
    </div>  
   
}
@Html.PagedListPager(Model, page => Url.Action("LegalRegisterList",
    new
    {
        page,
		frequency_of_evaluation = Request.QueryString["frequency_of_evaluation"],
        SearchText = Request.QueryString["SearchText"],
        Approvestatus = Request.QueryString["Approvestatus"]
    }),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true })
<div id="content">
    <table id="table1">
        <thead>
            <tr>
                <th style="width:40px;min-width:40px; max-width:100px;">
                    Sl No
                </th>
                <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().lawNo)
                </th>
                <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().lawTitle)
                </th>
                <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().origin_of_requirement)
                </th>
                <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().document_storage_location)
                </th>
                <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().frequency_of_evaluation)
                </th>
                <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().activeStatus)
                </th>
                <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().updatedByName)
                </th>
                        <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().reviewedBy)
                </th>
                <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().approvedBy)
                </th>
                <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().reviewstatus)
                </th>
                <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().approvestatus)
                </th>
       
                <th style="width:150px;min-width:60px; max-width:60px;">Action</th>
                @if (ViewBag.DeleteFlg != null && ViewBag.DeleteFlg == true)
                {
                    <th style="width: 60px; min-width: 60px; max-width: 150px;">Delete</th>
                }

            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Count() > 0)
            {
                int i = 0;
            foreach (var item in Model)
            {
                i = i + 1;
            <tr>
                <td style="width:40px;min-width:40px; max-width:100px;">
                             @i
                        </td>
                        <td style="width:150px;min-width:150px; max-width:150px;">
                            @Html.ActionLink(item.lawNo.ToString(), "LegalRegisterDetails", new { LegalRequirement_Id = item.LegalRequirement_Id.ToString() }, new { onclick="HyperLinkProgressIconFunction()"})
                        </td>
                        <td style="width:150px;min-width:150px; max-width:150px;">
                            @Html.DisplayFor(modelItem => item.lawTitle)
                        </td>
                        <td style="width:150px;min-width:150px; max-width:150px;">
                            @Html.DisplayFor(modelItem => item.origin_of_requirement)
                        </td>
                        <td style="width:150px;min-width:150px; max-width:150px;">
                            @Html.DisplayFor(modelItem => item.document_storage_location)
                        </td>
                        <td style="width:150px;min-width:150px; max-width:150px;">
                            @Html.DisplayFor(modelItem => item.frequency_of_evaluation)
                        </td>
                        <td style="width:150px;min-width:150px; max-width:150px;">
                            @Html.DisplayFor(modelItem => item.activeStatus)
                        </td>
                        <td style="width:150px;min-width:150px; max-width:150px;">
                            @Html.DisplayFor(modelItem => item.updatedByName)
                        </td>
                         <td style="width:150px;min-width:150px; max-width:150px;">
                            @Html.DisplayFor(modelItem => item.reviewedBy)
                        </td>
                        <td style="width:150px;min-width:150px; max-width:150px;">
                            @Html.DisplayFor(modelItem => item.approvedBy)
                        </td>
                        <td style="width:150px;min-width:150px; max-width:150px;">
                            @Html.DisplayFor(modelItem => item.reviewstatus)
                        </td>
                        <td style="width:150px;min-width:150px; max-width:150px;">
                            @Html.DisplayFor(modelItem => item.approvestatus)
                        </td>
                       
                        @* @if (ViewBag.Role.ToLower() != "Preparer".ToLower() && item.approvestatus.ToLower() == "Not Approved".ToLower() && ViewBag.CurrentEmpName == item.approvedBy)
                {
                <td style="width:150px;min-width:150px; max-width:150px;">
                    <a href='@Url.Action("LegalRegisterApprove", "LegalRegister", new { LegalRequirement_Id = item.LegalRequirement_Id })' title="Approve Legal Register details" style="color:red;">
                        Approve
                    </a>
                </td>
                }
                else
                {
                <td style="width:150px;min-width:150px; max-width:150px;">
                    @item.approvestatus
                </td>
                }*@
                               <td style="width:60px;min-width:60px; max-width:60px;">
                           
            <a href='@Url.Action("LegalRegisterEdit", "LegalRegister", new { LegalRequirement_Id = item.LegalRequirement_Id })' title="Edit Legal Register details" onclick="HyperLinkProgressIconFunction()">
                        <span class="glyphicon glyphicon glyphicon-edit iocnstatus-edit" onclick="HyperLinkProgressIconFunction()"></span></a>
                                   
                        </td>


                        @if (ViewBag.DeleteFlg != null && ViewBag.DeleteFlg == true)
                        {
                            <td style="width: 60px; min-width: 60px; max-width: 60px;">

                            @*    <a href='@Url.Action("CustomerEnquiryDelete", "CustomerEnquiry", new { enquiry_id = item.Enquiry_id.ToString() })' title="Delete Enquiry" > *@
                                <img src="@Url.Content("~/Images/delete.png")" title="Delete Document" onclick="DeleteItems(@item.LegalRequirement_Id)" style="cursor:pointer;" />
                            </td>
                        }
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="9">
                        <div style="text-align: center;">
                            <h4 style="color: grey;">No data exists</h4>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
   
</div>
@section scripts {

    <script type="text/javascript">
           function downloadInnerHtml(filename, elId) {
               var $table = $('#table1');
               $rows = $table.find('tr');

               var csvData = "";

               for (var i = 0; i < $rows.length; i++) {
                   var $cells = $($rows[i]).children('th,td'); //header or content cells

                   for (var y = 0; y < $cells.length; y++) {
                       if (y > 0) {
                           csvData += ",";
                       }

                       var txt = ($($cells[y]).text()).toString().trim();

                       if (txt.indexOf(',') >= 0 || txt.indexOf('\"') >= 0 || txt.indexOf('\n') >= 0) {
                           txt = "\"" + txt.replace(/\"/g, "\"\"") + "\"";
                       }
                       csvData += txt;
                   }
                   csvData += '\n';
               }


               var elHtml = csvData;
               var link = document.createElement('a');
               mimeType = 'application/csv;charset=utf-8';

               link.setAttribute('download', filename);
               link.setAttribute('href', 'data:' + mimeType + ';charset=utf-8,' + encodeURIComponent(elHtml));
               link.click();
           }
           var fileName = 'LegalRegister.csv'; // You can use the .txt extension if you want

           $('#downloadLink').click(function () {
               downloadInnerHtml(fileName, 'content');
           });

           function DeleteItems(LegalRequirement_Id) {
               jConfirm('Do you want to delete?', 'Are you Sure?', function (r) {
                   if (r == true) {
                       jQuery.ajax({
                           url: '@Url.Action("ObjectiveDocDelete", "LegalRegister")',
                           type: 'POST',
                           dataType: "json",
                           data: { 'LegalRequirement_Id': LegalRequirement_Id },
                           success: function (result) {
                               var params = {
                                   View: 1
                               };

                               //// Add new params to the querystring dictionary
                               queryString = $.param(params);

                               window.location.href =
                                   window.location.protocol + "//" +
                                   window.location.host +
                                   window.location.pathname +
                                  '?' + queryString;
                           }
                       });
                       return true;
                   }
                   else if (r == false) {
                       return false;
                   }
               });
           }
    </script>

}