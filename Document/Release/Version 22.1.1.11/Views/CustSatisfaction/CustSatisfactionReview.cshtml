@model ISOStd.Models.CustSatisfactionModels
@using System.Data;

@{
    ViewBag.Title = "";
    ISOStd.Models.clsGlobal ObjGlobal = new ISOStd.Models.clsGlobal();
    string user = ObjGlobal.GetCurrentUserSession().empid;
    DataSet objQList = new DataSet();
    objQList = ViewBag.objQList;

    DataSet objDList = new DataSet();
    objDList = ViewBag.objDList;

    DataSet objCList = new DataSet();
    objCList = ViewBag.objCList;
}
@section featured {
    <div class="page-header page-header-light">
        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>
        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">
                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Home</span>
                    </a>
                   
                    <span class="breadcrumb-item active">Customer Satisfaction Assessment Review</span>
                </div>
            </div>
        </div>
    </div>
}


<div class="card">
    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">Customer Satisfaction Assessment Review</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="container-fluid">
            <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.branch)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.branch)
                        </p>
                    </td>

                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.Department)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.Department)
                        </p>
                    </td>

                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.Location)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.Location)
                        </p>
                    </td>

                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.cust_name)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.cust_name)
                        </p>
                    </td>

                </tr>


                <tr class="row">
                    <td class="col-md-12">
                        Survey Period
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.LabelFor(model => model.frm_date)
                            </p>
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            @if (Model.frm_date > Convert.ToDateTime("01/01/0001"))
                            {
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Model.frm_date.ToString("dd/MM/yyyy")
                                </p>
                            }
                        </div>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.LabelFor(model => model.to_date)
                            </p>
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            @if (Model.to_date > Convert.ToDateTime("01/01/0001"))
                            {
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Model.to_date.ToString("dd/MM/yyyy")
                                </p>
                            }
                        </div>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.prod_delivered)
                            </p>
                        </div>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.prod_delivered)
                        </p>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.contact_details)
                            </p>
                        </div>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.contact_details)
                        </p>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.LabelFor(model => model.eval_date)
                            </p>
                        </div>
                    </td>
                    <td class="col">
                        <div class="editor-field">
                            @if (Model.eval_date > Convert.ToDateTime("01/01/0001"))
                            {
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Model.eval_date.ToString("dd/MM/yyyy")
                                </p>
                            }
                        </div>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.complaint)
                            </p>
                        </div>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.complaint)
                        </p>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <div class="editor-label">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.LabelFor(model => model.cust_satisfied)
                            </p>
                        </div>
                    </td>
                    <td class="col-xs-3 col-md-4">
                        <div class="editor-field">
                           @Html.DisplayFor(model => model.cust_satisfied)
                        </div>
                    </td>
                  
                </tr>
            </table>

          
           
            @if (objQList != null && objQList.Tables.Count > 0 && objQList.Tables[0].Rows.Count > 0)
            {
                <br />
                <h2 class="bg-dark pl-sm-2">Performance/reliability of the product</h2>
                <div class="table-responsive">
                    <table class="table table-bordered table-striped table-hover datatable-responsive" id="table1">
                        <thead>
                            <tr class="bg-brown">

                                <th>Sl No</th>
                               
                                <th>Performance/reliability of the product</th>
                                <th>Remarks</th>
                                <th>Records</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0, j = 1; i < objQList.Tables[0].Rows.Count; i++, j++)
                            {
                                <tr>
                                    <td>
                                        @j
                                    </td>
                                    <td>
                                        @ObjGlobal.GetDropdownitemById(objQList.Tables[0].Rows[i]["performance"].ToString())
                                    </td>
                                    <td>
                                        @objQList.Tables[0].Rows[i]["perf_remarks"].ToString()
                                    </td>
                                    <td>
                                        @if (objQList.Tables[0].Rows[i]["perf_upload"].ToString() != null && objQList.Tables[0].Rows[i]["perf_upload"].ToString() != "" && objQList.Tables[0].Rows[i]["perf_upload"].ToString().Length > 0)
                                        {
                                            foreach (var docs in objQList.Tables[0].Rows[i]["perf_upload"].ToString().Trim(',').Split(','))
                                            {
                                                <p style="margin: 0px;" class="py-1 px-2 rounded">
                                                    <span class="py-1 px-2 rounded">
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs})' target="_blank">Preview</a>
                                                    </span>
                                                </p>
                                            }
                                        }
                                    </td>
                                  
                                </tr>
                            }
                        </tbody>
                    </table>



                </div>
            }
            <br />
            @if (objDList != null && objDList.Tables.Count > 0 && objDList.Tables[0].Rows.Count > 0)
            {
                <br />
                <h2 class="bg-dark pl-sm-2">On time delivery</h2>
                <div class="table-responsive">
                    <table class="table table-bordered table-striped table-hover datatable-responsive" id="table1">
                        <thead>
                            <tr class="bg-brown">

                                <th>Sl No</th>
                                <th>On time delivery</th>
                                <th>Remarks</th>
                                <th>Records</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0, j = 1; i < objDList.Tables[0].Rows.Count; i++, j++)
                            {
                                <tr>
                                    <td>
                                        @j
                                    </td>
                                    <td>
                                        @ObjGlobal.GetDropdownitemById(objDList.Tables[0].Rows[i]["delivery"].ToString())
                                    </td>
                                    <td>
                                        @objDList.Tables[0].Rows[i]["delivery_remarks"].ToString()
                                    </td>
                                    <td>
                                        @if (objDList.Tables[0].Rows[i]["delivery_upload"].ToString() != null && objDList.Tables[0].Rows[i]["delivery_upload"].ToString() != "" && objDList.Tables[0].Rows[i]["delivery_upload"].ToString().Length > 0)
                                        {
                                            foreach (var docs in objDList.Tables[0].Rows[i]["delivery_upload"].ToString().Trim(',').Split(','))
                                            {
                                                <p style="margin: 0px;" class="py-1 px-2 rounded">
                                                    <span class="py-1 px-2 rounded">
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs})' target="_blank">Preview</a>
                                                    </span>
                                                </p>
                                            }
                                        }
                                    </td>

                                </tr>
                            }
                        </tbody>
                    </table>



                </div>
            }
            <br />
            @if (objCList != null && objCList.Tables.Count > 0 && objCList.Tables[0].Rows.Count > 0)
            {
                <br />
                <h2 class="bg-dark pl-sm-2">Customer complaints</h2>
                <div class="table-responsive">
                    <table class="table table-bordered table-striped table-hover datatable-responsive" id="table1">
                        <thead>
                            <tr class="bg-brown">

                                <th>Sl No</th>
                                <th>Type</th>
                                <th>No. of complaints</th>
                                <th>Records</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0, j = 1; i < objCList.Tables[0].Rows.Count; i++, j++)
                            {
                                <tr>
                                    <td>
                                        @j
                                    </td>
                                    <td>
                                        @ObjGlobal.GetDropdownitemById(objCList.Tables[0].Rows[i]["complaint_type"].ToString())
                                    </td>
                                    <td>
                                        @objCList.Tables[0].Rows[i]["complaint_no"].ToString()
                                    </td>
                                    <td>
                                        @if (objCList.Tables[0].Rows[i]["complaint_upload"].ToString() != null && objCList.Tables[0].Rows[i]["complaint_upload"].ToString() != "" && objCList.Tables[0].Rows[i]["complaint_upload"].ToString().Length > 0)
                                        {
                                            foreach (var docs in objCList.Tables[0].Rows[i]["complaint_upload"].ToString().Trim(',').Split(','))
                                            {
                                                <p style="margin: 0px;" class="py-1 px-2 rounded">
                                                    <span class="py-1 px-2 rounded">
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs})' target="_blank">Preview</a>
                                                    </span>
                                                </p>
                                            }
                                        }
                                    </td>

                                </tr>
                            }
                        </tbody>
                    </table>



                </div>
            }
            <br />
            
                @using (Html.BeginForm("ReviewCustSatisfaction", "CustSatisfaction", FormMethod.Post,
                                     new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    <input type="hidden" id="id_cust_satisfaction" name="id_cust_satisfaction" value="@Model.id_cust_satisfaction" />
                    <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    Review/Reject <text style="color:red;">*</text>
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    <label><input type="radio" id="review_status" name="review_status" value="2" required onchange="ReviewRequired()" />Reviewed</label>
                                    <label><input type="radio" id="review_status" name="review_status" value="1" required onchange="ReviewRequired()" />Rejected</label>
                                </p>
                            </td>

                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded">
                                    Comments
                                </p>
                            </td>
                            <td class="col">
                                <div class="bg-dark py-1 px-2 rounded">
                                    <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="review_comment" name="review_comment"></textarea>
                                </div>
                            </td>
                        </tr>

                    </table>
                        <div class="card-footer bg-white d-flex justify-content-between align-items-center">
                            <button type="submit" id="btnCreate" value="Submit" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Submit</button>
                        </div>
                }
            
           
        
        </div>

    </div>
</div>



@section Scripts {
    <script>

        function ReviewRequired() {
            var review_status = $("input[type='radio'][id='review_status']:checked").val();
            if (review_status == "1") {
                $("#review_comment").attr('required', true);
            }
            else {
                $("#review_comment").attr('required', false);
            }
        }
      
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}