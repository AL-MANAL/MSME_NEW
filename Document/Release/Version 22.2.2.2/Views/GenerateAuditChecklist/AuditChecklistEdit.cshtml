@model ISOStd.Models.GenerateAuditChecklistModels

@{
    ViewBag.Title = "Auditchecklist";

    DateTime todaysdate = DateTime.Now;

    string[] PreparedToArray = new string[0];
    string[] NotifiedByArray = new string[0];
    int itemcnt = 0;
    int itemcnt1 = 0;
    int count = 0;

    if (ViewBag.PreparedToArray != null)
    {
        PreparedToArray = ViewBag.PreparedToArray;
        itemcnt = PreparedToArray.Length;
    }

    if (ViewBag.NotifiedByArray != null)
    {
        NotifiedByArray = ViewBag.NotifiedByArray;
        itemcnt1 = NotifiedByArray.Length;
    }

    ISOStd.Models.clsGlobal objGlobaldata = new ISOStd.Models.clsGlobal();
    ISOStd.Models.GenerateAuditChecklistModelsList AuditTransList = new ISOStd.Models.GenerateAuditChecklistModelsList();
    if (ViewBag.AuditTransList != null)
    {
        AuditTransList = ViewBag.AuditTransList;
        count = AuditTransList.AuditCheckList.Count;
    }
}

@section featured {
    <div class="page-header page-header-light">
        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>
        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">
                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("AuditChecklistList", "GenerateAuditChecklist" , null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Audit Checklists</span>
                    </a>
                    <span class="breadcrumb-item active"> Update Audit Checklist Details</span>
                </div>
             
            </div>
        
        </div>
    </div>
}

@using (Html.BeginForm("AuditChecklistEdit", "GenerateAuditChecklist", FormMethod.Post,
                     new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)


    @*<input type="hidden" id="itemcnt" name="itemcnt" value="0" />*@
    <input type="hidden" id="id_AuditChecklist" name="id_AuditChecklist" value="@Model.id_AuditChecklist" />
    
    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Generate Audit Checklist</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">
                @*<input type="hidden" id="itemcnt" name="itemcnt" />*@
                <table class="table table-lg">
                    <tbody>
                        @*<tr class="row">
                            <td class="col-xs-3 col-md-2">
                                Division
                            </td>
                            <td class="col-xs-6 col-md-4">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="audit_division" name="audit_division" onchange="GetDeptList()" required>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.division != null)
                                    {
                                        foreach (var item in ViewBag.division)
                                        {
                                            if (item.Value == Model.audit_division)
                                            {
                                                <option value="@item.Value" selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>

                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                Department
                            </td>
                            <td class="col">
                                <select class="form-control select-search" data-fouc id="Department" name="Department" onchange="GetEmptyCheckbox()">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.Department != null)
                                    {
                                        foreach (var item in ViewBag.Department)
                                        {
                                            if (item.Value == Model.Department)
                                            {
                                                <option value="@item.Value" selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>
                            <td class="col">
                                @if (Model.dept_common.ToLower() != "common")
                                {
                                    <input type="checkbox" class="form-control" id="dept_common" name="dept_common" onchange="GetEmptyDept()" /><span>(Please check this box if department is common)</span>
                                }
                                else
                                {
                                    <input type="checkbox" class="form-control" id="dept_common" name="dept_common" checked onchange="GetEmptyDept()" /><span>(Please check this box if department is common)</span>
                                }
                            </td>

                        </tr>*@
                          <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                Division
                            </td>
                            <td class="col-xs-6 col-md-4">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="branch" name="branch" onchange="DoclevelDepartmentcode()">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.Division != null)
                                    {
                                        foreach (var item in ViewBag.Division)
                                        {
                                            if (item.Value == Model.branch)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>
                              <td class="col">
                                  @if (Model.branch_common == "common")
                                  {
                                      <input type="checkbox" class="form-check-input" id="branch_common" name="branch_common" checked onchange="GetEmptyDirect()" /><span>(Please check this box if Division is common)</span>
                                  }
                                  else
                                  {
                                      <input type="checkbox" class="form-check-input" id="branch_common" name="branch_common" onchange="GetEmptyDirect()" /><span>(Please check this box if Division is common)</span>
                                  }
                              </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                Department
                            </td>
                            <td class="col-xs-6 col-md-4">
                                <select class="form-control select-search" data-fouc id="dept_name" name="dept_name" onchange="GetEmptyGrpCheckbox()">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.Department != null)
                                    {
                                        foreach (var item in ViewBag.Department)
                                        {
                                            if (item.Value == Model.dept_name)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>
                            <td class="col">
                                @if(Model.dept_name_common == "common")
                                {
                                   <input type="checkbox" class="form-check-input" id="dept_name_common" name="dept_name_common" checked onchange="GetEmptyGrp()" /><span>(Please check this box if Department is common)</span>
                                }
                                else
                                {
                                   <input type="checkbox" class="form-check-input" id="dept_name_common" name="dept_name_common" onchange="GetEmptyGrp()" /><span>(Please check this box if Department is common)</span>
                                }
                            </td>
                        </tr>
                        @*<tr class="row">
                            <td class="col-xs-3 col-md-2">
                                Team
                            </td>
                            <td class="col-xs-6 col-md-4">
                                <select class="form-control select-search" data-fouc id="team" name="team" onchange="GetEmptyTeamCheckbox()">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.Team != null)
                                    {
                                        foreach (var item in ViewBag.Team)
                                        {
                                            if (item.Value == Model.team)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>
                            <td class="col">
                                @if (Model.team_common == "common")
                                {
                                    <input type="checkbox" class="form-check-input" id="team_common" name="team_common" checked onchange="GetEmptyTeam()" /><span>(Please check this box if Team is common)</span>
                                }
                                else
                                {
                                    <input type="checkbox" class="form-check-input" id="team_common" name="team_common" onchange="GetEmptyTeam()" /><span>(Please check this box if Team is common)</span>
                                }
                            </td>
                        </tr>*@
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.DisplayNameFor(model => model.created_on)
                            </td>
                            <td class="col">
                                @if (Model.created_on != null && Model.created_on > Convert.ToDateTime("01/01/0001"))
                                {
                                    <input type="date" class="form-control" id="created_on" name="created_on" value="@Model.created_on.ToString("yyyy-MM-dd")" />
                                }
                                else
                                {
                                    <input type="date" class="form-control" id="created_on" name="created_on" />
                                }
                            </td>
                            <td class="col-xs-3 col-md-2">
                                @Html.DisplayNameFor(model => model.ammended_on)
                            </td>
                            <td class="col">
                                @if (Model.ammended_on != null && Model.ammended_on > Convert.ToDateTime("01/01/0001"))
                                {
                                    <input type="date" class="form-control" id="ammended_on" name="ammended_on" value="@Model.ammended_on.ToString("yyyy-MM-dd")" readonly />
                                }
                                else
                                {
                                    <input type="date" class="form-control" id="ammended_on" name="ammended_on" value="@todaysdate.ToString("yyyy-MM-dd")" readonly />
                                }
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.DisplayNameFor(model => model.prepared_by)
                            </td>
                            <td class="col-xs-6 col-md-4">
                                <div class="editor-field">
                                    <select class="form-control select-search" id="prepared_by" name="prepared_by" onchange="GetIssuedToDetails()">
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.EmpList != null)
                                        {
                                            foreach (var item in ViewBag.EmpList)
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>

                <div id="issuedtodiv" class="card is-visible">
                    <div class="card-body">
                        <table>
                            <tr>
                                <th>
                                    Emp Id
                                </th>
                                <th>
                                    Name
                                </th>
                                <th>
                                    Division
                                </th>
                                <th>
                                    Location
                                </th>
                                <th>
                                    Department
                                </th>
                                <th>
                                    Email
                                </th>
                            </tr>
                            <tr>
                                <td>
                                    <input type="text" class="form-control" name="iempid" id="iempid" readonly />
                                </td>
                                <td>
                                    <input type="text" class="form-control" name="iempname" id="iempname" readonly />
                                </td>
                                <td>
                                    <input type="text" class="form-control" name="iempdivision" id="iempdivision" readonly />
                                </td>
                                <td>
                                    <input type="text" class="form-control" name="iemploc" id="iemploc" readonly />
                                </td>
                                <td>
                                    <input type="text" class="form-control" name="iempdept" id="iempdept" readonly />
                                </td>
                                <td>
                                    <input type="text" class="form-control" name="iempemail" id="iempemail" readonly />
                                </td>
                                <td>
                                    <input type="button" value="Add" class="btn btn-success" onclick="AddIssuedTo()" />
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="card is-visible" id="issuedtodiv1">
                    <div class="card-body">
                        <input type="hidden" id="itemcnt" name="itemcnt" value="@itemcnt" />

                        <div class="card card-table table-responsive shadow-0 mb-0">
                            <table class="table" id="table-team">
                                <tr class="bg-blue">
                                    <th>Action</th>
                                    <th>Id</th>
                                    <th>Name</th>
                                    <th>Division</th>
                                    <th>Location</th>
                                    <th>Department</th>
                                    <th>Email</th>
                                </tr>
                                @if (ViewBag.PreparedToArray != null && PreparedToArray != null && PreparedToArray.Length > 0)
                                {
                                    for (int index = 0; index < PreparedToArray.Length; index++)
                                    {
                                        <tr>
                                            <td>
                                                <span class='badge badge-info' onclick='deleteRow(this)' style='cursor:pointer;'>Delete</span>
                                                @*<img src='@Url.Content("~/images/cancel.png")' onclick='deleteRow(this)' style='cursor:pointer; padding-right: 5px;' />Remove*@
                                                <input type='hidden' id='iempno @index' name="iempno @index" value='@PreparedToArray[index]' />
                                            </td>
                                            <td>
                                                <input type='hidden' id='iempid @index' name="iempid @index" readonly>@objGlobaldata.GetEmpIDByEmpNo(PreparedToArray[index])
                                            </td>
                                            <td>
                                                <input type='hidden' id='iempname @index' name="iempname @index" readonly>@objGlobaldata.GetEmpHrNameById(PreparedToArray[index])
                                            </td>
                                            <td>
                                                <input type='hidden' id='iempdiv @index' name="iempdiv @index" readonly>@objGlobaldata.GetCompanyBranchNameById(PreparedToArray[index])
                                            </td>
                                            <td>
                                                <input type='hidden' id='iemploc @index' name="iemploc @index" readonly>@objGlobaldata.GetDivisionLocationById(objGlobaldata.GetWorkLocationIdByHrEmpId(PreparedToArray[index]))
                                            </td>
                                            <td>
                                                <input type='hidden' id='iempdept @index' name="iempdept @index" readonly>@objGlobaldata.GetDeptNameById(objGlobaldata.GetDeptIdByHrEmpId(PreparedToArray[index]))
                                            </td>
                                            <td>
                                                <input type='hidden' id='iempemail @index' name="iempemail @index" readonly>@objGlobaldata.GetHrEmpEmailIdById(PreparedToArray[index])
                                            </td>
                                        </tr>
                                    }
                                }
                            </table>
                        </div>
                    </div>
                </div>


                <table class="table table-lg">
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            @Html.DisplayNameFor(model => model.notified_to)
                        </td>
                        <td class="col-xs-6 col-md-4">
                            <div class="editor-field">
                                <select class="form-control select-search" @*class="form-control-select" data-fouc*@ id="notified_to" name="notified_to" onchange="GetNotifiedByDetails()">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.EmpList != null)
                                    {
                                        foreach (var item in ViewBag.EmpList)
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                </select>
                            </div>
                        </td>
                    </tr>
                </table>
                <div id="notifiedtodiv" class="card is-visible">
                    <div class="card-body">
                        <table>
                            <tr>
                                <th>
                                    Emp Id
                                </th>
                                <th>
                                    Name
                                </th>
                                <th>
                                    Division
                                </th>
                                <th>
                                    Location
                                </th>
                                <th>
                                    Department
                                </th>
                                <th>
                                    Email
                                </th>
                            </tr>
                            <tr>
                                <td>
                                    <input type="text" class="form-control" name="nempid" id="nempid" readonly />
                                </td>
                                <td>
                                    <input type="text" class="form-control" name="nempname" id="nempname" readonly />
                                </td>
                                <td>
                                    <input type="text" class="form-control" name="nempdiv" id="nempdiv" readonly />
                                </td>
                                <td>
                                    <input type="text" class="form-control" name="nemploc" id="nemploc" readonly />
                                </td>
                                <td>
                                    <input type="text" class="form-control" name="nempdept" id="nempdept" readonly />
                                </td>
                                <td>
                                    <input type="text" class="form-control" name="nempemail" id="nempemail" readonly />
                                </td>
                                <td>
                                    <input type="button" value="Add" class="btn btn-success" onclick="AddNotifiedTo()" /> @*<span class="text-primary font-italic">(Please click ADD button to add multiple entries)</span>*@
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="card is-visible" id="hidden card1">
                    <div class="card-body">
                        <input type="hidden" id="itemcnt1" name="itemcnt1" value="@itemcnt1" />

                        <div class="card card-table table-responsive shadow-0 mb-0">
                            <table class="table" id="team-list1">
                                <tr class="bg-blue">
                                    <th>Action</th>
                                    <th>Id</th>
                                    <th>Name</th>
                                    <th>Division</th>
                                    <th>Location</th>
                                    <th>Department</th>
                                    <th>Email</th>
                                </tr>
                                @if (ViewBag.NotifiedByArray != null && NotifiedByArray != null && NotifiedByArray.Length > 0)
                                {
                                    for (int index = 0; index < NotifiedByArray.Length; index++)
                                    {
                                        //string[] sEmp = @objIncidentLTIList.lstIncidentLTIModels[index].Emp_Id.Split(';');
                                        <tr>
                                            <td>
                                                <span class='badge badge-info' onclick='deleteRow(this)' style='cursor:pointer;'>Delete</span>
                                                @*<img src='@Url.Content("~/images/cancel.png")' onclick='deleteRow(this)' style='cursor:pointer; padding-right: 5px;' />Remove*@
                                                <input type='hidden' id='nempno @index' name="nempno @index" value='@NotifiedByArray[index]' />
                                            </td>
                                            <td>
                                                <input type='hidden' id='nempid @index' name="nempid @index" readonly>@objGlobaldata.GetEmpIDByEmpNo(NotifiedByArray[index])
                                            </td>
                                            <td>
                                                <input type='hidden' id='nempname @index' name="nempname @index" readonly>@objGlobaldata.GetEmpHrNameById(NotifiedByArray[index])
                                            </td>
                                            <td>
                                                <input type='hidden' id='nempdiv @index' name="nempdiv @index" readonly>@objGlobaldata.GetCompanyBranchNameById(NotifiedByArray[index])
                                            </td>
                                            <td>
                                                <input type='hidden' id='nemploc @index' name="nemploc @index" readonly>@objGlobaldata.GetDivisionLocationById(objGlobaldata.GetWorkLocationIdByHrEmpId(NotifiedByArray[index]))
                                            </td>
                                            <td>
                                                <input type='hidden' id='nempdept @index' name="nempdept @index" readonly>@objGlobaldata.GetDeptNameById(objGlobaldata.GetDeptIdByHrEmpId(NotifiedByArray[index]))
                                            </td>
                                            <td>
                                                <input type='hidden' id='nempemail @index' name="nempemail @index" readonly>@objGlobaldata.GetHrEmpEmailIdById(NotifiedByArray[index])
                                            </td>
                                        </tr>
                                    }
                                }
                            </table>
                        </div>
                    </div>
                </div>

            </div>
            @*Details*@

            <fieldset class="border p-2">
                <legend class="font-weight-semibold"><i class="icon-file-text mr-2"></i>Audit CheckList details</legend>
                <table class="table table-lg" id="table1">

                    <tbody>
                        <tr class="row">
                            <th class="col" style="font-weight: bold;">Standard / Procedure</th>
                            <th class="col" style="font-weight: bold;">Clause / Section No</th>
                            <th class="col" style="font-weight: bold;">Question</th>
                            <th class="col-xs-3 col-md-2"></th>
                        </tr>
                        <tr class="row">
                            <td class="col">
                                <select class="form-control select-search select2-hidden-accessible" multiple data-fouc id="IsoStd" name="IsoStd">
                                    @*<option value='' hidden>Select</option>*@
                                    @if (ViewBag.IsoStd != null)
                                    {
                                        foreach (var item in ViewBag.IsoStd)
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(model => model.IsoStd)
                                <span class="field-validation-error"><span id="IsoStd-message" style="display: none;">Please select Standard / Procedure.</span></span>
                            </td>
                            <td class="col">
                                <input class="form-control" type='text' id='Clause' name="Clause" />
                                @Html.ValidationMessageFor(model => model.Clause)
                                <span class="field-validation-error"><span id="Clause-message" style="display: none;">Please write Clause / Section No.</span></span>
                            </td>
                            <td class="col">
                                <textarea class="form-control" id='Questions' name="Questions"> </textarea>
                                @Html.ValidationMessageFor(model => model.Questions)
                                <span class="field-validation-error"><span id="Questions-message" style="display: none;">Please write Questions.</span></span>
                            </td>
                            <td class="col-xs-3 col-md-2">
                                <img src='@Url.Content("~/images/icon_add.png")' onclick='AddQuestions()' style='cursor:pointer; padding-right: 5px;' />Add
                            </td>
                        </tr>
                    </tbody>
                </table>
            </fieldset>

            <span class="form-text text-muted"><code>Please click Add or Plus button to add N number of Questions</code></span>

            <div class="card is-visible" id="hidden_card">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">Question Details</h5>
                    <div class="header-elements">
                        <div class="list-icons">
                            <a class="list-icons-item" data-action="collapse"></a>
                        </div>
                    </div>
                </div>

                <div class="card-body">

                    <input type="hidden" id="count" name="count" value="@count" />

                    <div class="card card-table table-responsive shadow-0 mb-0">
                        <table class="table" id="team-lists">
                            <tr class="bg-blue">
                                <th>Action</th>
                                <th>Standard / Procedure</th>
                                <th>Clause / Section No</th>
                                <th>Question</th>
                            </tr>
                            @if (ViewBag.AuditTransList != null && AuditTransList.AuditCheckList != null && AuditTransList.AuditCheckList.Count > 0)
                            {
                                for (int index = 0; index < AuditTransList.AuditCheckList.Count; index++)
                                {
                                    //string[] sEmp = @objIncidentLTIList.lstIncidentLTIModels[index].Emp_Id.Split(';');
                                    <tr>
                                        <td>
                                            <span class='badge badge-info' onclick='deleteRow(this)' style='cursor:pointer;'>Delete</span>
                                           <input type='hidden' id='id_auditchecklist_trans @index' name="id_auditchecklist_trans @index" value='@AuditTransList.AuditCheckList[index].id_auditchecklist_trans' />
                                        </td>
                                        <td>
                                            <input type='hidden' id='IsoStd @index' name="IsoStd @index" value="@AuditTransList.AuditCheckList[index].IsoStd" readonly>@objGlobaldata.GetIsoStdNameById(AuditTransList.AuditCheckList[index].IsoStd)
                                        </td>
                                        <td>
                                            <input type='hidden' id='Clause @index' name="Clause @index" value="@AuditTransList.AuditCheckList[index].Clause" readonly>@AuditTransList.AuditCheckList[index].Clause
                                        </td>
                                        <td>
                                            <input type='hidden' id='Questions @index' name="Questions @index" value="@AuditTransList.AuditCheckList[index].Questions" readonly>@AuditTransList.AuditCheckList[index].Questions
                                        </td>                                       
                                    </tr>
                                }
                            }
                        </table>

                    </div>
                </div>
            </div>

            <div class="card-footer bg-white d-flex justify-content-between align-items-center">
                @Html.ActionLink("Back to List", "AuditChecklistList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })
                <button class="btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400" type="submit" value="Save" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Save</button>
            </div>

        </div>

    </div>
}        

@section Scripts {
    <script>
  var showClass = 'is-visible';
        var hideClass = 'invisible';

       function GetDeptList() {
            var selectedValues = [];
          $("#audit_division :selected").each(function () {
                selectedValues.push($(this).val());
            });
                jQuery.ajax({
                    url: '@Url.Action("FunGetAllDeptList", "EmployeeDetails")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'branch': selectedValues },
                    success: function (result) {
                        //GetLocList(selectedValues);
                        $("#Department").children('option').remove();

                        if (result != null && result.length > 0) {
                            $("#Department").append("<option value=''>Select" + "</option>");

                            $.each(result, function (index, item) {
                                $("#Department").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            });

                            $("#Department").trigger('change');

                            return;
                        }
                        //else {
                        //    bootbox.alert({
                        //        title: 'Department List',
                        //        message: 'No Department exists.'
                        //    });
                        //}
                    }
                });
        }


        @*function GetLocList(selectedValues) {
            jQuery.ajax({
                url: '@Url.Action("FunGetAllLocList", "EmployeeDetails")',
                type: 'POST',
                dataType: "json",
                data: { 'branch': selectedValues },
                success: function (result) {
                    $("#location").children('option').remove();
                    $("#location").trigger('change');
                    if (result != null && result.length > 0) {
                        $.each(result, function (index, item) {
                            $("#location").append("<option value='" + item.Value + "'>" + item.Text + "</option>");

                        });
                        $("#location").trigger('change');
                        return;
                    }
                    //else {
                    //    bootbox.alert({
                    //        title: 'Location List',
                    //        message: 'No Location exists.'
                    //    });
                    //}
                }
            });
        }*@

        function GetNotifiedByDetails() {
            var notified_to = $('#notified_to').val();
            if (notified_to != "" && notified_to != null) {
                jQuery.ajax({
                    url: '@Url.Action("FunGetEmpDetails", "NC")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'semp_no': notified_to },
                    success: function (result) {
                        if (result != null) {
                            document.getElementById("notifiedtodiv").classList.remove(hideClass);
                            document.getElementById("notifiedtodiv").classList.add(showClass);

                            document.getElementById("nempid").value = result.emp_id;
                            document.getElementById("nempname").value = result.empname;
                            document.getElementById("nempdiv").value = result.division;
                            document.getElementById("nempdept").value = result.department;
                            document.getElementById("nemploc").value = result.location;
                            document.getElementById("nempemail").value = result.EmailId;
                        }
                    }
                });
            }
        }

        function ValidationNotifiedTo() {
            var validflg = true;
            var ssnMessage = "";

            if (document.getElementById("nempid").value == "") {
                ssnMessage = $('#nempid-message');
                ssnMessage.show();
                validflg = false;
            }
            else {
                ssnMessage = $('#nempid-message');
                ssnMessage.hide();
            }
            return validflg;
        }

        function AddNotifiedTo() {
            if (ValidationNotifiedTo() == true) {
                var cnt = document.getElementById("itemcnt1").value;

                document.getElementById("itemcnt1").value = cnt;
                // Find a <table> element with id="myTable":
                var table = document.getElementById("team-list1");

                // Create an empty <tr> element and add it to the 1st position of the table:
                var row = table.insertRow();


                // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
                var cell0 = row.insertCell(0);
                var cell1 = row.insertCell(1);
                var cell2 = row.insertCell(2);
                var cell3 = row.insertCell(3);
                var cell4 = row.insertCell(4);
                var cell5 = row.insertCell(5);
                var cell6 = row.insertCell(6);

                var nempno = $('#notified_to option:Selected').val();
                var nempid = $('#nempid').val();
                var nempname = $('#nempname').val();
                var nempdiv = $('#nempdiv').val();
                var nempdept = $('#nempdept').val();
                var nemploc = $('#nemploc').val();
                var nempemail = $('#nempemail').val();

                cell0.innerHTML = "<span class='badge badge-info' onclick='deleteRow(this)' style='cursor:pointer;'>Delete</span> <input type = 'hidden' id = 'nempno " + cnt + "' name = 'nempno " + cnt + "' value = '" + nempno + "'>";
                cell1.innerHTML = "<input type='hidden' id='nempid " + cnt + "' name='nempid " + cnt + "' value='" + nempid + "'>" + nempid;
                cell2.innerHTML = "<input type='hidden' id='nempname " + cnt + "' name='nempname " + cnt + "' value='" + nempname + "'>" + nempname;
                cell3.innerHTML = "<input type='hidden' id='nempdiv " + cnt + "' name='nempdiv " + cnt + "' value='" + nempdiv + "'>" + nempdiv;
                cell4.innerHTML = "<input type='hidden' id='nemploc " + cnt + "' name='nemploc " + cnt + "' value='" + nemploc + "'>" + nemploc;
                cell5.innerHTML = "<input type='hidden' id='nempdept " + cnt + "' name='nempdept " + cnt + "' value='" + nempdept + "'>" + nempdept;
                cell6.innerHTML = "<input type='hidden' id='nempemail " + cnt + "' name='nempemail " + cnt + "' value='" + nempemail + "'>" + nempemail;

                cnt++;
                document.getElementById("itemcnt1").value = cnt;

                document.getElementById("hidden card1").classList.remove(hideClass);
                document.getElementById("hidden card1").classList.add(showClass);

                $("#notified_to").val('').trigger('change');
                document.getElementById("nempid").value = "";
                document.getElementById("nempname").value = "";
                document.getElementById("nempdiv").value = "";
                document.getElementById("nempdept").value = "";
                document.getElementById("nemploc").value = "";
                document.getElementById("nempemail").value = "";
            }
        }

         function GetIssuedToDetails () {
            var prepared_by = $('#prepared_by').val();
            if (prepared_by != "" && prepared_by != null) {
                jQuery.ajax({
                    url: '@Url.Action("FunGetEmpDetails", "NC")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'semp_no': prepared_by },
                    success: function (result) {
                        if (result != null) {
                            document.getElementById("issuedtodiv").classList.remove(hideClass);
                            document.getElementById("issuedtodiv").classList.add(showClass);

                           // document.getElementById("reportedbydiv").style.display = 'block';
                            document.getElementById("iempid").value = result.emp_id;
                            document.getElementById("iempname").value = result.empname;
                            document.getElementById("iempdivision").value = result.division;
                            document.getElementById("iempdept").value = result.department;
                            document.getElementById("iemploc").value = result.location;
                            document.getElementById("iempemail").value = result.EmailId;
                        }
                    }
                });
            }
        }

        function ValidationIssuedTo() {
            var validflg = true;
            var ssnMessage = "";

            if (document.getElementById("iempid").value == "") {
                ssnMessage = $('#iempid-message');
                ssnMessage.show();
                validflg = false;
            }
            else {
                ssnMessage = $('#iempid-message');
                ssnMessage.hide();
            }
            return validflg;
        }

        function AddIssuedTo() {
            if (ValidationIssuedTo() == true) {
                var cnt = document.getElementById("itemcnt").value;

                document.getElementById("itemcnt").value = cnt;
                // Find a <table> element with id="myTable":
                var table = document.getElementById("table-team");

                // Create an empty <tr> element and add it to the 1st position of the table:
                var row = table.insertRow();


                // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
                var cell0 = row.insertCell(0);
                var cell1 = row.insertCell(1);
                var cell2 = row.insertCell(2);
                var cell3 = row.insertCell(3);
                var cell4 = row.insertCell(4);
                var cell5 = row.insertCell(5);
                var cell6 = row.insertCell(6);

                var prepared_by = $('#prepared_by option:selected').val();
                var empid = $('#iempid').val();
                var empname = $('#iempname').val();
                var empdivision = $('#iempdivision').val();
                var empdept = $('#iempdept').val();
                var emploc = $('#iemploc').val();
                var empemail = $('#iempemail').val();

                cell0.innerHTML = "<span class='badge badge-info' onclick='deleteRow(this)' style='cursor:pointer;'>Delete</span> <input type='hidden' id='iempno " + cnt + "' name='iempno " + cnt + "' value='" + prepared_by + "'>";
                cell1.innerHTML = "<input type='hidden' id='iempid " + cnt + "' name='iempid " + cnt + "' value='" + empid + "'>" + empid;
                cell2.innerHTML = "<input type='hidden' id='iempname " + cnt + "' name='iempname " + cnt + "' value='" + empname + "'>" + empname;
                cell3.innerHTML = "<input type='hidden' id='iempdivision " + cnt + "' name='iempdivision " + cnt + "' value='" + empdivision + "'>" + empdivision;
                cell4.innerHTML = "<input type='hidden' id='iemploc " + cnt + "' name='iemploc " + cnt + "' value='" + emploc + "'>" + emploc;
                cell5.innerHTML = "<input type='hidden' id='iempdept " + cnt + "' name='iempdept " + cnt + "' value='" + empdept + "'>" + empdept;
                cell6.innerHTML = "<input type='hidden' id='iempemail " + cnt + "' name='iempemail " + cnt + "' value='" + empemail + "'>" + empemail;

                cnt++;
                document.getElementById("itemcnt").value = cnt;

                //document.getElementById("issuedtodiv1").classList.remove(hideClass);
                //document.getElementById("issuedtodiv1").classList.add(showClass);

                $("#prepared_by").val('').trigger('change');
                document.getElementById("iempid").value = "";
                document.getElementById("iempname").value = "";
                document.getElementById("iempdivision").value = "";
                document.getElementById("iempdept").value = "";
                document.getElementById("iemploc").value = "";
                document.getElementById("iempemail").value = "";
            }
        }
        function GetEmptyDirectCheckbox() {
            var branch = $('#branch').val();
            // var dept = $('Department option:selected').val();
            if (branch != "" && branch != null) {
                $("#branch_common").prop("checked", false);
            }
        }
        function GetEmptyDirect() {
            var branch_common = $('input[name="branch_common"]:checked');
            if (branch_common.length > 0) {
                $("#branch").val('');
                $("#dept_name").val('');
               // $("#team").val('');
                //$("#team_common").prop('checked', false);
                $("#dept_name_common").prop('checked', false);
                $('#dept_name').trigger('change');
                //$('#team').trigger('change');
                $('#branch').trigger('change');
            }
        }
        function GetEmptyGrp() {
            var dept_name_common = $('input[name="dept_name_common"]:checked');
            if (dept_name_common.length > 0) {
                $("#dept_name").val('');
                //$("#team").val('');
                //$("#team_common").prop('checked', false);
                $('#dept_name').trigger('change');
                //$('#team').trigger('change');
            }
        }

       

        function GetEmptyGrpCheckbox() {
            var group = $('#dept_name').val();
            // var dept = $('Department option:selected').val();
            if (group != "" && group != null) {
                $("#dept_name_common").prop("checked", false);
            }
        }

       


        function deleteRow(btn) {
            var row = btn.parentNode.parentNode;
            row.parentNode.removeChild(row);
        }

        //function deleteRow1(btn) {
        //    var row = btn.parentNode.parentNode;
        //    row.parentNode.removeChild(row);

        //    var Cnt = document.getElementById("count").value;
        //    Cnt --;
        //    document.getElementById("count").value = Cnt;
        //}

         function Validation() {
            var validflg = true;
            var ssnMessage = "";

             if (document.getElementById("IsoStd").value == "") {
                 ssnMessage = $('#IsoStd-message');
                 ssnMessage.show();

                validflg = false;
            }
            else {
                ssnMessage = $('#IsoStd-message');
                ssnMessage.hide();
             }

             if (document.getElementById("Clause").value == "") {
                 ssnMessage = $('#Clause-message');
                 ssnMessage.show();

                 validflg = false;
             }
             else {
                 ssnMessage = $('#Clause-message');
                 ssnMessage.hide();
             }

             if (document.getElementById("Questions").value == " " || document.getElementById("Questions").value == null)
             {
                 ssnMessage = $('#Questions-message');
                 ssnMessage.show();
                 validflg = false;
             }
             else {                 
                 ssnMessage = $('#Questions-message');
                 ssnMessage.hide();
            }

            return validflg;
        }

        function AddQuestions() {

        if (Validation() == true) {

            var cnt = document.getElementById("count").value;

            document.getElementById("count").value = cnt;
            // Find a <table> element with id="myTable":
            var table = document.getElementById("team-lists");


            // Create an empty <tr> element and add it to the 1st position of the table:
            var row = table.insertRow();


            // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
            var cell0 = row.insertCell(0);
            var cell1 = row.insertCell(1);
            var cell2 = row.insertCell(2);
            var cell3 = row.insertCell(3);

            //var AccidentType = $('#AccidentTypeSelect').val();
            //var sAccidentTypeSelect = document.getElementById("AccidentTypeSelect");
            //var sAccidentTypeSelectText = sAccidentTypeSelect.options[sAccidentTypeSelect.selectedIndex].text;

            var IsoStd = $('#IsoStd').val();
            //var IsoStdName = $("#IsoStd option:selected").text();
            var IsoStdNames= $("#IsoStd option:selected").map(function () { return this.text }).get().join(', ');
            var Clause = $('#Clause').val();
            var Questions = $('#Questions').val();

            cell0.innerHTML = " <img src='@Url.Content("~/images/cancel.png")' onclick='deleteRow(this)' style='cursor:pointer; padding-right: 5px;'/>Remove";
            cell1.innerHTML = "<input type='hidden' id='IsoStd " + cnt + "' name='IsoStd " + cnt + "' value='" + IsoStd + "'>" + IsoStdNames;
            cell2.innerHTML = "<input type='hidden' id='Clause " + cnt + "' name='Clause " + cnt + "' value='" + Clause + "'>" + Clause;
            cell3.innerHTML = "<input type='hidden' id='Questions " + cnt + "' name='Questions " + cnt + "' value='" + Questions + "'>" + Questions;

            cnt++;
            document.getElementById("count").value = cnt;

            document.getElementById("hidden_card").classList.remove(hideClass);
            document.getElementById("hidden_card").classList.add(showClass);
            ResetControl();
            }
        }

        function ResetControl () {
            //$("#injury_type").val('').trigger("chosen:updated");
            $("#IsoStd").val('').trigger('change');
            document.getElementById("Clause").value = "";
            document.getElementById("Questions").value = "";
        }

        
         function DoclevelDepartmentcode() {
             $("#dept_name").empty();
             //$("#team").empty();
             var sStd = $('#branch').val();
                jQuery.ajax({
                    url: '@Url.Action("FunGetDeptList", "EmployeeDetails")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'branch': sStd },
                    success: function (result) {
                        $("#dept_name").empty();
                        if (result != null && result.length > 0) {
                            $("#dept_name").append("<option value=''>" + "Select" + "</option>");
                            $.each(result, function (index, item) {
                                $("#dept_name").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                                $("#dept_name").trigger('change');
                            });
                            return;
                        }
                        else {
                            bootbox.alert({
                                title: 'Department Code',
                                message: 'Please add group code to this branch selected'
                            });
                            return;
                        }
                    }
                });
             GetEmptyDirectCheckbox();
        }

        @*$("#dept_name").on('select2:select', function (e) {
         
            e.stopImmediatePropagation();

            $("#team").empty();
            var sStd = $('#dept_name').val();
          
                jQuery.ajax({
                    url: '@Url.Action("GetDocLevelTeam", "MgmtDocuments")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'DocLevelId': sStd },
                    success: function (result) {
                        $("#team").empty();
                        //console.log(result);
                        if (result != null && result.length > 0) {
                            $("#team").append("<option value=''>" + "Select" + "</option>");
                            $.each(result, function (index, item) {

                                $("#team").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                                $("#team").trigger('change');
                            });
                            return;
                        }
                        else {
                            bootbox.alert({
                                title: 'Team Code',
                                message: 'Please add Team code to this branch selected'
                            });
                            return;
                        }
                    }
            });
        });*@
    </script>
    @Scripts.Render("~/bundles/jqueryval")

}

