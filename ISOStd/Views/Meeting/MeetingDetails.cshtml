@model ISOStd.Models.MeetingModels
@using System.Data;

@{
    ViewBag.Title = "MeetingDetails";
    DataSet dsItems = ViewBag.Itemlist;
    ISOStd.Models.MeetingModels objmod = new ISOStd.Models.MeetingModels();
    ISOStd.Models.clsGlobal obj = new ISOStd.Models.clsGlobal();
}


@section featured {

    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>


        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>

                    <a href="@Url.Action("MeetingList", "Meeting", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Meetings Schedule</span>
                    </a>
                    <span class="breadcrumb-item active"> Meetings Schedule Details</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            <div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">

                    @using (Html.BeginForm("MeetingDetails", "Meeting", FormMethod.Post, new { id = "form1", name = "form1" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="breadcrumb-elements-item dropdown p-0">
                            <input type="hidden" id="meeting_ref" name="meeting_ref" value="@Model.meeting_ref" />



                            <button type="submit" class="dropdown-item">
                                <i class="icon-printer2"></i> Report
                            </button>
                        </div>
                    }
                    @*<div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>



                        </div>
                    </div>*@
                </div>
            </div>
        </div>
    </div>

}
    <style>
        .hidden {
            display: none !important;
        }
    </style>

<div class="card">
    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">Meetings Schedule Details</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>

            </div>
        </div>
    </div>
    <div class="card-body">

        <div class="mt-2 mt-sm-0">
            @if (obj.GetCurrentUserSession().MSchedule.Contains("3"))
            {
                <a class="btn bg-orange btn-labeled btn-labeled-left" data-style="radius" href='@Url.Action("MeetingEdit", "Meeting", new { meeting_ref = @Model.meeting_ref })' title="Edit" onclick="HyperLinkProgressIconFunction()">
                    <b>  <i class="icon-add-to-list"></i></b> Edit
                </a>
            }
            @Html.ActionLink("Back to List", "MeetingList", null, new { @class = "btn btn-outline bg-orange text-orange border-orange", onclick = "HyperLinkProgressIconFunction()" })

        </div>


    </div>
    <div class="container-fluid">
        <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
            <thead></thead>
            <tbody>
                <tr class="row">

                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">

                            @Html.DisplayNameFor(model => model.meeting_type_desc)
                        </p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">

                            @Html.DisplayFor(model => model.meeting_type_desc)
                        </span>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">

                            @Html.DisplayNameFor(model => model.meeting_ref)
                        </p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">

                            @Html.DisplayFor(model => model.meeting_ref)
                        </span>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">

                            @Html.DisplayNameFor(model => model.meeting_date)
                        </p>
                    </td>
                    <td class="col">


                        @if (Model.meeting_date > Convert.ToDateTime("01/01/0001"))
                        {
                        <span class="bg-dark py-1 px-2 rounded">
                            @*@Model.meeting_date.ToString("dd/MM/yyyy")*@
                            @Model.meeting_date.ToString()
                        </span>
                        }

                    </td>

                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">

                            @Html.DisplayNameFor(model => model.last_meeting_id)
                        </p>
                    </td>
                    <td class="col">


                        @if (Model.last_meeting_id != null && Model.last_meeting_id != "")
                        {
                            ISOStd.Models.MeetingModels objMeetingModels = new ISOStd.Models.MeetingModels();

                            string sMeetingRef = objMeetingModels.GetMeetingRefbyId(Model.last_meeting_id);
                            if (sMeetingRef != "")
                            {
                                <input type="hidden" id="last_meeting_id" name="last_meeting_id" value="@Model.last_meeting_id" />
                                <span class="bg-dark py-1 px-2 rounded">
                                    @Html.ActionLink(sMeetingRef, "MeetingDetails", new { meeting_id = @Model.last_meeting_id }, new { target = "_blank" });
                                </span>
                            }

                        }
                        else
                        {
                            <span class="badge badge-info">No Meetings yet</span>

                        }
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">

                            @Html.DisplayNameFor(model => model.AttendeesUser)
                        </p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">

                            @Html.DisplayFor(model => model.AttendeesUser)
                        </span>
                    </td>
                    @if (obj.GetCurrentUserSession().MSchedule.Contains("4"))
                    {
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                Attendance Sheet
                            </p>
                        </td>
                        <td class="col">
                            @if (Model.Attendees != "")
                            {
                                <span class="bg-dark py-1 px-2 rounded">
                                    <a class="text-orange" href='@Url.Action("DisplayDocument", "Reports", new { Document = Model.Attendees })' target="_blank">Preview</a>
                                </span>
                            }
                            else
                            {
                                <span class="badge badge-danger">Not Available</span>
                            }
                        </td>
                    }
                </tr>
                @if(Model.ext_attendees != null && Model.ext_attendees != "")
                {
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.ext_attendees)
                        </p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.ext_attendees)
                        </span>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.DisplayNameFor(model => model.ext_email)
                        </p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.ext_email)
                        </span>
                    </td>
                </tr>
                }
</table>
    </div>



    @if (dsItems != null && dsItems.Tables.Count > 0 && dsItems.Tables[0].Rows.Count > 0)
    {
    <br />
    <br />
        <h2 class="bg-dark pl-sm-2"> Meeting agenda</h2>
        <div class="table-responsive">
            <table class="table table-bordered table-striped table-hover datatable-responsive" id="table1">

                <thead>
                    <tr class="bg-brown">

                        <th>Agenda</th>
                        <th>Item discussed</th>
                        <th>Action(s) agreed</th>
                        <th>Due date / period for action</th>
                        <th>Personnel Responsible</th>
                        <th>Item Status</th>
                        <th>Completion date</th>
                        <th>Upload</th>
                        <th>Remarks</th>
                        <th>Logs</th>

                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < dsItems.Tables[0].Rows.Count; i++)
                    {
                    <tr>
                        <td>
                            @objmod.GetMeetingAgendaNameById(dsItems.Tables[0].Rows[i]["Agenda_Id"].ToString())
                        </td>
                        <td>
                            @dsItems.Tables[0].Rows[i]["item_discussed"].ToString()
                        </td>
                        <td>
                            @dsItems.Tables[0].Rows[i]["action_agreed"].ToString()
                        </td>
                        <td>
                            @Convert.ToDateTime(dsItems.Tables[0].Rows[i]["due_date"].ToString()).ToString("dd/MM/yyyy")
                        </td>
                        <td>
                            @obj.GetEmpHrNameById(dsItems.Tables[0].Rows[i]["action_owner"].ToString())
                        </td>
                        <td>
                            @obj.GetDropdownitemById(dsItems.Tables[0].Rows[i]["item_status"].ToString())
                        </td>
                        <td>
                            @if (obj.GetDropdownitemById(dsItems.Tables[0].Rows[i]["item_status"].ToString()).ToLower() == "closed")
                            {
                                if (dsItems.Tables[0].Rows[i]["completiondate"].ToString() != "" && dsItems.Tables[0].Rows[i]["completiondate"].ToString() != null)
                                {
                                    @Convert.ToDateTime(dsItems.Tables[0].Rows[i]["completiondate"].ToString()).ToString("dd/MM/yyyy")
                                }
                            }
                        </td>
                        <td>
                            @if (dsItems.Tables[0].Rows[i]["upload"].ToString() != "")
                            {
                                <span class="bg-dark py-1 px-2 rounded">
                                    <a class="text-orange" href='@Url.Action("DisplayDocument", "Reports", new { Document = dsItems.Tables[0].Rows[i]["upload"].ToString() })' target="_blank">Preview</a>
                                </span>
                            }
                            else
                            {
                                <span class="badge badge-danger">Not Available</span>
                            }
                        </td>
                        <td>
                            @dsItems.Tables[0].Rows[i]["remarks"].ToString()
                        </td>
                        <td>
                            <span class="bg-dark py-1 px-2 rounded">
                                @if (obj.GetCurrentUserSession().MSchedule.Contains("3"))
                                {
                                    <a href='@Url.Action("AddMeetingItemLog", "Meeting", new { item_no = dsItems.Tables[0].Rows[i]["item_no"].ToString(), meeting_ref = @Model.meeting_ref })'
                                       onclick="HyperLinkProgressIconFunction()" title="Add Item log">

                                        <i class="icon-add" title="Add Item log"></i>
                                    </a>
                                }
                                <a href='@Url.Action("MeetingItemLogList", "Meeting", new { item_no = dsItems.Tables[0].Rows[i]["item_no"].ToString(), meeting_ref = @Model.meeting_ref })'
                                   onclick="HyperLinkProgressIconFunction()" title="View Item log List">

                                    <i class="icon-list3" title="View Item log List"></i>
                                </a>
                            </span>

                        </td>

                    </tr>

                    }
                </tbody>
            </table>
        </div>


    }
</div>

    @section Scripts {
   
        <script type="text/javascript">


              $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
    });

    //zzz----

        var table1 = function () {


       var ShowDownld = @(obj.GetCurrentUserSession().MSchedule.Contains("4") ? "true" : "false");

            // Basic Datatable examples
            var _componentDatatableBasic = function () {
                if (!$().DataTable) {
                    console.warn('Warning - datatables.min.js is not loaded.');
                    return;
                }

                //Setting datatable defaults
                $.extend($.fn.dataTable.defaults, {
                    autoWidth: false,
                    responsive: true,
                    columnDefs: [{
                        orderable: false,
                        width: 100,
                        targets: [7,9]
                    }, {
                            'targets': [7],
                            'visible': ShowDownld
                        }],


                    colReorder: false,
                    dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                    //dom: 'lBfrtip',
                    language: {
                        search: '<span>Filter:</span> _INPUT_',
                        searchPlaceholder: 'Type to filter...',
                        lengthMenu: '<span>Show:</span> _MENU_',
                        paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                    }
                });

                 var myClass = "";
                var Delclass= @(obj.GetCurrentUserSession().MSchedule.Contains("4") ? "true" : "false");
                if (Delclass == false) { myClass = 'hidden'  };


                var table = $('#table1').DataTable({

                    lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                    colReorder: {
                        fixedColumnsLeft: 1
                    },
                    stateSave: true,
                    stateSaveParams: function (settings, data) {
                        for (var i = 0, ien = data.columns.length; i < ien; i++) {
                            delete data.columns[i].visible;
                            delete data.columns[i].search;
                        }
                    },
                    scrollY: '350px',
                    scrollCollapse: true,


                    keys: {
                        className: 'focus focus-success'
                    },

                    buttons: {
                        buttons: [
                            {
                                extend: 'copyHtml5',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'Objectives Plan Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },
                            {
                                extend: 'excelHtml5',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'Item log Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },

                            },
                            {
                                extend: 'pdfHtml5',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'Item log Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },
                            {
                                extend: 'csvHtml5',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'Item log Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },
                            {
                                extend: 'print',
                                className: myClass,
                                //className: 'btn btn-light',
                                title: 'Item log Data export',
                                exportOptions: {
                                    columns: ':visible :not(.not-export-column)'
                                },
                            },

                            {
                                extend: 'colvis',
                                text: '<i class="icon-three-bars"></i>',
                                className: 'btn bg-blue btn-icon dropdown-toggle',
                                columns: ':visible:not(.not-export-column)'
                            }
                        ]
                    }

                });
                // Adjust columns on window resize
                setTimeout(function () {
                    $(window).on('resize', function () {
                        table.columns.adjust();
                    });
                }, 100);


                //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                $('.sidebar-control').on('click', function () {

                    setTimeout(function () {
                        //alert("gii");

                        table.columns.adjust().draw();
                        $("#table1").resize();
                    }, 100);

                });
                //}

                $('#table1').on('page.dt', function () {
                    //table.draw();
                    //alert("zzz1");
                    $("#table1").resize();

                });

                $('#table1').on('column-visibility.dt', function () {
                    //table.draw();
                    //alert("zzz2");
                    $("#table1").resize();

                });

                $('#table1').on('order.dt', function () {
                    //table.draw();
                    //alert("zzz3");
                    $("#table1").resize();

                });


                $('#table1').on('responsive-display.dt', function () {
                    //table.draw();
                    //alert("zzz4");
                    $("#table1").resize();

                });


                $('#table1').on('responsive-resize.dt', function () {
                    //table.draw();
                    //alert("zzz4");
                    $("#table1").resize();

                });


                //.on('order.dt', function () {
                //    table.columns.adjust().draw();
                //    $("#qhse").resize(); })
                //.on('search.dt', function () {
                //    table.columns.adjust().draw();
                //    $("#qhse").resize(); })

                //.on('column-visibility.dt', function () {
                //    table.columns.adjust().draw();
                //    $("#qhse").resize();
                //})



            };






            // Select2 for length menu styling
            var _componentSelect2 = function () {
                if (!$().select2) {
                    console.warn('Warning - select2.min.js is not loaded.');
                    return;
                }

                // Initialize
                $('.dataTables_length select').select2({
                    minimumResultsForSearch: Infinity,
                    dropdownAutoWidth: true,
                    width: 'auto'
                });
            };


            //
            // Return objects assigned to module
            //

            return {
                init: function () {
                    _componentDatatableBasic();
                    _componentSelect2();
                }
            }
        }();


        // Initialize module
        // ------------------------------

        document.addEventListener('DOMContentLoaded', function () {
            table1.init();
        });










        </script>
    }
