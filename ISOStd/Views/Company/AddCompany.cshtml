@model ISOStd.Models.CompanyModels

@{
    ViewBag.Title = "Add Company profile details";    
}

<div class="groupedassets margin10">
    <span class="groupedassetshead margin10 onestphdcolor">Add Company Profile</span>
</div>
 <div id="divmsg">
        @if (TempData["alertdata"] != null)
        {
            <span class="errMsg" style="color: red;">@TempData["alertdata"]</span>
        }
        @if (TempData["Successdata"] != null)
        {
            <span class="errMsg" style="color: green;">@TempData["Successdata"]</span>
        }
    </div>

@using (Html.BeginForm("AddCompany", "Company", FormMethod.Post,
                         new { enctype = "multipart/form-data" }))
 {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>CompanyModels</legend>
        <div id="content">
            <input type="hidden" id="CompanyName" name="CompanyName" value="@ViewBag.CompanyName" />
            <table id="tabcontent">
                <tr>
                    <td>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.CompanyName)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @ViewBag.CompanyName
                            @Html.ValidationMessageFor(model => model.CompanyName)
                        </div>
                    </td>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Address)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Address)
                            @Html.ValidationMessageFor(model => model.Address)
                        </div>
                    </td>
                </tr>

                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.City)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.City)
                            @Html.ValidationMessageFor(model => model.City)
                        </div>
                    </td>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.State)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.State)
                            @Html.ValidationMessageFor(model => model.State)
                        </div>
                    </td>
                </tr>

                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Country)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Country)
                            @Html.ValidationMessageFor(model => model.Country)
                        </div>
                    </td>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.PostalCode)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            <input type="tel" id="PostalCode" name="PostalCode" required="required" maxlength="7"/>
                            @Html.ValidationMessageFor(model => model.PostalCode)
                        </div>
                    </td>
                </tr>

                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.PhoneNumber)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            <input type="tel" id="PhoneNumber" name="PhoneNumber" required="required" maxlength="15"/>
                            @Html.ValidationMessageFor(model => model.PhoneNumber)
                        </div>
                    </td>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.FaxNumber)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            <input type="tel" id="FaxNumber" name="FaxNumber" maxlength="15"/>
                            @Html.ValidationMessageFor(model => model.FaxNumber)
                        </div>
                    </td>
                </tr>                
                <tr>
                     <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Audit_Criteria)
                        </div>
                    </td>
                     <td>
                         <div class="editor-field">
                             <select id="Audit_Criteria" name="Audit_Criteria" required="required" style="height: 100px; width: 180px;" multiple>
                                 @if (ViewBag.IsoStdList != null)
                                 {
                                     foreach (var item in ViewBag.IsoStdList)
                                     {
                                     <option value='@item.Value'>@item.Text</option>
                                    }
                             }
                             </select>
                             @Html.ValidationMessageFor(model => model.Audit_Criteria)
                         </div>
                    </td>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.logo)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            <input type="file" name="CompanyLogo" id="CompanyLogo" value="" />
                            @Html.ValidationMessageFor(model => model.logo)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="editor-field">
                            <label id="lblchk">
                                <input type="checkbox" id="chkBranch" name="chkBranch" onclick="ShowHideDivBranch(this)" />Do you have Branch Office?</label>
                        </div>
                    </td>

                </tr>
            </table>
        </div>
              <br />
    <div style="width: 100%; text-align: center;">
        @Html.ActionLink("Back to List", "CompanyList", "Company")
        <input type="submit" value="Create" />
    </div>
    </fieldset>
    
    <div id="dvItems" style="display:none;">
        <input type="hidden" id="itemcnt" name="itemcnt" value="0" />
        <div class="editor-label"  style="background-color: #4cc4dd; width: 100%; height: 30px;cursor: pointer;">
            <label for="Branch_Details" style="color: white; padding-left: 5px;">Branch Details</label>
            <a onclick="AddBranch()" style="float:right;color: white; padding-right: 5px;" title="Add Branch office">
                <img src="@Url.Content("~/images/add-site.png")" title="Add Branch office"/>Branch Office</a>
        </div>
        
        <table id="team-list" style="width:100%">
            <tr>
                <th>Branch Name</th>
                <th>Address</th>
                <th>Action</th>
            </tr>
        </table>
    </div>
 }

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">

    function ShowHideDivBranch(chkbranh){
        
        if (chkbranh.checked) {
            document.getElementById("dvItems").style.display = "Block";            
            AddBranch();
        }
        else {
            $("#team-list tr").remove();
            AddTableHeader();
            document.getElementById("dvItems").style.display = "none";
            document.getElementById("itemcnt").value = "0";
        }
    }

    function AddTableHeader() {
       
        // Find a <table> element with id="myTable":
        var table = document.getElementById("team-list");

        // Create an empty <tr> element and add it to the 1st position of the table:
        var row = table.insertRow();

        // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);

        cell1.innerHTML = "<th>Branch Name</th>";
        cell2.innerHTML = "<th>Address</th>";
        cell3.innerHTML = "<th>Action</th>";        
    }

    function AddBranch() {
        document.getElementById("dvItems").style.display = "";
        var cnt = document.getElementById("itemcnt").value;

        document.getElementById("itemcnt").value = cnt;
        // Find a <table> element with id="myTable":
        var table = document.getElementById("team-list");


        // Create an empty <tr> element and add it to the 1st position of the table:
        var row = table.insertRow();

        // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);

        cell1.innerHTML = "<input type='text' id='Name" + cnt + "' name='Name" + cnt + "'>";
        cell2.innerHTML = "<textarea id='Address" + cnt + "' name='Address" + cnt + "'></textarea>";
        cell3.innerHTML = " <img src='@Url.Content("~/images/cancel.png")' onclick='deleteRow(this)' style='cursor:pointer; padding-right: 5px;'/>Remove";
        cnt++;
        document.getElementById("itemcnt").value = cnt;
    }

        function deleteRow(btn) {
            var row = btn.parentNode.parentNode;
            row.parentNode.removeChild(row);
        }

      
    </script>
}
