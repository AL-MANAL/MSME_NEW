@model ISOStd.Models.GenerateAuditChecklistModels

@{
    ViewBag.Title = "AuditChecklistDetails";
    //System.Data.DataSet dsrating = new System.Data.DataSet();

    //if (ViewBag.AuditRating != null)
    //{
    //    dsrating = ViewBag.AuditRating;
    //}

    ISOStd.Models.GenerateAuditChecklistModelsList AuditTransList = new ISOStd.Models.GenerateAuditChecklistModelsList();
    if (ViewBag.AuditTransList != null)
    {
        AuditTransList = ViewBag.AuditTransList;
    }
    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
}

@section featured {
    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">
                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("AuditChecklistList", "GenerateAuditChecklist")" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Audit Checklists</span>
                    </a>
                    <span class="breadcrumb-item active"> Audit Checklist Details</span>
                </div>
                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            <div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">
                    @using (Html.BeginForm("AuditChecklistReport", "GenerateAuditChecklist", FormMethod.Post, new { id = "form1", name = "form1" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="breadcrumb-elements-item dropdown p-0">
                            <input type="hidden" id="id_AuditChecklist" name="id_AuditChecklist" value="@Model.id_AuditChecklist" />                                                       
                            <button type="submit" class="dropdown-item">
                                <i class="icon-printer2"></i> Report
                            </button>
                        </div>
                    }

                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>
                        <div class="dropdown-menu dropdown-menu-right">
                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@*@using (Html.BeginForm("AuditChecklistReport", "GenerateAuditChecklist", FormMethod.Post, new { id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()

    <input type="hidden" id="idt_checklist" name="idt_checklist" value="@Model.idt_checklist" />
    <div style="float: right;padding-right: 50px;">
        <button type="submit" class="btn btn-success btn-lg" style="width: 85px; height: 33px;background-color: #449d44 !important; padding: 0px;">
            <span class="glyphicon glyphicon-print"></span>Report
        </button>
    </div>
}*@

    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Audit Checklist Details</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>
                </div>
            </div>
        </div>

        <div class="card-body">
            <div class="container-fluid">
                <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
                    <thead></thead>
                    <tbody>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded ">
                                    @Html.DisplayNameFor(model => model.ChecklistRef)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.ChecklistRef)
                                </p>
                            </td>
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded ">
                                    @Html.DisplayNameFor(model => model.directorate)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.directorate)
                                </p>
                            </td>
                        </tr>
                        <tr class="row">

                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded ">
                                    @Html.DisplayNameFor(model => model.grp)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @if (Model.grp_common == "common")
                                    {
                                        @Html.DisplayFor(model => model.grp_common)
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(model => model.grp)
                                    }
                                </p>
                            </td>
                            @*<td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded ">
                                    @Html.DisplayNameFor(model => model.team)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @if (Model.team_common == "common")
                                    {
                                        @Html.DisplayFor(model => model.team_common)
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(model => model.team)
                                    }
                                </p>
                            </td>*@
                            @*<td class="col-xs-3 col-md-2">
            <p class="bg-brown py-1 px-2 rounded ">
                @Html.DisplayNameFor(model => model.AuditNo)
            </p>
        </td>
        <td class="col">
            <p class="bg-dark py-1 px-2 rounded">
                @Html.DisplayFor(model => model.AuditNo)
            </p>
        </td>*@
                        </tr>

                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded ">
                                    @Html.DisplayNameFor(model => model.created_on)
                                </p>
                            </td>
                            <td class="col">
                                @if (Model.created_on != null && Model.created_on > Convert.ToDateTime("01/01/0001"))
                                {
                                    <span class="bg-dark py-1 px-2 rounded">
                                        @Model.created_on.ToString("dd/MM/yyyy")
                                    </span>
                                }
                            </td>
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded ">
                                    @Html.DisplayNameFor(model => model.ammended_on)
                                </p>
                            </td>
                            <td class="col">
                                @if (Model.ammended_on != null && Model.ammended_on > Convert.ToDateTime("01/01/0001"))
                                {
                                    <span class="bg-dark py-1 px-2 rounded">
                                        @Model.ammended_on.ToString("dd/MM/yyyy")
                                    </span>
                                }
                            </td>
                        </tr>

                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded ">
                                    @Html.DisplayNameFor(model => model.prepared_by)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.prepared_by)
                                </p>
                            </td>
                            <td class="col-xs-3 col-md-2">
                                <p class="bg-brown py-1 px-2 rounded ">
                                    @Html.DisplayNameFor(model => model.notified_to)
                                </p>
                            </td>
                            <td class="col">
                                <p class="bg-dark py-1 px-2 rounded">
                                    @Html.DisplayFor(model => model.notified_to)
                                </p>
                            </td>
                        </tr>
                </table>
                <br />
                <br />
                @if(ViewBag.AuditTransList != null)
                {
                <table class="table table-bordered table-striped table-hover datatable-responsive" id="table1">
                    <thead>
                        <tr>
                            <th style="background-color: #e5eafe; color: #0099ff;">
                                Sr. No.
                            </th>
                            <th style="background-color: #e5eafe; color: #0099ff;">
                                Standard/Procedure
                            </th>
                            <th style="background-color: #e5eafe; color: #0099ff;">
                                Clause/Section No
                            </th>
                            <th style="background-color: #e5eafe; color: #0099ff;">
                                Question
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (ViewBag.AuditTransList != null)
                        {
                            int iSrno = 0;
                            foreach (var item in AuditTransList.AuditCheckList)
                            {
                                iSrno = iSrno + 1;
                                <tr>
                                    <td>
                                        @iSrno
                                    </td>
                                    <td>
                                        @item.IsoStd
                                    </td>
                                    <td>
                                        @item.Clause
                                    </td>
                                    <td>
                                        @item.Questions
                                    </td>                                  
                                </tr>
                            }
                        }
                    </tbody>
                </table>
                }
                @*<table class="table table-bordered table-striped table-hover datatable-responsive" id="table1">
            <thead>
                <tr>
                    <th style="background-color: #e5eafe; color: #0099ff;">
                        Sr. No.
                    </th>
                    <th style="background-color: #e5eafe; color: #0099ff;">
                        Questions
                    </th>
                    <th style="background-color: #e5eafe; color: #0099ff;">
                        Rating
                    </th>
                    <th style="background-color: #e5eafe; color: #0099ff;">
                        Comments
                    </th>
                    @if (Obj.GetCurrentUserSession().AuditChecklist.Contains("4"))
                    {
                        <th style="background-color: #e5eafe; color: #0099ff;">
                            Evidence Document
                        </th>
                    }
                </tr>
            </thead>
            <tbody>
                @if (ViewBag.AuditElement != null)
                {
                    int iSrno = 0;
                    foreach (var item in objChecklist.lstAudit)
                    {
                        iSrno = iSrno + 1;
                <tr>
                    <td>
                        @iSrno
                    </td>
                    <td>
                        @item.id_element
                    </td>
                    <td>
                        @item.id_auditratings
                    </td>
                    <td>
                        @item.comment
                    </td>
                    @if (Obj.GetCurrentUserSession().AuditChecklist.Contains("4"))
                    {
                        <td>
                            @if (item.evidence_upload != "")
                            {
                                <a href='@Url.Action("DisplayDocument", "Reports", new { Document = item.evidence_upload })' target="_blank">Preview</a>
                            }
                        </td>
                    }
                </tr>
                    }
                }
            </tbody>
        </table>*@

            </div>
        </div>     
        <div class="card-footer bg-white d-flex justify-content-between align-items-center">          
            @Html.ActionLink("Back to List", "AuditChecklistList", null, new { id_AuditChecklist = Model.id_AuditChecklist }, new { @class = "btn btn-outline bg-orange text-orange border-orange", onclick = "HyperLinkProgressIconFunction()" })

        </div>
    </div>


    @section Scripts {
        <script>

             //----zzz
    $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
    });
    //zzz----








            var table1 = function () {


                //
                // Setup module components
                //

                // Basic Datatable examples
                var _componentDatatableBasic = function () {
                    if (!$().DataTable) {
                        console.warn('Warning - datatables.min.js is not loaded.');
                        return;
                    }

                    //Setting datatable defaults
                    $.extend($.fn.dataTable.defaults, {
                        autoWidth: false,
                        responsive: true,
                        paging: false,
                        ordering: false,
                        info: false,
                        searching: false,
                        colReorder: false,

                    });


                    var table = $('#table1').DataTable({


                        stateSave: true,
                        stateSaveParams: function (settings, data) {
                            for (var i = 0, ien = data.columns.length; i < ien; i++) {
                                delete data.columns[i].visible;
                                delete data.columns[i].search;
                            }
                        },
                        scrollY: '350px',
                        scrollCollapse: true,


                        keys: {
                            className: 'focus focus-success'
                        },

                    });
                    // Adjust columns on window resize
                    setTimeout(function () {
                        $(window).on('resize', function () {
                            table.columns.adjust();
                        });
                    }, 100);


                    //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                    $('.sidebar-control').on('click', function () {

                        setTimeout(function () {
                            //alert("gii");

                            table.columns.adjust().draw();
                            $("#table1").resize();
                        }, 100);

                    });
                    //}

                    $('#table1').on('page.dt', function () {
                        //table.draw();
                        //alert("zzz1");
                        $("#table1").resize();

                    });

                    $('#table1').on('column-visibility.dt', function () {
                        //table.draw();
                        //alert("zzz2");
                        $("#table1").resize();

                    });

                    $('#table1').on('order.dt', function () {
                        //table.draw();
                        //alert("zzz3");
                        $("#table1").resize();

                    });


                    $('#table1').on('responsive-display.dt', function () {
                        //table.draw();
                        //alert("zzz4");
                        $("#table1").resize();

                    });


                    $('#table1').on('responsive-resize.dt', function () {
                        //table.draw();
                        //alert("zzz4");
                        $("#table1").resize();

                    });
                };


                // Select2 for length menu styling
                var _componentSelect2 = function () {
                    if (!$().select2) {
                        console.warn('Warning - select2.min.js is not loaded.');
                        return;
                    }

                    // Initialize
                    $('.dataTables_length select').select2({
                        minimumResultsForSearch: Infinity,
                        dropdownAutoWidth: true,
                        width: 'auto'
                    });
                };


                //
                // Return objects assigned to module
                //

                return {
                    init: function () {
                        _componentDatatableBasic();
                        _componentSelect2();
                    }
                }
            }();


            // Initialize module
            // ------------------------------

            document.addEventListener('DOMContentLoaded', function () {
                table1.init();
            });


        </script>
        @Scripts.Render("~/bundles/jqueryval")
    }


