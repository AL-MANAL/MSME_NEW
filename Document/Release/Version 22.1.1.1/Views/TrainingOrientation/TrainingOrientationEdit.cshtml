
@model ISOStd.Models.TrainingOrientationModels
@{
     ViewBag.Title = "TrainingOrientationEdit";
}

@section featured {
    <div class="page-header page-header-light">
        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">
                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("AddOrientationDetails", "TrainingOrientation", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Add Training Topic</span>
                    </a>
                    <span class="breadcrumb-item active">Update Training Topic</span>
                </div>
                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">
                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>
                        <div class="dropdown-menu dropdown-menu-right">
                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}


    @using (Html.BeginForm("TrainingOrientationEdit", "TrainingOrientation", FormMethod.Post, new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

    <div>
        <input type="hidden" id="TrainingOrientation_Id" name="TrainingOrientation_Id" value="@Model.TrainingOrientation_Id" />
        <table class="table table-lg">
            <tr class="row">
                <td class="col-xs-3 col-md-2">
                    Division<text style="color:red;">*</text>
                </td>
                <td class="col">
                    <select class="form-control select-fixed-multiple" multiple="multiple" data-fouc id="branch" name="branch" onchange="GetDeptList()">
                        @*<option value='' hidden>Select</option>*@
                        @if (ViewBag.BranchList != null)
                        {
                            foreach (var data in ViewBag.BranchList)
                            {
                                if (Array.IndexOf(Model.branch.ToString().Split(','), data.Value) >= 0)
                                {
                                    <option value='@data.Value' selected>@data.Text</option>
                                }
                                else
                                {
                                    <option value='@data.Value'>@data.Text</option>
                                }
                            }
                        }
                    </select>
                </td>
                <td class="col-xs-3 col-md-2">
                    Department<text style="color:red;">*</text>
                </td>
                <td class="col">
                    <select class="form-control select-fixed-multiple" data-fouc id="Department" name="Department" multiple="multiple" required>
                        @if (ViewBag.DepartmentList != null)
                        {
                            foreach (var item in ViewBag.DepartmentList)
                            {
                                if (Array.IndexOf(Model.Department.ToString().Split(','), item.Value) >= 0)
                                {
                                    <option value='@item.Value' selected>@item.Text</option>
                                }
                                else
                                {
                                    <option value='@item.Value'>@item.Text</option>
                                }
                            }
                        }
                    </select>
                </td>
            </tr>
            <tr class="row">
                
                <td class="col-xs-3 col-md-2">
                    Location<text style="color:red;">*</text>
                </td>
                <td class="col">
                    <select class="form-control select-fixed-multiple" data-fouc id="Location" name="Location" multiple="multiple" required>
                        @if (ViewBag.LocationList != null)
                        {
                            foreach (var item in ViewBag.LocationList)
                            {
                                if (Array.IndexOf(Model.Location.ToString().Split(','), item.Value) >= 0)
                                {
                                    <option value='@item.Value' selected>@item.Text</option>
                                }
                                else
                                {
                                    <option value='@item.Value'>@item.Text</option>
                                }
                            }
                        }
                    </select>
                </td>
                <td class="col-xs-3 col-md-2">
                    <div class="editor-label">
                        Topic<text style="color:red;">*</text>
                    </div>
                </td>
                <td class="col-xs-3 col-md-4">
                    <div class="editor-field">
                        <input class="form-control" type="text" id="Topic" name="Topic" value="@Model.Topic" required />

                    </div>
                </td>
            </tr>
            <tr class="row">
                <td class="col-xs-3 col-md-2">
                    <div class="editor-label">
                        Document Path
                    </div>
                </td>            
                <td class="col">
                    <div class="editor-field">
                        <input type="file" name="file" id="file" onchange="FileFormatValidation(this)" multiple accept=".ppt,.pdf,.xlsx,.xls,.jpeg,.jpg,.png,.doc,.docx,image/*" class="bootstrap-uploader" data-fouc/>
                        @if (Model.DocUploadPath != null && Model.DocUploadPath != "" && Model.DocUploadPath.Length > 0)
                        {
                            foreach (var docs in Model.DocUploadPath.Trim(',').Split(','))
                            {
                                <p style="margin: 0px;">
                                    <span class="bg-dark py-1 px-2 rounded">
                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs})' target="_blank">Preview</a>
                                    </span>
                                </p>
                            }
                        }
                    </div>
                </td>
            </tr>

        </table>
        <div class="card-footer bg-white d-flex justify-content-between align-items-center">
            @Html.ActionLink("Back to List", "AddOrientationDetails", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })

            <button type="submit" id="btnCreate" value="Update" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Update</button>
        </div>
    </div>

    }


@section Scripts {
    <script>

        $(document).ready(function () {

        @if (TempData["alertdata"] != null ) {

           @: new Noty({
                                               @:     text: '@TempData["alertdata"]',
                                               @:     type: 'error'
                                               @: }).show();
                                      }

        @if (@TempData["Successdata"] != null ) {

        @:    new Noty({
                                             @:       text: '@TempData["Successdata"]',
                                             @:       type: 'success'
         @:}).show();
        }
        });  

      function GetDeptList() {
            var selectedValues = [];
            $("#branch :selected").each(function () {
                selectedValues.push($(this).val());
            });
                jQuery.ajax({
                    url: '@Url.Action("FunGetAllDeptList", "EmployeeDetails")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'branch': selectedValues },
                    success: function (result) {
                        GetLocList(selectedValues);
                        $("#Department").children('option').remove();
                        $("#Department").trigger('change');
                        if (result != null && result.length > 0) {
                            $.each(result, function (index, item) {
                                $("#Department").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                                $("#Department").trigger('change');
                            });
                            return;
                        }
                        //else {
                        //    bootbox.alert({
                        //        title: 'Department List',
                        //        message: 'No Department exists.'
                        //    });
                        //}
                    }
                });
        }


        function GetLocList(selectedValues) {
            jQuery.ajax({
                url: '@Url.Action("FunGetAllLocList", "EmployeeDetails")',
                type: 'POST',
                dataType: "json",
                data: { 'branch': selectedValues },
                success: function (result) {
                    $("#Location").children('option').remove();
                    $("#Location").trigger('change');
                    if (result != null && result.length > 0) {
                        $.each(result, function (index, item) {
                            $("#Location").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            $("#Location").trigger('change');
                        });
                        return;
                    }
                    //else {
                    //    bootbox.alert({
                    //        title: 'Location List',
                    //        message: 'No Location exists.'
                    //    });
                    //}
                }
            });
        }
        function FileFormatValidation(file) {
            var ext = file.value.split(".").pop().toLowerCase();
            if ($.inArray(ext, ["ppt", "pdf", "xlsx", "xls", "doc", "docx", "jpg", "jpeg", "gif", ".png"]) == -1) {
                file.value = "";
                bootbox.alert({
                    title: 'File type',
                    message: 'Invalid file format, please upload only doc, pdf, docx, xls, xls,jpg, jpeg, gif, png format'
                });
            }
        }
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
