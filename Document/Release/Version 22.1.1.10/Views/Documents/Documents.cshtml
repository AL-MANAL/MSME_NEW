@using System.Data;

@{
    ViewBag.Title = "Document Stats";
    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();

    System.Data.DataSet dsInternalTotal = new System.Data.DataSet();
    dsInternalTotal= ViewBag.dsInternalTotal ;

    System.Data.DataSet dsInternalReview = new System.Data.DataSet();
    dsInternalReview =ViewBag.dsInternalReview  ;

    System.Data.DataSet dsInternalApproved = new System.Data.DataSet();
    dsInternalApproved =ViewBag.dsInternalApproved  ;

    System.Data.DataSet dsExternalTotal = new System.Data.DataSet();
    dsExternalTotal = ViewBag.dsExternalTotal  ;

    System.Data.DataSet dsExternalApproved = new System.Data.DataSet();
    dsExternalApproved = ViewBag.dsExternalApproved  ;

    System.Data.DataSet dsExternalDeclined = new System.Data.DataSet();
    dsExternalDeclined =ViewBag.dsExternalDeclined ;

    System.Data.DataSet dsDocChangeTotal = new System.Data.DataSet();
    dsDocChangeTotal  = ViewBag.dsDocChangeTotal  ;

    System.Data.DataSet dsDocChangeApproved = new System.Data.DataSet();
    dsDocChangeApproved = ViewBag.dsDocChangeApproved  ;

    System.Data.DataSet dsDocChangeDeclined = new System.Data.DataSet();
    dsDocChangeDeclined = ViewBag.dsDocChangeDeclined  ;

    System.Data.DataSet dsDocTrackTotal = new System.Data.DataSet();
    dsDocTrackTotal = ViewBag.dsDocTrackTotal  ;

    System.Data.DataSet dsDocTrackApproved = new System.Data.DataSet();
    dsDocTrackApproved= ViewBag.dsDocTrackApproved  ;

    System.Data.DataSet dsDocTrackDeclined = new System.Data.DataSet();
    dsDocTrackDeclined =  ViewBag.dsDocTrackDeclined  ;

    System.Data.DataSet dsPassportTotal = new System.Data.DataSet();
    dsPassportTotal= ViewBag.dsPassportTotal  ;

    System.Data.DataSet dsPassportApproved = new System.Data.DataSet();
    dsPassportApproved= ViewBag.dsPassportApproved  ;

    System.Data.DataSet dsPassportDeclined = new System.Data.DataSet();
    dsPassportDeclined=ViewBag.dsPassportDeclined  ;

    System.Data.DataSet dsVisaTotal = new System.Data.DataSet();
    dsVisaTotal=ViewBag.dsVisaTotal  ;

    System.Data.DataSet dsVisaApproved = new System.Data.DataSet();
    dsVisaApproved =ViewBag.dsVisaApproved  ;

    System.Data.DataSet dsVisaDeclined = new System.Data.DataSet();
    dsVisaDeclined =ViewBag.dsVisaDeclined  ;

    System.Data.DataSet dsInsuranceTotal = new System.Data.DataSet();
    dsInsuranceTotal=ViewBag.dsInsuranceTotal  ;

    System.Data.DataSet dsInsuranceApproved = new System.Data.DataSet();
    dsInsuranceApproved = ViewBag.dsInsuranceApproved  ;

    System.Data.DataSet dsInsurcaneDeclined = new System.Data.DataSet();
    dsInsurcaneDeclined =ViewBag.dsInsurcaneDeclined  ;

    System.Data.DataSet dsPerformanceTotal = new System.Data.DataSet();
    dsPerformanceTotal =ViewBag.dsPerformanceTotal  ;

    System.Data.DataSet dsPerformanceApproved = new System.Data.DataSet();
    dsPerformanceApproved  =ViewBag.dsPerformanceApproved  ;

    System.Data.DataSet dsPerformanceDeclined = new System.Data.DataSet();
    dsPerformanceDeclined = ViewBag.dsPerformanceDeclined  ;

    System.Data.DataSet dsMOCTotal = new System.Data.DataSet();
    dsMOCTotal =ViewBag.dsMOCTotal ;

    System.Data.DataSet dsMOCApproved = new System.Data.DataSet();
    dsMOCApproved =ViewBag.dsMOCApproved  ;

    System.Data.DataSet dsMOCDeclined = new System.Data.DataSet();
    dsMOCDeclined =ViewBag.dsMOCDeclined  ;

    DataSet dsAccessGovtTotal = new DataSet();
    DataSet dsAccessGovtCreate = new DataSet();
    DataSet dsAccessGovtRecomd = new DataSet();
    DataSet dsAccessGovtCEO = new DataSet();
    DataSet dsAccessGovtVP = new DataSet();
    DataSet dsAccessGovtDecline = new DataSet();
    DataSet dsAccessGovtApproved = new DataSet();

    if (ViewBag.dsAccessGovtTotal != null)
    {
        dsAccessGovtTotal = ViewBag.dsAccessGovtTotal;
    }
    if (ViewBag.dsAccessGovtCreate != null)
    {
        dsAccessGovtCreate = ViewBag.dsAccessGovtCreate;
    }
    if (ViewBag.dsAccessGovtRecomd != null)
    {
        dsAccessGovtRecomd = ViewBag.dsAccessGovtRecomd;
    }
    if (ViewBag.dsAccessGovtCEO != null)
    {
        dsAccessGovtCEO = ViewBag.dsAccessGovtCEO;
    }
    if (ViewBag.dsAccessGovtVP != null)
    {
        dsAccessGovtVP = ViewBag.dsAccessGovtVP;
    }
    if (ViewBag.dsAccessGovtDecline != null)
    {
        dsAccessGovtDecline = ViewBag.dsAccessGovtDecline;
    }
    if (ViewBag.dsAccessGovtApproved != null)
    {
        dsAccessGovtApproved = ViewBag.dsAccessGovtApproved;
    }
    DateTime dt2 = DateTime.Now;
}
@section featured {
    <div class="page-header page-header-light">
        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">
                    @*<a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>*@
                    <span class="breadcrumb-item active"><i class="icon-archive mr-2"> </i>Document Dashboard</span>
                </div>
                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            <div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">
                    <div class="breadcrumb-elements-item dropdown p-0 d-none" id="list_button">
                        <button type="button" class="dropdown-item">
                            <i class="icon-list"></i> List View
                        </button>
                    </div>

                    <div class="breadcrumb-elements-item dropdown p-0" id="folder_button">
                        <button type="button" class="dropdown-item">
                            <i class="icon-folder-open3"></i> Folder View
                        </button>
                    </div>
                    @*<div class="breadcrumb-elements-item dropdown p-0">
            <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                <i class="icon-gear mr-2"></i>
                Settings
            </a>
            <div class="dropdown-menu dropdown-menu-right">
                <div class="dropdown-divider">
                    <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                </div>
            </div>
        </div>*@
                    <div class="float-right">
                        <a class="btn btn-outline bg-orange text-orange border-orange btn-ladda btn-ladda-progress ladda-button" data-style="radius" href="@Url.Action("Index", "Home", null)" title="Dashboard">
                            <i class="icon-calendar mr-2"> </i> QHSE Planner
                        </a>
                        &nbsp;&nbsp;&nbsp;
                         <a class="btn btn-outline bg-orange text-orange border-orange btn-ladda btn-ladda-progress ladda-button" data-style="radius" href="@Url.Action("QHSE", "Home", null)" title="Dashboard">
                            <i class="icon-stats-dots mr-2"> </i> Performance Dashboard
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

    <div id="list_view">
       
        <div class="row">
            <div class="col-sm-6 col-xl-4 col-md-4">
                <div class="card text-center bg-blue-400 has-bg-image docstats">
                    <div class="d-flex justify-content-between">
                        <h6 class="font-weight-semibold ml-2 mb-0 mt-1">
                            Internal System Documents
                        </h6>
                        <div class="pull-right"><button class="btn bg-brown btn-icon btn-sm rounded-left-round rounded-top" id="Internal-button"><i class="icon-1x icon-file-empty"></i></button></div>
                    </div>
                    <div class="card-body border-top-0 pt-0 mt-4 cursor-pointer" id="Internal-docs">
                        <div class="row">
                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Total</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsInternalTotal.Tables[0].Rows.Count</h5>
                            </div>
                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Pending for Review</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsInternalReview.Tables[0].Rows.Count</h5>
                            </div>

                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Approved</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsInternalApproved.Tables[0].Rows.Count</h5>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-sm-6 col-xl-4 col-md-4">
                <div class="card text-center bg-blue-400 has-bg-image docstats">
                    <div class="d-flex justify-content-between">
                        <h6 class="font-weight-semibold ml-2 mb-0 mt-1">
                            External Documents
                        </h6>
                        <div class="pull-right"><button class="btn bg-brown btn-icon btn-sm rounded-left-round rounded-top" id="external-button"><i class="icon-1x icon-file-empty"></i></button></div>
                    </div>
                    <div class="card-body border-top-0 pt-0 mt-4 cursor-pointer" id="external-docs">
                        <div class="row">
                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Total</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsExternalTotal.Tables[0].Rows.Count</h5>
                            </div>

                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Pending Renewal</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsExternalApproved.Tables[0].Rows.Count</h5>
                            </div>

                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">
                                    Declined
                                </div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsExternalDeclined.Tables[0].Rows.Count</h5>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-sm-6 col-xl-4 col-md-4">
                <div class="card text-center bg-blue-400 has-bg-image docstats">
                    <div class="d-flex justify-content-between">
                        <h6 class="font-weight-semibold ml-2 mb-0 mt-1">
                            Document Change Requests
                        </h6>
                        <div class="pull-right"><button class="btn bg-brown btn-icon btn-sm rounded-left-round rounded-top" id="change-button"><i class="icon-1x icon-file-empty"></i></button></div>
                    </div>

                    <div class="card-body border-top-0 pt-0 mt-4 cursor-pointer" id="change-docs">
                        <div class="row">
                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Total</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsDocChangeTotal.Tables[0].Rows.Count</h5>
                            </div>

                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Approved</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsDocChangeApproved.Tables[0].Rows.Count</h5>
                            </div>

                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">
                                    Declined
                                </div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsDocChangeDeclined.Tables[0].Rows.Count</h5>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6 col-xl-4 col-md-4">
                <div class="card text-center bg-blue-400 has-bg-image docstats">
                    <div class="d-flex justify-content-between">
                        <h6 class="font-weight-semibold ml-2 mb-0 mt-1">
                            Documents Tracked
                        </h6>
                        <div class="pull-right"><button class="btn bg-brown btn-icon btn-sm rounded-left-round rounded-top" id="track-button"><i class="icon-1x icon-file-empty"></i></button></div>
                    </div>
                    <div class="card-body border-top-0 pt-0 mt-4 cursor-pointer" id="track-docs">
                        <div class="row">
                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Total</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsDocTrackTotal.Tables[0].Rows.Count</h5>
                            </div>

                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Pending Renewal</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsDocTrackApproved.Tables[0].Rows.Count</h5>
                            </div>

                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Declined</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsDocTrackDeclined.Tables[0].Rows.Count</h5>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @*<div class="col-sm-6 col-xl-4 col-md-4">
                <div class="card text-center bg-danger-400 has-bg-image docstats">
                    <div class="d-flex justify-content-between">
                        <h6 class="font-weight-semibold ml-2 mb-0 mt-1">
                            Passport Documents
                        </h6>
                        <div class="pull-right"><button class="btn bg-brown btn-icon btn-sm rounded-left-round rounded-top" id="passport-button"><i class="icon-1x icon-file-empty"></i></button></div>
                    </div>
                    <div class="card-body border-top-0 pt-0 mt-4 cursor-pointer" id="passport-docs">
                        <div class="row">
                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Total</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsPassportTotal.Tables[0].Rows.Count</h5>
                            </div>

                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Pending Renewal</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsPassportApproved.Tables[0].Rows.Count</h5>
                            </div>

                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Declined Renewal</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsPassportDeclined.Tables[0].Rows.Count</h5>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <div class="col-sm-6 col-xl-4 col-md-4">
                <div class="card text-center bg-danger-400 has-bg-image docstats">
                    <div class="d-flex justify-content-between">
                        <h6 class="font-weight-semibold ml-2 mb-0 mt-1">
                            Visa Documents
                        </h6>
                        <div class="pull-right"><button class="btn bg-brown btn-icon btn-sm rounded-left-round rounded-top" id="visa-button"><i class="icon-1x icon-file-empty"></i></button></div>
                    </div>
                    <div class="card-body border-top-0 pt-0 mt-4 cursor-pointer" id="visa-docs">
                        <div class="row">
                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Total</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsVisaTotal.Tables[0].Rows.Count</h5>
                            </div>

                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Pending Renewal</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsVisaApproved.Tables[0].Rows.Count</h5>
                            </div>

                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Declined Renewal</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsVisaDeclined.Tables[0].Rows.Count</h5>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6 col-xl-4 col-md-4">
                <div class="card text-center bg-danger-400 has-bg-image docstats">
                    <div class="d-flex justify-content-between">
                        <h6 class="font-weight-semibold ml-2 mb-0 mt-1">
                            Employee Insurance
                        </h6>
                        <div class="pull-right"><button class="btn bg-brown btn-icon btn-sm rounded-left-round rounded-top" id="insurance-button"><i class="icon-1x icon-file-empty"></i></button></div>
                    </div>
                    <div class="card-body border-top-0 pt-0 mt-4 cursor-pointer" id="insurance-docs">
                        <div class="row">
                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Total</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsInsuranceTotal.Tables[0].Rows.Count</h5>
                            </div>

                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Pending Renewal</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsInsuranceApproved.Tables[0].Rows.Count</h5>
                            </div>

                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Declined Renewal</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsInsurcaneDeclined.Tables[0].Rows.Count</h5>
                            </div>
                        </div>
                    </div>
                </div>


            </div>*@


            <div class="col-sm-6 col-xl-4 col-md-4">
                <div class="card text-center bg-blue-400 has-bg-image docstats">
                    <div class="d-flex justify-content-between">
                        <h6 class="font-weight-semibold ml-2 mb-0 mt-1">
                            Peformance Evaluation
                        </h6>
                        <div class="pull-right"><button class="btn bg-brown btn-icon btn-sm rounded-left-round rounded-top" id="evaluation-button"><i class="icon-1x icon-file-empty"></i></button></div>
                    </div>

                    <div class="card-body border-top-0 pt-0 mt-4 cursor-pointer" id="evaluation-docs">
                        <div class="row">
                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Total</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsPerformanceTotal.Tables[0].Rows.Count</h5>
                            </div>

                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Pending Renewal</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsPerformanceApproved.Tables[0].Rows.Count</h5>
                            </div>

                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Declined</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsPerformanceDeclined.Tables[0].Rows.Count</h5>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-sm-6 col-xl-4 col-md-4">
                <div class="card text-center bg-blue-400 has-bg-image docstats">
                    <div class="d-flex justify-content-between">
                        <h6 class="font-weight-semibold ml-2 mb-0 mt-1">
                            Management Of Change(MOC)
                        </h6>
                        <div class="pull-right"><button class="btn bg-brown btn-icon btn-sm rounded-left-round rounded-top" id="moc-button"><i class="icon-1x icon-file-empty"></i></button></div>
                    </div>
                    <div class="card-body border-top-0 pt-0 mt-4 cursor-pointer" id="moc-docs">
                        <div class="row">
                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Total</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsMOCTotal.Tables[0].Rows.Count</h5>
                            </div>
                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Pending Approval</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsMOCApproved.Tables[0].Rows.Count</h5>
                            </div>
                            <div class="col-4">
                                <div class="text-uppercase font-size-xs">Declined</div>
                                <h5 class="font-weight-semibold line-height-1 mt-1 mb-0">@dsMOCDeclined.Tables[0].Rows.Count</h5>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="active_card">
            <div class="card d-none" id="Govt_Access">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">
                       Access Request-Government
                    </h5>
                    <div class="header-elements">
                        <div class="list-icons">
                            <a class="list-icons-item" data-action="collapse"></a>
                        </div>
                    </div>
                </div>

                <div class="card-body">
                    <ul class="nav nav-tabs nav-tabs-top nav-justified">
                        <li class="nav-item"><a href="#solid-justified-tab1" class="nav-link active" data-toggle="tab"><h5><b>All Access</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab2" class="nav-link" data-toggle="tab"><h5><b>Pending Recommended By</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab3" class="nav-link" data-toggle="tab"><h5><b>Pending CEO</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab4" class="nav-link" data-toggle="tab"><h5><b>Pending Ex.Com/VP</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab5" class="nav-link" data-toggle="tab"><h5><b>Pending Dy.Chairman</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab6" class="nav-link" data-toggle="tab"><h5><b>Declined</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab7" class="nav-link" data-toggle="tab"><h5><b>Final Approved</b></h5></a></li>
                    </ul>

                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="solid-justified-tab1">
                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="ARGovt-All">
                                <thead>
                                    <tr>
                                        <th>Sl No</th>
                                        <th>Access Number</th>
                                        <th>Nominated Employee</th>
                                        <th>Access Date</th>
                                        <th>Total Days</th>
                                        <th>Document</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsAccessGovtTotal != null && dsAccessGovtTotal.Tables.Count > 0 && dsAccessGovtTotal.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;
                                        TimeSpan days;
                                        for (int i = 0; i < dsAccessGovtTotal.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            DateTime dt1 = Convert.ToDateTime(dsAccessGovtTotal.Tables[0].Rows[i]["logged_date"].ToString());
                                            days = dt2.Subtract(dt1) ;
                                    <tr>
                                        <td>@j</td>
                                        <td>@dsAccessGovtTotal.Tables[0].Rows[i]["access_no"].ToString()</td>
                                        <td>@Obj.GetMultiHrEmpNameById(dsAccessGovtTotal.Tables[0].Rows[i]["nominated_emp"].ToString())</td>
                                        <td>
                                            @if (Convert.ToDateTime(dsAccessGovtTotal.Tables[0].Rows[i]["access_date"].ToString()) > Convert.ToDateTime("01/01/0001"))
                                            {
                                                <p>
                                                    @Convert.ToDateTime(dsAccessGovtTotal.Tables[0].Rows[i]["access_date"].ToString()).ToString("dd/MM/yyyy")
                                                </p>
                                            }
                                        </td>
                                        <td>
                                            @if (dsAccessGovtTotal.Tables[0].Rows[i]["logged_date"].ToString() != "" && Convert.ToDateTime(dsAccessGovtTotal.Tables[0].Rows[i]["logged_date"].ToString()) > Convert.ToDateTime("01/01/0001"))
                                            {
                                                <p>
                                                    @days.Days.ToString()
                                                </p>
                                            }
                                        </td>
                                        <td>
                                            @if (dsAccessGovtTotal.Tables[0].Rows[i]["upload"].ToString() != null && dsAccessGovtTotal.Tables[0].Rows[i]["upload"].ToString() != "")
                                            {
                                                foreach (var docs in dsAccessGovtTotal.Tables[0].Rows[i]["upload"].ToString().Trim(',').Split(','))
                                                {
                                                    <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" class="text-orange">
                                                        Preview
                                                    </a>
                                                }
                                            }
                                            else
                                            {
                                                <span class="badge badge-danger">Document Not Uploaded</span>
                                            }
                                        </td>
                                    </tr>
                                        }
                                    }

                                </tbody>
                            </table>
                        </div>

                        <div class="tab-pane fade" id="solid-justified-tab2">
                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="ARGovt2">
                               <thead>
                                    <tr>
                                        <th>Sl No</th>
                                        <th>Access Number</th>
                                        <th>Nominated Employee</th>
                                        <th>Access Date</th>
                                        <th>Pending Days</th>
                                        <th>Document</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsAccessGovtCreate != null && dsAccessGovtCreate.Tables.Count > 0 && dsAccessGovtCreate.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;
                                        TimeSpan days;
                                        for (int i = 0; i < dsAccessGovtCreate.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            DateTime dt1 = Convert.ToDateTime(dsAccessGovtCreate.Tables[0].Rows[i]["logged_date"].ToString());
                                            days = dt2.Subtract(dt1) ;
                                    <tr>
                                        <td>@j</td>
                                        <td>@dsAccessGovtCreate.Tables[0].Rows[i]["access_no"].ToString()</td>
                                        <td>@Obj.GetMultiHrEmpNameById(dsAccessGovtCreate.Tables[0].Rows[i]["nominated_emp"].ToString())</td>
                                        <td>
                                            @if (Convert.ToDateTime(dsAccessGovtCreate.Tables[0].Rows[i]["access_date"].ToString()) > Convert.ToDateTime("01/01/0001"))
                                            {
                                                <p>
                                                    @Convert.ToDateTime(dsAccessGovtCreate.Tables[0].Rows[i]["access_date"].ToString()).ToString("dd/MM/yyyy")
                                                </p>
                                            }
                                        </td>
                                        <td>
                                            @if (dsAccessGovtCreate.Tables[0].Rows[i]["logged_date"].ToString() != "" && Convert.ToDateTime(dsAccessGovtCreate.Tables[0].Rows[i]["logged_date"].ToString()) > Convert.ToDateTime("01/01/0001"))
                                            {
                                                <p>
                                                    @days.Days.ToString()
                                                </p>
                                            }
                                        </td>
                                        <td>
                                            @if (dsAccessGovtCreate.Tables[0].Rows[i]["upload"].ToString() != null && dsAccessGovtCreate.Tables[0].Rows[i]["upload"].ToString() != "")
                                            {
                                                foreach (var docs in dsAccessGovtCreate.Tables[0].Rows[i]["upload"].ToString().Trim(',').Split(','))
                                                {
                                                    <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" class="text-orange">
                                                        Preview
                                                    </a>
                                                }
                                            }
                                            else
                                            {
                                                <span class="badge badge-danger">Document Not Uploaded</span>
                                            }
                                        </td>
                                    </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="tab-pane fade" id="solid-justified-tab3">
                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="ARGovt3">
                                <thead>
                                    <tr>
                                        <th>Sl No</th>
                                        <th>Access Number</th>
                                        <th>Nominated Employee</th>
                                        <th>Access Date</th>
                                        <th>Pending Days</th>
                                        <th>Document</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsAccessGovtRecomd != null && dsAccessGovtRecomd.Tables.Count > 0 && dsAccessGovtRecomd.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;
                                        TimeSpan days;
                                        for (int i = 0; i < dsAccessGovtRecomd.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            DateTime dt1 = Convert.ToDateTime(dsAccessGovtRecomd.Tables[0].Rows[i]["approve_recommed_date"].ToString());
                                            days = dt2.Subtract(dt1);
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsAccessGovtRecomd.Tables[0].Rows[i]["access_no"].ToString()</td>
                                                <td>@Obj.GetMultiHrEmpNameById(dsAccessGovtRecomd.Tables[0].Rows[i]["nominated_emp"].ToString())</td>
                                                <td>
                                                    @if (Convert.ToDateTime(dsAccessGovtRecomd.Tables[0].Rows[i]["access_date"].ToString()) > Convert.ToDateTime("01/01/0001"))
                                                    {
                                                        <p>
                                                            @Convert.ToDateTime(dsAccessGovtRecomd.Tables[0].Rows[i]["access_date"].ToString()).ToString("dd/MM/yyyy")
                                                        </p>
                                                    }
                                                </td>
                                                <td>
                                                    @if (dsAccessGovtRecomd.Tables[0].Rows[i]["approve_recommed_date"].ToString() != "" && Convert.ToDateTime(dsAccessGovtRecomd.Tables[0].Rows[i]["approve_recommed_date"].ToString()) > Convert.ToDateTime("01/01/0001"))
                                                    {
                                                        <p>
                                                            @days.Days.ToString()
                                                        </p>
                                                    }
                                                </td>
                                                <td>
                                                    @if (dsAccessGovtRecomd.Tables[0].Rows[i]["upload"].ToString() != null && dsAccessGovtRecomd.Tables[0].Rows[i]["upload"].ToString() != "")
                                                    {
                                                        foreach (var docs in dsAccessGovtRecomd.Tables[0].Rows[i]["upload"].ToString().Trim(',').Split(','))
                                                        {
                                                            <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" class="text-orange">
                                                                Preview
                                                            </a>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="tab-pane fade" id="solid-justified-tab4">
                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="ARGovt4">
                               <thead>
                                    <tr>
                                        <th>Sl No</th>
                                        <th>Access Number</th>
                                        <th>Nominated Employee</th>
                                        <th>Access Date</th>
                                        <th>Pending Days</th>
                                        <th>Document</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsAccessGovtCEO != null && dsAccessGovtCEO.Tables.Count > 0 && dsAccessGovtCEO.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;
                                        TimeSpan days;
                                        for (int i = 0; i < dsAccessGovtCEO.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            DateTime dt1 = Convert.ToDateTime(dsAccessGovtCEO.Tables[0].Rows[i]["approve_ceo_date"].ToString());
                                            days = dt2.Subtract(dt1) ;
                                    <tr>
                                        <td>@j</td>
                                        <td>@dsAccessGovtCEO.Tables[0].Rows[i]["access_no"].ToString()</td>
                                        <td>@Obj.GetMultiHrEmpNameById(dsAccessGovtCEO.Tables[0].Rows[i]["nominated_emp"].ToString())</td>
                                        <td>
                                            @if (Convert.ToDateTime(dsAccessGovtCEO.Tables[0].Rows[i]["access_date"].ToString()) > Convert.ToDateTime("01/01/0001"))
                                            {
                                                <p>
                                                    @Convert.ToDateTime(dsAccessGovtCEO.Tables[0].Rows[i]["access_date"].ToString()).ToString("dd/MM/yyyy")
                                                </p>
                                            }
                                        </td>
                                        <td>
                                            @if (dsAccessGovtCEO.Tables[0].Rows[i]["approve_ceo_date"].ToString() != "" && Convert.ToDateTime(dsAccessGovtCEO.Tables[0].Rows[i]["approve_ceo_date"].ToString()) > Convert.ToDateTime("01/01/0001"))
                                            {
                                                <p>
                                                    @days.Days.ToString()
                                                </p>
                                            }
                                        </td>
                                        <td>
                                            @if (dsAccessGovtCEO.Tables[0].Rows[i]["upload"].ToString() != null && dsAccessGovtCEO.Tables[0].Rows[i]["upload"].ToString() != "")
                                            {
                                                foreach (var docs in dsAccessGovtCEO.Tables[0].Rows[i]["upload"].ToString().Trim(',').Split(','))
                                                {
                                                    <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" class="text-orange">
                                                        Preview
                                                    </a>
                                                }
                                            }
                                            else
                                            {
                                                <span class="badge badge-danger">Document Not Uploaded</span>
                                            }
                                        </td>
                                    </tr>
                                        }
                                    }

                                </tbody>
                            </table>
                        </div>
                        <div class="tab-pane fade" id="solid-justified-tab5">
                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="ARGovt5">
                                <thead>
                                    <tr>
                                        <th>Sl No</th>
                                        <th>Access Number</th>
                                        <th>Nominated Employee</th>
                                        <th>Access Date</th>
                                        <th>Pending Days</th>
                                        <th>Document</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsAccessGovtVP != null && dsAccessGovtVP.Tables.Count > 0 && dsAccessGovtVP.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;
                                        TimeSpan days;
                                        for (int i = 0; i < dsAccessGovtVP.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            DateTime dt1 = Convert.ToDateTime(dsAccessGovtVP.Tables[0].Rows[i]["approve_vp_date"].ToString());
                                            days = dt2.Subtract(dt1) ;
                                    <tr>
                                        <td>@j</td>
                                        <td>@dsAccessGovtVP.Tables[0].Rows[i]["access_no"].ToString()</td>
                                        <td>@Obj.GetMultiHrEmpNameById(dsAccessGovtVP.Tables[0].Rows[i]["nominated_emp"].ToString())</td>
                                        <td>
                                            @if (Convert.ToDateTime(dsAccessGovtVP.Tables[0].Rows[i]["access_date"].ToString()) > Convert.ToDateTime("01/01/0001"))
                                            {
                                                <p>
                                                    @Convert.ToDateTime(dsAccessGovtVP.Tables[0].Rows[i]["access_date"].ToString()).ToString("dd/MM/yyyy")
                                                </p>
                                            }
                                        </td>
                                        <td>
                                            @if (dsAccessGovtVP.Tables[0].Rows[i]["approve_vp_date"].ToString() != "" && Convert.ToDateTime(dsAccessGovtVP.Tables[0].Rows[i]["approve_vp_date"].ToString()) > Convert.ToDateTime("01/01/0001"))
                                            {
                                                <p>
                                                    @days.Days.ToString()
                                                </p>
                                            }
                                        </td>
                                        <td>
                                            @if (dsAccessGovtVP.Tables[0].Rows[i]["upload"].ToString() != null && dsAccessGovtVP.Tables[0].Rows[i]["upload"].ToString() != "")
                                            {
                                                foreach (var docs in dsAccessGovtVP.Tables[0].Rows[i]["upload"].ToString().Trim(',').Split(','))
                                                {
                                                    <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" class="text-orange">
                                                        Preview
                                                    </a>
                                                }
                                            }
                                            else
                                            {
                                                <span class="badge badge-danger">Document Not Uploaded</span>
                                            }
                                        </td>
                                    </tr>
                                        }
                                    }

                                </tbody>
                            </table>
                        </div>
                        <div class="tab-pane fade" id="solid-justified-tab6">
                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="ARGovt6">
                               <thead>
                                    <tr>
                                        <th>Sl No</th>
                                        <th>Access Number</th>
                                        <th>Nominated Employee</th>
                                        <th>Access Date</th>
                                        <th>Rejected Days</th>
                                        <th>Document</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsAccessGovtDecline != null && dsAccessGovtDecline.Tables.Count > 0 && dsAccessGovtDecline.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;
                                        TimeSpan days;
                                        for (int i = 0; i < dsAccessGovtDecline.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            DateTime dt1 = Convert.ToDateTime(dsAccessGovtDecline.Tables[0].Rows[i]["rejected_date"].ToString());
                                            days = dt2.Subtract(dt1) ;
                                    <tr>
                                        <td>@j</td>
                                        <td>@dsAccessGovtDecline.Tables[0].Rows[i]["access_no"].ToString()</td>
                                        <td>@Obj.GetMultiHrEmpNameById(dsAccessGovtDecline.Tables[0].Rows[i]["nominated_emp"].ToString())</td>
                                        <td>
                                            @if (Convert.ToDateTime(dsAccessGovtDecline.Tables[0].Rows[i]["access_date"].ToString()) > Convert.ToDateTime("01/01/0001"))
                                            {
                                                <p>
                                                    @Convert.ToDateTime(dsAccessGovtDecline.Tables[0].Rows[i]["access_date"].ToString()).ToString("dd/MM/yyyy")
                                                </p>
                                            }
                                        </td>
                                        <td>
                                            @if (dsAccessGovtDecline.Tables[0].Rows[i]["rejected_date"].ToString() != "" && Convert.ToDateTime(dsAccessGovtDecline.Tables[0].Rows[i]["rejected_date"].ToString()) > Convert.ToDateTime("01/01/0001"))
                                            {
                                                <p>
                                                    @days.Days.ToString()
                                                </p>
                                            }
                                        </td>
                                        <td>
                                            @if (dsAccessGovtDecline.Tables[0].Rows[i]["upload"].ToString() != null && dsAccessGovtDecline.Tables[0].Rows[i]["upload"].ToString() != "")
                                            {
                                                foreach (var docs in dsAccessGovtDecline.Tables[0].Rows[i]["upload"].ToString().Trim(',').Split(','))
                                                {
                                                    <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" class="text-orange">
                                                        Preview
                                                    </a>
                                                }
                                            }
                                            else
                                            {
                                                <span class="badge badge-danger">Document Not Uploaded</span>
                                            }
                                        </td>
                                    </tr>
                                        }
                                    }

                                </tbody>
                            </table>
                        </div>
                        <div class="tab-pane fade" id="solid-justified-tab7">
                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="ARGovt7">
                                <thead>
                                    <tr>
                                        <th>Sl No</th>
                                        <th>Access Number</th>
                                        <th>Nominated Employee</th>
                                        <th>Access Date</th>
                                        <th>Approved Days</th>
                                        <th>Document</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsAccessGovtApproved != null && dsAccessGovtApproved.Tables.Count > 0 && dsAccessGovtApproved.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;
                                        TimeSpan days;
                                        for (int i = 0; i < dsAccessGovtApproved.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            DateTime dt1 = Convert.ToDateTime(dsAccessGovtApproved.Tables[0].Rows[i]["approve_chairman_date"].ToString());
                                            days = dt2.Subtract(dt1);
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsAccessGovtApproved.Tables[0].Rows[i]["access_no"].ToString()</td>
                                                <td>@Obj.GetMultiHrEmpNameById(dsAccessGovtApproved.Tables[0].Rows[i]["nominated_emp"].ToString())</td>
                                                <td>
                                                    @if (Convert.ToDateTime(dsAccessGovtApproved.Tables[0].Rows[i]["access_date"].ToString()) > Convert.ToDateTime("01/01/0001"))
                                                    {
                                                        <p>
                                                            @Convert.ToDateTime(dsAccessGovtApproved.Tables[0].Rows[i]["access_date"].ToString()).ToString("dd/MM/yyyy")
                                                        </p>
                                                    }
                                                </td>
                                                <td>
                                                    @if (dsAccessGovtApproved.Tables[0].Rows[i]["approve_chairman_date"].ToString() != "" && Convert.ToDateTime(dsAccessGovtApproved.Tables[0].Rows[i]["approve_chairman_date"].ToString()) > Convert.ToDateTime("01/01/0001"))
                                                    {
                                                        <p>
                                                            @days.Days.ToString()
                                                        </p>
                                                    }
                                                </td>
                                                <td>
                                                    @if (dsAccessGovtApproved.Tables[0].Rows[i]["upload"].ToString() != null && dsAccessGovtApproved.Tables[0].Rows[i]["upload"].ToString() != "")
                                                    {
                                                        foreach (var docs in dsAccessGovtApproved.Tables[0].Rows[i]["upload"].ToString().Trim(',').Split(','))
                                                        {
                                                            <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" class="text-orange">
                                                                Preview
                                                            </a>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card d-none" id="hidden card Internal System Documnts">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">
                        Internal System Documents
                    </h5>
                    <div class="header-elements">
                        <div class="list-icons">
                            <a class="list-icons-item" data-action="collapse"></a>
                        </div>
                    </div>
                </div>

                <div class="card-body">
                    <ul class="nav nav-tabs nav-tabs-top nav-justified">
                        <li class="nav-item"><a href="#solid-justified-tab1" class="nav-link active" data-toggle="tab"><h5><b>All Documents</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab2" class="nav-link" data-toggle="tab"><h5><b>Pending Review</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab3" class="nav-link" data-toggle="tab"><h5><b>Approved</b></h5></a></li>
                    </ul>

                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="solid-justified-tab1">
                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_InternalAll">
                                <thead>
                                    <tr>
                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Document
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsInternalTotal != null && dsInternalTotal.Tables.Count > 0 && dsInternalTotal.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsInternalTotal.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsInternalTotal.Tables[0].Rows[i]["DocName"].ToString()</td>
                                                <td>
                                                    @if (dsInternalTotal.Tables[0].Rows[i]["DocUploadPath"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsInternalTotal.Tables[0].Rows[i]["DocUploadPath"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }

                                    }

                                </tbody>
                            </table>
                        </div>

                        <div class="tab-pane fade" id="solid-justified-tab2">
                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_InternalReview">
                                <thead>
                                    <tr>
                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Document
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsInternalReview != null && dsInternalReview.Tables.Count > 0 && dsInternalReview.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsInternalReview.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsInternalReview.Tables[0].Rows[i]["DocName"].ToString()</td>
                                                <td>
                                                    @if (dsInternalReview.Tables[0].Rows[i]["DocUploadPath"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsInternalReview.Tables[0].Rows[i]["DocUploadPath"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    }

                                </tbody>
                            </table>
                        </div>


                        <div class="tab-pane fade" id="solid-justified-tab3">
                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_InternalApproved">
                                <thead>

                                    <tr>
                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Document
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsInternalApproved != null && dsInternalApproved.Tables.Count > 0 && dsInternalApproved.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsInternalApproved.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsInternalApproved.Tables[0].Rows[i]["DocName"].ToString()</td>
                                                <td>
                                                    @if (dsInternalApproved.Tables[0].Rows[i]["DocUploadPath"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsInternalApproved.Tables[0].Rows[i]["DocUploadPath"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card d-none" id="hidden card External Documents">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">
                        External Documents
                    </h5>
                    <div class="header-elements">
                        <div class="list-icons">
                            <a class="list-icons-item" data-action="collapse"></a>


                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <ul class="nav nav-tabs nav-tabs-top nav-justified">
                        <li class="nav-item"><a href="#solid-justified-tab4" class="nav-link active" data-toggle="tab"><h5><b>All Documents</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab5" class="nav-link" data-toggle="tab"><h5><b>Pending Renewal</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab6" class="nav-link" data-toggle="tab"><h5><b>Declined</b></h5></a></li>


                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="solid-justified-tab4">
                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_ExternalAll">
                                <thead>

                                    <tr>

                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Document
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsExternalTotal != null && dsExternalTotal.Tables.Count > 0 && dsExternalTotal.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsExternalTotal.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsExternalTotal.Tables[0].Rows[i]["DocName"].ToString()</td>
                                                <td>
                                                    @if (dsExternalTotal.Tables[0].Rows[i]["SoftCopy_Path"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsExternalTotal.Tables[0].Rows[i]["SoftCopy_Path"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>

                        <div class="tab-pane fade" id="solid-justified-tab5">



                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_ExternalRenewal">
                                <thead>

                                    <tr>

                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Document
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsExternalApproved != null && dsExternalApproved.Tables.Count > 0 && dsExternalApproved.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsExternalApproved.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsExternalApproved.Tables[0].Rows[i]["DocName"].ToString()</td>
                                                <td>
                                                    @if (dsExternalApproved.Tables[0].Rows[i]["SoftCopy_Path"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsExternalApproved.Tables[0].Rows[i]["SoftCopy_Path"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }

                                    }

                                </tbody>


                            </table>


                        </div>


                        <div class="tab-pane fade" id="solid-justified-tab6">



                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_ExternalDeclined">
                                <thead>

                                    <tr>

                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Document
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsExternalDeclined != null && dsExternalDeclined.Tables.Count > 0 && dsExternalDeclined.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsExternalDeclined.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsExternalDeclined.Tables[0].Rows[i]["DocName"].ToString()</td>
                                                <td>
                                                    @if (dsExternalDeclined.Tables[0].Rows[i]["SoftCopy_Path"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsExternalDeclined.Tables[0].Rows[i]["SoftCopy_Path"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }

                                    }

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card d-none" id="hidden card Doc Change Requests">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">
                        Document Change Request


                    </h5>
                    <div class="header-elements">
                        <div class="list-icons">
                            <a class="list-icons-item" data-action="collapse"></a>


                        </div>
                    </div>
                </div>


                <div class="card-body">

                    <ul class="nav nav-tabs nav-tabs-top nav-justified">
                        <li class="nav-item"><a href="#solid-justified-tab7" class="nav-link active" data-toggle="tab"><h5><b>All Documents</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab8" class="nav-link" data-toggle="tab"><h5><b>Approved</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab9" class="nav-link" data-toggle="tab"><h5><b>Declined</b></h5></a></li>


                    </ul>

                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="solid-justified-tab7">


                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_DocChangeAll">
                                <thead>
                                    <tr>
                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Document
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsDocChangeTotal != null && dsDocChangeTotal.Tables.Count > 0 && dsDocChangeTotal.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsDocChangeTotal.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsDocChangeTotal.Tables[0].Rows[i]["DocName"].ToString()</td>
                                                <td>
                                                    @if (dsDocChangeTotal.Tables[0].Rows[i]["upload"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsDocChangeTotal.Tables[0].Rows[i]["upload"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>

                        <div class="tab-pane fade" id="solid-justified-tab8">
                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_DocChangeApproved">
                                <thead>

                                    <tr>

                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Document
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsDocChangeApproved != null && dsDocChangeApproved.Tables.Count > 0 && dsDocChangeApproved.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsDocChangeApproved.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsDocChangeApproved.Tables[0].Rows[i]["DocName"].ToString()</td>
                                                <td>
                                                    @if (dsDocChangeApproved.Tables[0].Rows[i]["upload"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsDocChangeApproved.Tables[0].Rows[i]["upload"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>


                        <div class="tab-pane fade" id="solid-justified-tab9">
                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_DocChangeDeclined">
                                <thead>

                                    <tr>

                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Document
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsDocChangeDeclined != null && dsDocChangeDeclined.Tables.Count > 0 && dsDocChangeDeclined.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsDocChangeDeclined.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsDocChangeDeclined.Tables[0].Rows[i]["DocName"].ToString()</td>
                                                <td>
                                                    @if (dsDocChangeDeclined.Tables[0].Rows[i]["upload"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsDocChangeDeclined.Tables[0].Rows[i]["upload"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>


            </div>

            <div class="card d-none" id="hidden card Documents Tracked">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">
                        Documents Tracked



                    </h5>
                    <div class="header-elements">
                        <div class="list-icons">
                            <a class="list-icons-item" data-action="collapse"></a>


                        </div>
                    </div>
                </div>


                <div class="card-body">

                    <ul class="nav nav-tabs nav-tabs-top nav-justified">
                        <li class="nav-item"><a href="#solid-justified-tab10" class="nav-link active" data-toggle="tab"><h5><b>All Documents</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab11" class="nav-link" data-toggle="tab"><h5><b>Pending Renewal</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab12" class="nav-link" data-toggle="tab"><h5><b>Declined</b></h5></a></li>
                    </ul>

                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="solid-justified-tab10">

                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_TrackAll">
                                <thead>

                                    <tr>

                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Document
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsDocTrackTotal != null && dsDocTrackTotal.Tables.Count > 0 && dsDocTrackTotal.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsDocTrackTotal.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsDocTrackTotal.Tables[0].Rows[i]["docname"].ToString()</td>
                                                <td>
                                                    @if (dsDocTrackTotal.Tables[0].Rows[i]["upload"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsDocTrackTotal.Tables[0].Rows[i]["upload"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }

                                    }

                                </tbody>
                            </table>
                        </div>

                        <div class="tab-pane fade" id="solid-justified-tab11">
                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_TrackRenewal">
                                <thead>

                                    <tr>

                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Document
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsDocTrackApproved != null && dsDocTrackApproved.Tables.Count > 0 && dsDocTrackApproved.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsDocTrackApproved.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsDocTrackApproved.Tables[0].Rows[i]["docname"].ToString()</td>
                                                <td>
                                                    @if (dsDocTrackApproved.Tables[0].Rows[i]["upload"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsDocTrackApproved.Tables[0].Rows[i]["upload"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }

                                    }

                                </tbody>


                            </table>





                        </div>


                        <div class="tab-pane fade" id="solid-justified-tab12">



                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_TrackDeclined">
                                <thead>

                                    <tr>

                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Document
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsDocTrackDeclined != null && dsDocTrackDeclined.Tables.Count > 0 && dsDocTrackDeclined.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsDocTrackDeclined.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsDocTrackDeclined.Tables[0].Rows[i]["docname"].ToString()</td>
                                                <td>
                                                    @if (dsDocTrackDeclined.Tables[0].Rows[i]["upload"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsDocTrackDeclined.Tables[0].Rows[i]["upload"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }

                                    }

                                </tbody>


                            </table>









                        </div>




                    </div>
                </div>


            </div>

            <div class="card d-none" id="hidden card Passport Documents">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">
                        Passport Documents
                    </h5>
                    <div class="header-elements">
                        <div class="list-icons">
                            <a class="list-icons-item" data-action="collapse"></a>


                        </div>
                    </div>
                </div>


                <div class="card-body">

                    <ul class="nav nav-tabs nav-tabs-top nav-justified">
                        <li class="nav-item"><a href="#solid-justified-tab13" class="nav-link active" data-toggle="tab"><h5><b>All Documents</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab14" class="nav-link" data-toggle="tab"><h5><b>Pending Renewal</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab15" class="nav-link" data-toggle="tab"><h5><b>Declined</b></h5></a></li>


                    </ul>

                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="solid-justified-tab13">


                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_PassportAll">
                                <thead>

                                    <tr>

                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Employee
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsPassportTotal != null && dsPassportTotal.Tables.Count > 0 && dsPassportTotal.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsPassportTotal.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsPassportTotal.Tables[0].Rows[i]["emp_firstname"].ToString() @dsPassportTotal.Tables[0].Rows[i]["emp_middlename"].ToString() @dsPassportTotal.Tables[0].Rows[i]["emp_lastname"].ToString()</td>

                                                <td>
                                                    @if (dsPassportTotal.Tables[0].Rows[i]["PassportUpload"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsPassportTotal.Tables[0].Rows[i]["PassportUpload"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }

                                    }

                                </tbody>


                            </table>

                        </div>

                        <div class="tab-pane fade" id="solid-justified-tab14">



                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_PassportRenewal">
                                <thead>

                                    <tr>

                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Employee
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsPassportApproved != null && dsPassportApproved.Tables.Count > 0 && dsPassportApproved.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsPassportApproved.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsPassportApproved.Tables[0].Rows[i]["emp_firstname"].ToString() @dsPassportApproved.Tables[0].Rows[i]["emp_middlename"].ToString() @dsPassportApproved.Tables[0].Rows[i]["emp_lastname"].ToString()</td>

                                                <td>
                                                    @if (dsPassportApproved.Tables[0].Rows[i]["PassportUpload"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsPassportApproved.Tables[0].Rows[i]["PassportUpload"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }

                                    }

                                </tbody>


                            </table>

                        </div>


                        <div class="tab-pane fade" id="solid-justified-tab15">



                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_PassportDeclined">
                                <thead>

                                    <tr>

                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Employee
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsPassportDeclined != null && dsPassportDeclined.Tables.Count > 0 && dsPassportDeclined.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsPassportDeclined.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsPassportDeclined.Tables[0].Rows[i]["emp_firstname"].ToString() @dsPassportDeclined.Tables[0].Rows[i]["emp_middlename"].ToString() @dsPassportDeclined.Tables[0].Rows[i]["emp_lastname"].ToString()</td>
                                                <td>
                                                    @if (dsPassportDeclined.Tables[0].Rows[i]["PassportUpload"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsPassportDeclined.Tables[0].Rows[i]["PassportUpload"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }

                                    }

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

            </div>

            <div class="card d-none" id="hidden card Visa Documents">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">
                        Visa Documents
                    </h5>
                    <div class="header-elements">
                        <div class="list-icons">
                            <a class="list-icons-item" data-action="collapse"></a>


                        </div>
                    </div>
                </div>


                <div class="card-body">

                    <ul class="nav nav-tabs nav-tabs-top nav-justified">
                        <li class="nav-item"><a href="#solid-justified-tab16" class="nav-link active" data-toggle="tab"><h5><b>All Documents</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab17" class="nav-link" data-toggle="tab"><h5><b>Pending Renewal</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab18" class="nav-link" data-toggle="tab"><h5><b>Declined</b></h5></a></li>


                    </ul>

                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="solid-justified-tab16">


                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_VisaAll">
                                <thead>

                                    <tr>

                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Employee
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsVisaTotal != null && dsVisaTotal.Tables.Count > 0 && dsVisaTotal.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsVisaTotal.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsVisaTotal.Tables[0].Rows[i]["emp_firstname"].ToString() @dsVisaTotal.Tables[0].Rows[i]["emp_middlename"].ToString() @dsVisaTotal.Tables[0].Rows[i]["emp_lastname"].ToString()</td>
                                                <td>
                                                    @if (dsVisaTotal.Tables[0].Rows[i]["Visa_upload"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsVisaTotal.Tables[0].Rows[i]["Visa_upload"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }

                                    }

                                </tbody>


                            </table>




                        </div>

                        <div class="tab-pane fade" id="solid-justified-tab17">
                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_VisaRenewal">
                                <thead>
                                    <tr>
                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Employee
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsVisaApproved != null && dsVisaApproved.Tables.Count > 0 && dsVisaApproved.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsVisaApproved.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsVisaApproved.Tables[0].Rows[i]["emp_firstname"].ToString() @dsVisaApproved.Tables[0].Rows[i]["emp_middlename"].ToString() @dsVisaApproved.Tables[0].Rows[i]["emp_lastname"].ToString()</td>
                                                <td>
                                                    @if (dsVisaApproved.Tables[0].Rows[i]["Visa_upload"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsVisaApproved.Tables[0].Rows[i]["Visa_upload"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>


                        <div class="tab-pane fade" id="solid-justified-tab18">
                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_VisaDeclined">
                                <thead>
                                    <tr>
                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Employee
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsVisaDeclined != null && dsVisaDeclined.Tables.Count > 0 && dsVisaDeclined.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsVisaDeclined.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsVisaDeclined.Tables[0].Rows[i]["emp_firstname"].ToString() @dsVisaDeclined.Tables[0].Rows[i]["emp_middlename"].ToString() @dsVisaDeclined.Tables[0].Rows[i]["emp_lastname"].ToString()</td>
                                                <td>
                                                    @if (dsVisaDeclined.Tables[0].Rows[i]["Visa_upload"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsVisaDeclined.Tables[0].Rows[i]["Visa_upload"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    }

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>


            </div>

            <div class="card d-none" id="hidden card Employee Insurance">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">
                        Employee Insurance
                    </h5>
                    <div class="header-elements">
                        <div class="list-icons">
                            <a class="list-icons-item" data-action="collapse"></a>


                        </div>
                    </div>
                </div>


                <div class="card-body">

                    <ul class="nav nav-tabs nav-tabs-top nav-justified">
                        <li class="nav-item"><a href="#solid-justified-tab19" class="nav-link active" data-toggle="tab"><h5><b>All Documents</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab20" class="nav-link" data-toggle="tab"><h5><b>Pending Renewal</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab21" class="nav-link" data-toggle="tab"><h5><b>Declined</b></h5></a></li>


                    </ul>

                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="solid-justified-tab19">


                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_InsuranceAll">
                                <thead>

                                    <tr>

                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Employee
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsInsuranceTotal != null && dsInsuranceTotal.Tables.Count > 0 && dsInsuranceTotal.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsInsuranceTotal.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsInsuranceTotal.Tables[0].Rows[i]["emp_firstname"].ToString() @dsInsuranceTotal.Tables[0].Rows[i]["emp_middlename"].ToString() @dsInsuranceTotal.Tables[0].Rows[i]["emp_lastname"].ToString()</td>
                                                <td>
                                                    @if (dsInsuranceTotal.Tables[0].Rows[i]["HealthCardUpload"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsInsuranceTotal.Tables[0].Rows[i]["HealthCardUpload"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }

                                    }

                                </tbody>


                            </table>




                        </div>

                        <div class="tab-pane fade" id="solid-justified-tab20">


                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_InsuranceRenewal">
                                <thead>

                                    <tr>

                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Employee
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsInsuranceApproved != null && dsInsuranceApproved.Tables.Count > 0 && dsInsuranceApproved.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsInsuranceApproved.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsInsuranceApproved.Tables[0].Rows[i]["emp_firstname"].ToString() @dsInsuranceApproved.Tables[0].Rows[i]["emp_middlename"].ToString() @dsInsuranceApproved.Tables[0].Rows[i]["emp_lastname"].ToString()</td>
                                                <td>
                                                    @if (dsInsuranceApproved.Tables[0].Rows[i]["HealthCardUpload"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsInsuranceApproved.Tables[0].Rows[i]["HealthCardUpload"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }

                                    }

                                </tbody>


                            </table>



                        </div>


                        <div class="tab-pane fade" id="solid-justified-tab21">



                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_InsuranceDeclined">
                                <thead>

                                    <tr>

                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Employee
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsInsurcaneDeclined != null && dsInsurcaneDeclined.Tables.Count > 0 && dsInsurcaneDeclined.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsInsurcaneDeclined.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@dsInsurcaneDeclined.Tables[0].Rows[i]["emp_firstname"].ToString() @dsInsurcaneDeclined.Tables[0].Rows[i]["emp_middlename"].ToString() @dsInsurcaneDeclined.Tables[0].Rows[i]["emp_lastname"].ToString()</td>
                                                <td>
                                                    @if (dsInsurcaneDeclined.Tables[0].Rows[i]["HealthCardUpload"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsInsurcaneDeclined.Tables[0].Rows[i]["HealthCardUpload"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }

                                    }

                                </tbody>


                            </table>








                        </div>




                    </div>
                </div>
            </div>

            <div class="card d-none" id="hidden card Peformance Evaluation">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">
                        Peformance Evaluation
                    </h5>
                    <div class="header-elements">
                        <div class="list-icons">
                            <a class="list-icons-item" data-action="collapse"></a>

                        </div>
                    </div>
                </div>
                <div class="card-body">

                    <ul class="nav nav-tabs nav-tabs-top nav-justified">
                        <li class="nav-item"><a href="#solid-justified-tab22" class="nav-link active" data-toggle="tab"><h5><b>All Documents</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab23" class="nav-link" data-toggle="tab"><h5><b>Pending Review</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab24" class="nav-link" data-toggle="tab"><h5><b>Declined</b></h5></a></li>

                    </ul>

                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="solid-justified-tab22">

                            <table class="table table-hover"></table><table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_PerformanceAll">
                                <thead>

                                    <tr>

                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Employee
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsPerformanceTotal != null && dsPerformanceTotal.Tables.Count > 0 && dsPerformanceTotal.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsPerformanceTotal.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@Obj.GetEmpHrNameById(dsPerformanceTotal.Tables[0].Rows[i]["emp_id"].ToString())</td>
                                                <td>
                                                    @if (dsPerformanceTotal.Tables[0].Rows[i]["DocUploadPath"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsPerformanceTotal.Tables[0].Rows[i]["DocUploadPath"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }

                                    }

                                </tbody>


                            </table>

                        </div>

                        <div class="tab-pane fade" id="solid-justified-tab23">



                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_PerformanceReview">
                                <thead>

                                    <tr>

                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Employee
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsPerformanceApproved != null && dsPerformanceApproved.Tables.Count > 0 && dsPerformanceApproved.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsPerformanceApproved.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@Obj.GetEmpHrNameById(dsPerformanceApproved.Tables[0].Rows[i]["emp_id"].ToString())</td>
                                                <td>
                                                    @if (dsPerformanceApproved.Tables[0].Rows[i]["DocUploadPath"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsPerformanceApproved.Tables[0].Rows[i]["DocUploadPath"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }

                                    }

                                </tbody>


                            </table>


                        </div>


                        <div class="tab-pane fade" id="solid-justified-tab24">



                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_PerformanceDecline">
                                <thead>

                                    <tr>

                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Name of the Employee
                                        </th>
                                        <th>
                                            Document
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsPerformanceDeclined != null && dsPerformanceDeclined.Tables.Count > 0 && dsPerformanceDeclined.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsPerformanceDeclined.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>@j</td>
                                                <td>@Obj.GetEmpHrNameById(dsPerformanceDeclined.Tables[0].Rows[i]["emp_id"].ToString())</td>
                                                <td>
                                                    @if (dsPerformanceDeclined.Tables[0].Rows[i]["DocUploadPath"].ToString() != "")
                                                    {
                                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsPerformanceDeclined.Tables[0].Rows[i]["DocUploadPath"].ToString() })' target="_blank" class="text-orange">Preview</a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Document Not Uploaded</span>
                                                    }
                                                </td>
                                            </tr>
                                        }

                                    }

                                </tbody>


                            </table>





                        </div>




                    </div>
                </div>


            </div>

            <div class="card d-none" id="hidden card MOC">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">
                        Management Of Change(MOC)
                    </h5>
                    <div class="header-elements">
                        <div class="list-icons">
                            <a class="list-icons-item" data-action="collapse"></a>


                        </div>
                    </div>
                </div>


                <div class="card-body">

                    <ul class="nav nav-tabs nav-tabs-top nav-justified">
                        <li class="nav-item"><a href="#solid-justified-tab25" class="nav-link active" data-toggle="tab"><h5><b>All Documents</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab26" class="nav-link" data-toggle="tab"><h5><b>Pending Review</b></h5></a></li>
                        <li class="nav-item"><a href="#solid-justified-tab27" class="nav-link" data-toggle="tab"><h5><b>Declined</b></h5></a></li>


                    </ul>

                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="solid-justified-tab25">


                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_MocAll">
                                <thead>

                                    <tr>

                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Change Requested By
                                        </th>
                                        <th>
                                            Change type
                                        </th>

                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsMOCTotal != null && dsMOCTotal.Tables.Count > 0 && dsMOCTotal.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsMOCTotal.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>

                                                <td>

                                                    @Html.ActionLink(j.ToString(), "ChangeManagementDetails", "ChangeManagement", new { IdMgmt = dsMOCTotal.Tables[0].Rows[i]["IdMgmt"].ToString() }, new { id = dsMOCTotal.Tables[0].Rows[i]["IdMgmt"].ToString(), onclick = "HyperLinkProgressIconFunction()" })
                                                </td>
                                                <td>@Obj.GetEmpHrNameById(dsMOCTotal.Tables[0].Rows[i]["ChangeRequestedBy"].ToString())</td>
                                                <td>@dsMOCTotal.Tables[0].Rows[i]["ChangeType"].ToString()</td>

                                            </tr>
                                        }

                                    }

                                </tbody>


                            </table>




                        </div>

                        <div class="tab-pane fade" id="solid-justified-tab26">



                            <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_MocReview">
                                <thead>

                                    <tr>

                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Change Requested By
                                        </th>
                                        <th>
                                            Change type
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsMOCApproved != null && dsMOCApproved.Tables.Count > 0 && dsMOCApproved.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsMOCApproved.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>

                                                    @Html.ActionLink(j.ToString(), "ChangeManagementDetails", "ChangeManagement", new { IdMgmt = dsMOCApproved.Tables[0].Rows[i]["IdMgmt"].ToString() }, new { id = dsMOCApproved.Tables[0].Rows[i]["IdMgmt"].ToString(), onclick = "HyperLinkProgressIconFunction()" })
                                                </td>
                                                <td>@Obj.GetEmpHrNameById(dsMOCApproved.Tables[0].Rows[i]["ChangeRequestedBy"].ToString())</td>
                                                <td>@dsMOCApproved.Tables[0].Rows[i]["ChangeType"].ToString()</td>
                                            </tr>
                                        }

                                    }

                                </tbody>


                            </table>




                        </div>


                        <div class="tab-pane fade" id="solid-justified-tab27">



                            <table class="table table-hover"></table> <table class="table table-bordered table-striped table-hover datatable-responsive" id="Datatable_MocDecline">
                                <thead>

                                    <tr>

                                        <th>
                                            Sl No
                                        </th>
                                        <th>
                                            Change Requested By
                                        </th>

                                        <th>
                                            Change type
                                        </th>

                                    </tr>
                                </thead>
                                <tbody>

                                    @if (dsMOCDeclined != null && dsMOCDeclined.Tables.Count > 0 && dsMOCDeclined.Tables[0].Rows.Count > 0)
                                    {
                                        int j = 0;

                                        for (int i = 0; i < dsMOCDeclined.Tables[0].Rows.Count; i++)
                                        {
                                            j++;
                                            <tr>
                                                <td>

                                                    @Html.ActionLink(j.ToString(), "ChangeManagementDetails", "ChangeManagement", new { IdMgmt = dsMOCDeclined.Tables[0].Rows[i]["IdMgmt"].ToString() }, new { id = dsMOCDeclined.Tables[0].Rows[i]["IdMgmt"].ToString(), onclick = "HyperLinkProgressIconFunction()" })
                                                </td>
                                                <td>@Obj.GetEmpHrNameById(dsMOCDeclined.Tables[0].Rows[i]["ChangeRequestedBy"].ToString())</td>
                                                <td>@dsMOCDeclined.Tables[0].Rows[i]["ChangeType"].ToString()</td>

                                            </tr>
                                        }

                                    }

                                </tbody>


                            </table>







                        </div>




                    </div>
                </div>


            </div>

        </div>
    </div>

<div class="navbar navbar-expand-lg navbar-light navbar-component rounded d-none" id="folder_view_filter">
    <div class="text-center d-lg-none w-100">
        <button type="button" class="navbar-toggler dropdown-toggle" data-toggle="collapse" data-target="#navbar-filter">
            <i class="icon-unfold mr-2"></i>
            Filters
        </button>
    </div>

    <div class="navbar-collapse collapse" id="navbar-filter">
        <span class="navbar-text mr-3 font-weight-semibold font-size-lg">
            Filter:
        </span>

        <ul class="navbar-nav flex-wrap">
            <li class="nav-item">
                <div class="navbar-nav-link active" id="Filter_all">
                    <i class="icon-folder-open"></i>
                    <span class="ml-2">All Documents</span>
                </div>
            </li>
            <li class="nav-item">
                <div class="navbar-nav-link" id="Filter_cross">
                    <i class="icon-folder-remove"></i>
                    <span class="ml-2">Declined/Not Reviewed/Obselete</span>
                </div>
            </li>
            <li class="nav-item">
                <div class="navbar-nav-link" id="Filter_tick">
                    <i class="icon-folder-check"></i>
                    <span class="ml-2">Approved</span>
                </div>
            </li>
        </ul>
    </div>
</div>


<div class="card d-none" id="folder_view">

    <div class="card-header header-elements-inline">
        <h6 class="card-title">Browse Documents</h6>
        <div class="list-icons">
            <a class="list-icons-item" data-action="collapse"></a>

        </div>
    </div>

    <div class="card-body">
        <div class="row">
            <div class="col-md-4">
                <div class="mb-3">
                    <a href="#internal-folder" class="text-default" data-toggle="collapse">
                        <h6 class="font-weight-semibold mt-2">
                            <i class="icon-folder6 mr-2"></i> Internal System Documents <span class="ml-1" id="internall_count">(@dsInternalTotal.Tables[0].Rows.Count)</span> <span class="ml-1 d-none" id="internalapprove_count">(@dsInternalApproved.Tables[0].Rows.Count)</span> <span class="ml-1 d-none" id="internalreview_count"> (@dsInternalReview.Tables[0].Rows.Count)</span>
                            <i class="icon-circle-down2 float-right"></i>
                        </h6>
                    </a>
                    <div class="dropdown-divider mb-2"></div>
                    <div class="collapse show" id="internal-folder">
                        <div id="folder_InternalAll" class="is-visible animated fadeIn   ">
                            @if (dsInternalTotal != null && dsInternalTotal.Tables.Count > 0 && dsInternalTotal.Tables[0].Rows.Count > 0)
                            {
                                for (int i = 0; i < dsInternalTotal.Tables[0].Rows.Count; i++)
                                {
                                    <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsInternalTotal.Tables[0].Rows[i]["DocUploadPath"].ToString() })' target="_blank" class="dropdown-item">
                                        <i class="icon-file-text2"></i> @dsInternalTotal.Tables[0].Rows[i]["DocName"].ToString() <span class="badge badge-primary ml-auto">All</span>
                                    </a>
                                }

                            }
                        </div>

                        <div id="folder_InternalClosed" class="d-none animated fadeIn   ">
                                                       
                            @if (dsInternalReview != null && dsInternalReview.Tables.Count > 0 && dsInternalReview.Tables[0].Rows.Count > 0)
                            {


                                for (int i = 0; i < dsInternalReview.Tables[0].Rows.Count; i++)
                                {
                                    <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsInternalReview.Tables[0].Rows[i]["DocUploadPath"].ToString() })' target="_blank" class="dropdown-item">
                                        <i class="icon-file-text2"></i> @dsInternalReview.Tables[0].Rows[i]["DocName"].ToString() <span class="badge badge-danger ml-auto">Review</span>
                                    </a>
                                }

                            }
                        </div>

                        <div id="folder_InternalApproved" class="d-none animated fadeIn   ">

                            @if (dsInternalApproved != null && dsInternalApproved.Tables.Count > 0 && dsInternalApproved.Tables[0].Rows.Count > 0)
                            {


                                for (int i = 0; i < dsInternalApproved.Tables[0].Rows.Count; i++)
                                {
                                    <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsInternalApproved.Tables[0].Rows[i]["DocUploadPath"].ToString() })' target="_blank" class="dropdown-item">
                                        <i class="icon-file-text2"></i> @dsInternalApproved.Tables[0].Rows[i]["DocName"].ToString() <span class="badge badge-success ml-auto">Approved</span>
                                    </a>
                                }

                            }


                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="mb-3">
                    <a href="#external-folder" class="text-default" data-toggle="collapse">
                        <h6 class="font-weight-semibold mt-2">
                            <i class="icon-folder6 mr-2"></i>  External Documents<span class="ml-1" id="externalall_count">(@dsExternalTotal.Tables[0].Rows.Count)</span> <span class="ml-1 d-none" id="externalrenew_count">(@(dsExternalApproved.Tables[0].Rows.Count + dsExternalDeclined.Tables[0].Rows.Count))</span>  
                            <i class="icon-circle-down2 float-right"></i>

                        </h6>
                    </a>
                    <div class="dropdown-divider mb-2"></div>
                    <div class="collapse show" id="external-folder">
                        <div id="folder_ExternalAll" class="is-visible animated fadeIn   ">


                            @if (dsExternalTotal != null && dsExternalTotal.Tables.Count > 0 && dsExternalTotal.Tables[0].Rows.Count > 0)
                            {

                                for (int i = 0; i < dsExternalTotal.Tables[0].Rows.Count; i++)

                                {
                                    <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsExternalTotal.Tables[0].Rows[i]["SoftCopy_Path"].ToString() })' target="_blank" class="dropdown-item">
                                        <i class="icon-file-text2"></i> @dsExternalTotal.Tables[0].Rows[i]["DocName"].ToString() <span class="badge badge-primary ml-auto">All</span>
                                    </a>
                                }

                            }
                        </div>

                        <div id="folder_ExternalRenew" class="d-none animated fadeIn   ">



                            @if (dsExternalApproved != null && dsExternalApproved.Tables.Count > 0 && dsExternalApproved.Tables[0].Rows.Count > 0)
                            {


                                for (int i = 0; i < dsExternalApproved.Tables[0].Rows.Count; i++)
                                {
                                    <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsExternalApproved.Tables[0].Rows[i]["SoftCopy_Path"].ToString() })' target="_blank" class="dropdown-item">
                                        <i class="icon-file-text2"></i> @dsExternalApproved.Tables[0].Rows[i]["DocName"].ToString() <span class="badge badge-danger ml-auto">Review</span>
                                    </a>
                                }

                            }
                        </div>

                        <div id="folder_ExternalDeclined" class="d-none animated fadeIn   ">

                            @if (dsExternalDeclined != null && dsExternalDeclined.Tables.Count > 0 && dsExternalDeclined.Tables[0].Rows.Count > 0)
                            {


                                for (int i = 0; i < dsExternalDeclined.Tables[0].Rows.Count; i++)
                                {
                                    <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsExternalDeclined.Tables[0].Rows[i]["SoftCopy_Path"].ToString() })' target="_blank" class="dropdown-item">
                                        <i class="icon-file-text2"></i> @dsExternalDeclined.Tables[0].Rows[i]["DocName"].ToString() <span class="badge bg-indigo-300 ml-auto">Declined</span>
                                    </a>
                                }

                            }


                        </div>


                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="mb-3">
                    <a href="#change-folder" class="text-default" data-toggle="collapse">
                        <h6 class="font-weight-semibold mt-2">
                            <i class="icon-folder6 mr-2"></i> Document Change Requests <span class="ml-1" id="changeall_count">(@dsDocChangeTotal.Tables[0].Rows.Count)</span> <span class="ml-1 d-none" id="changeapprove_count">(@dsDocChangeApproved.Tables[0].Rows.Count)</span> <span class="ml-1 d-none" id="changedecline_count">(@dsDocChangeDeclined.Tables[0].Rows.Count)</span>
                            <i class="icon-circle-down2 float-right"></i>

                        </h6>
                    </a>
                    <div class="dropdown-divider mb-2"></div>
                    <div class="collapse show" id="change-folder">
                        <div id="folder_ChangeAll" class="is-visible animated fadeIn   ">


                            @if (dsDocChangeTotal != null && dsDocChangeTotal.Tables.Count > 0 && dsDocChangeTotal.Tables[0].Rows.Count > 0)
                            {


                                for (int i = 0; i < dsDocChangeTotal.Tables[0].Rows.Count; i++)
                                {
                                    <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsDocChangeTotal.Tables[0].Rows[i]["upload"].ToString() })' target="_blank" class="dropdown-item">
                                        <i class="icon-file-text2"></i> @dsDocChangeTotal.Tables[0].Rows[i]["DocName"].ToString() <span class="badge badge-primary ml-auto">All</span>
                                    </a>
                                }

                            }





                        </div>

                        <div id="folder_ChangeApproved" class="d-none animated fadeIn   ">



                            @if (dsDocChangeApproved != null && dsDocChangeApproved.Tables.Count > 0 && dsDocChangeApproved.Tables[0].Rows.Count > 0)
                            {


                                for (int i = 0; i < dsDocChangeApproved.Tables[0].Rows.Count; i++)
                                {
                                    <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsDocChangeApproved.Tables[0].Rows[i]["upload"].ToString() })' target="_blank" class="dropdown-item">
                                        <i class="icon-file-text2"></i> @dsDocChangeApproved.Tables[0].Rows[i]["DocName"].ToString() <span class="badge badge-success ml-auto">Approved</span>
                                    </a>
                                }

                            }
                        </div>

                        <div id="folder_ChangeDeclined" class="d-none animated fadeIn   ">

                            @if (dsDocChangeDeclined != null && dsDocChangeDeclined.Tables.Count > 0 && dsDocChangeDeclined.Tables[0].Rows.Count > 0)
                            {


                                for (int i = 0; i < dsDocChangeDeclined.Tables[0].Rows.Count; i++)
                                {
                                    <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsDocChangeDeclined.Tables[0].Rows[i]["upload"].ToString() })' target="_blank" class="dropdown-item">
                                        <i class="icon-file-text2"></i> @dsDocChangeDeclined.Tables[0].Rows[i]["DocName"].ToString() <span class="badge badge-danger ml-auto">Declined</span>
                                    </a>
                                }

                            }


                        </div>

                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="mb-3">
                    <a href="#track-folder" class="text-default" data-toggle="collapse">
                        <h6 class="font-weight-semibold mt-2">
                            <i class="icon-folder6 mr-2"></i> Documents Tracked<span class="ml-1" id="trackall_count">(@dsDocTrackTotal.Tables[0].Rows.Count)</span> <span class="ml-1 d-none" id="trackrenew_count">(@(dsDocTrackApproved.Tables[0].Rows.Count+dsDocTrackDeclined.Tables[0].Rows.Count))</span>
                            <i class="icon-circle-down2 float-right"></i>

                        </h6>
                    </a>
                    <div class="dropdown-divider mb-2"></div>
                    <div class="collapse show" id="track-folder">
                        <div id="folder_TrackAll" class="is-visible animated fadeIn   ">


                            @if (dsDocTrackTotal != null && dsDocTrackTotal.Tables.Count > 0 && dsDocTrackTotal.Tables[0].Rows.Count > 0)
                            {


                                for (int i = 0; i < dsDocTrackTotal.Tables[0].Rows.Count; i++)
                                {
                                    <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsDocTrackTotal.Tables[0].Rows[i]["upload"].ToString() })' target="_blank" class="dropdown-item">
                                        <i class="icon-file-text2"></i> @dsDocTrackTotal.Tables[0].Rows[i]["docname"].ToString() <span class="badge badge-primary ml-auto">All</span>
                                    </a>
                                }

                            }





                        </div>

                        <div id="folder_TrackRenew" class="d-none animated fadeIn   ">



                            @if (dsDocTrackApproved != null && dsDocTrackApproved.Tables.Count > 0 && dsDocTrackApproved.Tables[0].Rows.Count > 0)
                            {


                                for (int i = 0; i < dsDocTrackApproved.Tables[0].Rows.Count; i++)
                                {
                                    <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsDocTrackApproved.Tables[0].Rows[i]["upload"].ToString() })' target="_blank" class="dropdown-item">
                                        <i class="icon-file-text2"></i> @dsDocTrackApproved.Tables[0].Rows[i]["docname"].ToString() <span class="badge badge-danger ml-auto">Renewal</span>
                                    </a>
                                }

                            }
                        </div>

                        <div id="folder_TrackDeclined" class="d-none animated fadeIn   ">

                            @if (dsDocTrackDeclined != null && dsDocTrackDeclined.Tables.Count > 0 && dsDocTrackDeclined.Tables[0].Rows.Count > 0)
                            {


                                for (int i = 0; i < dsDocTrackDeclined.Tables[0].Rows.Count; i++)
                                {
                                    <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsDocChangeDeclined.Tables[0].Rows[i]["upload"].ToString() })' target="_blank" class="dropdown-item">
                                        <i class="icon-file-text2"></i> @dsDocTrackDeclined.Tables[0].Rows[i]["docname"].ToString() <span class="badge bg-indigo-300 ml-auto">Declined</span>
                                    </a>
                                }

                            }



                        </div>
                    </div>
                </div>
            </div>

                <div class="col-md-4">
                    <div class="mb-3">
                        <a href="#passport-folder" class="text-default" data-toggle="collapse">
                            <h6 class="font-weight-semibold mt-2">
                                <i class="icon-folder6 mr-2"></i> Passport Documents<span class="ml-1" id="passportall_count">(@dsPassportTotal.Tables[0].Rows.Count)</span> <span class="ml-1 d-none" id="passportrenew_count">(@(dsPassportApproved.Tables[0].Rows.Count+dsPassportDeclined.Tables[0].Rows.Count))</span>
                                <i class="icon-circle-down2 float-right"></i>

                            </h6>
                        </a>
                        <div class="dropdown-divider mb-2"></div>
                        <div class="collapse show" id="passport-folder">
                         <div id="folder_PassportAll" class="is-visible animated fadeIn   ">


                            @if (dsPassportTotal != null && dsPassportTotal.Tables.Count > 0 && dsPassportTotal.Tables[0].Rows.Count > 0)
                            {


                                for (int i = 0; i < dsPassportTotal.Tables[0].Rows.Count; i++)
                                {
                             <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsPassportTotal.Tables[0].Rows[i]["PassportUpload"].ToString() })' target="_blank" class="dropdown-item">
                                 <i class="icon-person"></i> @dsPassportTotal.Tables[0].Rows[i]["emp_firstname"].ToString() @dsPassportTotal.Tables[0].Rows[i]["emp_middlename"].ToString() @dsPassportTotal.Tables[0].Rows[i]["emp_lastname"].ToString() <span class="badge badge-primary ml-auto">All</span>
                             </a>
                                }

                            }





                        </div>

                        <div id="folder_PassportRenew" class="d-none animated fadeIn   ">



                            @if (dsPassportApproved != null && dsPassportApproved.Tables.Count > 0 && dsPassportApproved.Tables[0].Rows.Count > 0)
                            {


                                for (int i = 0; i < dsPassportApproved.Tables[0].Rows.Count; i++)
                                {
                            <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsPassportApproved.Tables[0].Rows[i]["PassportUpload"].ToString() })' target="_blank" class="dropdown-item">
                                <i class="icon-person"></i> @dsPassportApproved.Tables[0].Rows[i]["emp_firstname"].ToString() @dsPassportApproved.Tables[0].Rows[i]["emp_middlename"].ToString() @dsPassportApproved.Tables[0].Rows[i]["emp_lastname"].ToString() <span class="badge badge-danger ml-auto">Renewal</span>
                            </a>
                                }

                            }
                        </div>

                        <div id="folder_PassportDeclined" class="d-none animated fadeIn   ">

                            @if (dsPassportDeclined != null && dsPassportDeclined.Tables.Count > 0 && dsPassportDeclined.Tables[0].Rows.Count > 0)
                            {


                                for (int i = 0; i < dsPassportDeclined.Tables[0].Rows.Count; i++)
                                {
                            <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsPassportDeclined.Tables[0].Rows[i]["PassportUpload"].ToString() })' target="_blank" class="dropdown-item">
                                <i class="icon-person"></i> @dsPassportDeclined.Tables[0].Rows[i]["emp_firstname"].ToString() @dsPassportDeclined.Tables[0].Rows[i]["emp_middlename"].ToString() @dsPassportDeclined.Tables[0].Rows[i]["emp_lastname"].ToString() <span class="badge bg-indigo-300 ml-auto">Declined</span>
                            </a>
                                }

                            }



                        </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="mb-3">
                        <a href="#visa-folder" class="text-default" data-toggle="collapse">
                            <h6 class="font-weight-semibold mt-2">
                                <i class="icon-folder6 mr-2"></i>Visa Documents <span class="ml-1" id="visaall_count">(@dsVisaTotal.Tables[0].Rows.Count)</span> <span class="ml-1 d-none" id="visarenew_count">(@(dsVisaApproved.Tables[0].Rows.Count+dsVisaDeclined.Tables[0].Rows.Count))</span>
                                <i class="icon-circle-down2 float-right"></i>

                            </h6>
                        </a>
                        <div class="dropdown-divider mb-2"></div>
                        <div class="collapse show" id="visa-folder">
                             <div id="folder_VisaAll" class="is-visible animated fadeIn   ">


                            @if (dsVisaTotal != null && dsVisaTotal.Tables.Count > 0 && dsVisaTotal.Tables[0].Rows.Count > 0)
                            {


                                for (int i = 0; i < dsVisaTotal.Tables[0].Rows.Count; i++)
                                {
                             <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsVisaTotal.Tables[0].Rows[i]["Visa_upload"].ToString() })' target="_blank" class="dropdown-item">
                                 <i class="icon-person"></i> @dsVisaTotal.Tables[0].Rows[i]["emp_firstname"].ToString() @dsVisaTotal.Tables[0].Rows[i]["emp_middlename"].ToString() @dsVisaTotal.Tables[0].Rows[i]["emp_lastname"].ToString() <span class="badge badge-primary ml-auto">All</span>
                             </a>
                                }

                            }





                        </div>

                        <div id="folder_VisaRenew" class="d-none animated fadeIn   ">



                            @if (dsVisaApproved != null && dsVisaApproved.Tables.Count > 0 && dsVisaApproved.Tables[0].Rows.Count > 0)
                            {


                                for (int i = 0; i < dsVisaApproved.Tables[0].Rows.Count; i++)
                                {
                            <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsVisaApproved.Tables[0].Rows[i]["Visa_upload"].ToString() })' target="_blank" class="dropdown-item">
                                <i class="icon-person"></i> @dsVisaApproved.Tables[0].Rows[i]["emp_firstname"].ToString() @dsVisaApproved.Tables[0].Rows[i]["emp_middlename"].ToString() @dsVisaApproved.Tables[0].Rows[i]["emp_lastname"].ToString() <span class="badge badge-danger ml-auto">Renewal</span>
                            </a>
                                }

                            }
                        </div>

                        <div id="folder_VisaDeclined" class="d-none animated fadeIn   ">

                            @if (dsVisaDeclined != null && dsVisaDeclined.Tables.Count > 0 && dsVisaDeclined.Tables[0].Rows.Count > 0)
                            {


                                for (int i = 0; i < dsVisaDeclined.Tables[0].Rows.Count; i++)
                                {
                                    <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsVisaDeclined.Tables[0].Rows[i]["Visa_upload"].ToString() })' target="_blank" class="dropdown-item">
                                        <i class="icon-person"></i> @dsVisaDeclined.Tables[0].Rows[i]["emp_firstname"].ToString() @dsVisaDeclined.Tables[0].Rows[i]["emp_middlename"].ToString() @dsVisaDeclined.Tables[0].Rows[i]["emp_lastname"].ToString() <span class="badge bg-indigo-300 ml-auto">Declined</span>
                                    </a>
                                }

                            }



                        </div>

                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="mb-3">
                        <a href="#insurance-folder" class="text-default" data-toggle="collapse">
                            <h6 class="font-weight-semibold mt-2">
                                <i class="icon-folder6 mr-2"></i> Employee Insurance<span class="ml-1" id="insuranceall_count">(@dsInsuranceTotal.Tables[0].Rows.Count)</span> <span class="ml-1 d-none" id="insurancerenew_count">(@(dsInsuranceApproved.Tables[0].Rows.Count+dsInsurcaneDeclined.Tables[0].Rows.Count))</span>
                                <i class="icon-circle-down2 float-right"></i>

                            </h6>
                        </a>
                        <div class="dropdown-divider mb-2"></div>

                        <div class="collapse show" id="insurance-folder">
                            <div id="folder_InsuranceAll" class="is-visible animated fadeIn   ">


                                @if (dsInsuranceTotal != null && dsInsuranceTotal.Tables.Count > 0 && dsInsuranceTotal.Tables[0].Rows.Count > 0)
                                {


                                    for (int i = 0; i < dsInsuranceTotal.Tables[0].Rows.Count; i++)
                                    {
                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsInsuranceTotal.Tables[0].Rows[i]["HealthCardUpload"].ToString() })' target="_blank" class="dropdown-item">
                                            <i class="icon-person"></i> @dsInsuranceTotal.Tables[0].Rows[i]["emp_firstname"].ToString() @dsInsuranceTotal.Tables[0].Rows[i]["emp_middlename"].ToString() @dsInsuranceTotal.Tables[0].Rows[i]["emp_lastname"].ToString() <span class="badge badge-primary ml-auto">All</span>
                                        </a>
                                    }

                                }





                            </div>

                            <div id="folder_InsuranceRenew" class="d-none animated fadeIn   ">



                                @if (dsInsuranceApproved != null && dsInsuranceApproved.Tables.Count > 0 && dsInsuranceApproved.Tables[0].Rows.Count > 0)
                                {


                                    for (int i = 0; i < dsInsuranceApproved.Tables[0].Rows.Count; i++)
                                    {
                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsInsuranceApproved.Tables[0].Rows[i]["HealthCardUpload"].ToString() })' target="_blank" class="dropdown-item">
                                            <i class="icon-person"></i> @dsInsuranceApproved.Tables[0].Rows[i]["emp_firstname"].ToString() @dsInsuranceApproved.Tables[0].Rows[i]["emp_middlename"].ToString() @dsInsuranceApproved.Tables[0].Rows[i]["emp_lastname"].ToString() <span class="badge badge-danger ml-auto">Renewal</span>
                                        </a>
                                    }

                                }
                            </div>

                            <div id="folder_InsuranceDeclined" class="d-none animated fadeIn   ">

                                @if (dsInsurcaneDeclined != null && dsInsurcaneDeclined.Tables.Count > 0 && dsInsurcaneDeclined.Tables[0].Rows.Count > 0)
                                {


                                    for (int i = 0; i < dsInsurcaneDeclined.Tables[0].Rows.Count; i++)
                                    {
                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsInsurcaneDeclined.Tables[0].Rows[i]["HealthCardUpload"].ToString() })' target="_blank" class="dropdown-item">
                                            <i class="icon-person"></i> @dsInsurcaneDeclined.Tables[0].Rows[i]["emp_firstname"].ToString() @dsInsurcaneDeclined.Tables[0].Rows[i]["emp_middlename"].ToString() @dsInsurcaneDeclined.Tables[0].Rows[i]["emp_lastname"].ToString() <span class="badge bg-indigo-300 ml-auto">Declined</span>
                                        </a>
                                    }

                                }



                            </div>

                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="mb-3">
                        <a href="#Evaluation-folder" class="text-default" data-toggle="collapse">
                            <h6 class="font-weight-semibold mt-2">
                                <i class="icon-folder6 mr-2"></i> Peformance Evaluation<span class="ml-1" id="evaluationall_count">(@dsPerformanceTotal.Tables[0].Rows.Count)</span> <span class="ml-1 d-none" id="evaluationrenew_count">(@(dsPerformanceApproved.Tables[0].Rows.Count+dsPerformanceDeclined.Tables[0].Rows.Count))</span>
                                <i class="icon-circle-down2 float-right"></i>

                            </h6>
                        </a>
                        <div class="dropdown-divider mb-2"></div>
                        <div class="collapse show" id="Evaluation-folder">
                            <div id="folder_EvaluationAll" class="is-visible animated fadeIn   ">


                                @if (dsPerformanceTotal != null && dsPerformanceTotal.Tables.Count > 0 && dsPerformanceTotal.Tables[0].Rows.Count > 0)
                                {


                                    for (int i = 0; i < dsPerformanceTotal.Tables[0].Rows.Count; i++)
                                    {
                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsPerformanceTotal.Tables[0].Rows[i]["DocUploadPath"].ToString() })' target="_blank" class="dropdown-item">
                                            <i class="icon-person"></i> @Obj.GetEmpHrNameById(dsPerformanceTotal.Tables[0].Rows[i]["emp_id"].ToString()) <span class="badge badge-primary ml-auto">All</span>
                                        </a>
                                    }

                                }





                            </div>

                            <div id="folder_EvaluationRenew" class="d-none animated fadeIn   ">



                                @if (dsPerformanceApproved != null && dsPerformanceApproved.Tables.Count > 0 && dsPerformanceApproved.Tables[0].Rows.Count > 0)
                                {


                                    for (int i = 0; i < dsPerformanceApproved.Tables[0].Rows.Count; i++)
                                    {
                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsPerformanceApproved.Tables[0].Rows[i]["DocUploadPath"].ToString() })' target="_blank" class="dropdown-item">
                                            <i class="icon-person"></i> @Obj.GetEmpHrNameById(dsPerformanceApproved.Tables[0].Rows[i]["emp_id"].ToString()) <span class="badge badge-danger ml-auto">Renewal</span>
                                        </a>
                                    }

                                }
                            </div>

                            <div id="folder_EvaluationDeclined" class="d-none animated fadeIn   ">

                                @if (dsPerformanceDeclined != null && dsPerformanceDeclined.Tables.Count > 0 && dsPerformanceDeclined.Tables[0].Rows.Count > 0)
                                {


                                    for (int i = 0; i < dsPerformanceDeclined.Tables[0].Rows.Count; i++)
                                    {
                                        <a href='@Url.Action("DisplayDocument", "Reports", new { Document = dsPerformanceDeclined.Tables[0].Rows[i]["DocUploadPath"].ToString() })' target="_blank" class="dropdown-item">
                                            <i class="icon-person"></i> @Obj.GetEmpHrNameById(dsPerformanceDeclined.Tables[0].Rows[i]["emp_id"].ToString()) <span class="badge bg-indigo-300 ml-auto">Declined</span>
                                        </a>
                                    }

                                }



                            </div>

                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="mb-3">
                        <a href="#moc-folder" class="text-default" data-toggle="collapse">
                            <h6 class="font-weight-semibold mt-2">
                                <i class="icon-folder6 mr-2"></i>  Management Of Change(MOC) <span class="ml-1" id="mocall_count">(@dsMOCTotal.Tables[0].Rows.Count)</span> <span class="ml-1 d-none" id="mocrenew_count">(@(dsMOCApproved.Tables[0].Rows.Count+dsMOCDeclined.Tables[0].Rows.Count))</span>

                                <i class="icon-circle-down2 float-right"></i>
                            </h6>

                        </a>
                        <div class="dropdown-divider mb-2"></div>
                        <div class="collapse show" id="moc-folder">

                            <div id="folder_MocAll" class="is-visible animated fadeIn   ">


                                @if (dsMOCTotal != null && dsMOCTotal.Tables.Count > 0 && dsMOCTotal.Tables[0].Rows.Count > 0)
                                {


                                    for (int i = 0; i < dsMOCTotal.Tables[0].Rows.Count; i++)
                                    {
                                        <a href='@Url.Action("ChangeManagementDetails", "ChangeManagement", new { IdMgmt = dsMOCTotal.Tables[0].Rows[i]["IdMgmt"].ToString() })' target="_blank" class="dropdown-item">
                                            <i class="icon-person"></i> @Obj.GetEmpHrNameById(dsMOCTotal.Tables[0].Rows[i]["ChangeRequestedBy"].ToString()) <span class="badge badge-primary ml-auto">All</span>
                                        </a>
                                    }

                                }





                            </div>

                            <div id="folder_MocRenew" class="d-none animated fadeIn   ">



                                @if (dsMOCApproved != null && dsMOCApproved.Tables.Count > 0 && dsMOCApproved.Tables[0].Rows.Count > 0)
                                {


                                    for (int i = 0; i < dsMOCApproved.Tables[0].Rows.Count; i++)
                                    {
                                        <a href='@Url.Action("ChangeManagementDetails", "ChangeManagement", new { IdMgmt = dsMOCApproved.Tables[0].Rows[i]["IdMgmt"].ToString() })' target="_blank" class="dropdown-item">
                                            <i class="icon-person"></i> @Obj.GetEmpHrNameById(dsMOCApproved.Tables[0].Rows[i]["ChangeRequestedBy"].ToString()) <span class="badge badge-danger ml-auto">Review</span>
                                        </a>
                                    }

                                }
                            </div>

                            <div id="folder_MocDeclined" class="d-none animated fadeIn   ">

                                @if (dsMOCDeclined != null && dsMOCDeclined.Tables.Count > 0 && dsMOCDeclined.Tables[0].Rows.Count > 0)
                                {


                                    for (int i = 0; i < dsMOCDeclined.Tables[0].Rows.Count; i++)
                                    {
                                        <a href='@Url.Action("ChangeManagementDetails", "ChangeManagement", new { IdMgmt = dsMOCDeclined.Tables[0].Rows[i]["IdMgmt"].ToString() })' target="_blank" class="dropdown-item">
                                            <i class="icon-person"></i> @Obj.GetEmpHrNameById(dsMOCDeclined.Tables[0].Rows[i]["ChangeRequestedBy"].ToString()) <span class="badge bg-indigo ml-auto">Declined</span>
                                        </a>
                                    }

                                }



                            </div>





                            
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



    @section scripts {
        <script>



                       //----zzz
    $(document).ready(function () {

        @if (TempData["alertdata"] != null ) {

           @: new Noty({
           @:     text: '@TempData["alertdata"]',
           @:     type: 'error'
           @: }).show();
        }

        @if (@TempData["Successdata"] != null ) {

        @:    new Noty({
         @:       text: '@TempData["Successdata"]',
         @:       type: 'success'
         @:   }).show();
        }
    });
    //zzz----

            var showClass = 'is-visible';
            var hideClass = 'd-none';
            var active = '';

            $("#Govt-docs").click(function () {
                var element = $("#active_card").find(".is-visible");
                element.removeClass(showClass);
                element.addClass(hideClass);
                document.getElementById("Govt_Access").classList.remove(hideClass);
                document.getElementById("Govt_Access").classList.add(showClass);
            });


            $("#Govt-button").click(function () {
                var element = $("#active_card").find(".is-visible");
                element.removeClass(showClass);
                element.addClass(hideClass);
                document.getElementById("Govt_Access").classList.remove(hideClass);
                document.getElementById("Govt_Access").classList.add(showClass);
            });

            $("#Internal-docs").click(function () {
                var element = $("#active_card").find(".is-visible");                 
                element.removeClass(showClass);
                element.addClass(hideClass);
                document.getElementById("hidden card Internal System Documnts").classList.remove(hideClass);
                document.getElementById("hidden card Internal System Documnts").classList.add(showClass);
            });


             $("#Internal-button").click(function () {
                var element = $("#active_card").find(".is-visible");                 
                element.removeClass(showClass);
                element.addClass(hideClass);
                document.getElementById("hidden card Internal System Documnts").classList.remove(hideClass);
                document.getElementById("hidden card Internal System Documnts").classList.add(showClass);
               });


            $("#external-docs").click(function () {
                 var element = $("#active_card").find(".is-visible");
                 
                element.removeClass(showClass);
                element.addClass(hideClass);
                document.getElementById("hidden card External Documents").classList.remove(hideClass);
                document.getElementById("hidden card External Documents").classList.add(showClass);
      
            });


               $("#external-button").click(function () {
                 var element = $("#active_card").find(".is-visible");
                 
                element.removeClass(showClass);
                element.addClass(hideClass);
     document.getElementById("hidden card External Documents").classList.remove(hideClass);
                    document.getElementById("hidden card External Documents").classList.add(showClass);                   
                  
                });




            $("#change-docs").click(function () {


                var element = $("#active_card").find(".is-visible");
                 
                element.removeClass(showClass);
                element.addClass(hideClass);
     document.getElementById("hidden card Doc Change Requests").classList.remove(hideClass);
                    document.getElementById("hidden card Doc Change Requests").classList.add(showClass);
            });


              $("#change-button").click(function () {


                var element = $("#active_card").find(".is-visible");
                 
                element.removeClass(showClass);
                element.addClass(hideClass);
     document.getElementById("hidden card Doc Change Requests").classList.remove(hideClass);
                    document.getElementById("hidden card Doc Change Requests").classList.add(showClass);
                });

            $("#track-docs").click(function () {

                var element = $("#active_card").find(".is-visible");
                 
                element.removeClass(showClass);
                element.addClass(hideClass);
     document.getElementById("hidden card Documents Tracked").classList.remove(hideClass);
                    document.getElementById("hidden card Documents Tracked").classList.add(showClass);
            });

               $("#track-button").click(function () {

                var element = $("#active_card").find(".is-visible");
                 
                element.removeClass(showClass);
                element.addClass(hideClass);
     document.getElementById("hidden card Documents Tracked").classList.remove(hideClass);
                    document.getElementById("hidden card Documents Tracked").classList.add(showClass);
                });



            $("#passport-docs").click(function () {


                var element = $("#active_card").find(".is-visible");
                 
                element.removeClass(showClass);
                element.addClass(hideClass);
     document.getElementById("hidden card Passport Documents").classList.remove(hideClass);
                    document.getElementById("hidden card Passport Documents").classList.add(showClass);
            });

              $("#passport-button").click(function () {


                var element = $("#active_card").find(".is-visible");
                 
                element.removeClass(showClass);
                element.addClass(hideClass);
     document.getElementById("hidden card Passport Documents").classList.remove(hideClass);
                    document.getElementById("hidden card Passport Documents").classList.add(showClass);
                });






            $("#visa-docs").click(function () {

                var element = $("#active_card").find(".is-visible");
                 
                element.removeClass(showClass);
                element.addClass(hideClass);
     document.getElementById("hidden card Visa Documents").classList.remove(hideClass);
                    document.getElementById("hidden card Visa Documents").classList.add(showClass);
            });

                $("#visa-button").click(function () {

                var element = $("#active_card").find(".is-visible");
                 
                element.removeClass(showClass);
                element.addClass(hideClass);
     document.getElementById("hidden card Visa Documents").classList.remove(hideClass);
                    document.getElementById("hidden card Visa Documents").classList.add(showClass);
                });






            $("#insurance-docs").click(function () {


                var element = $("#active_card").find(".is-visible");
                 
                element.removeClass(showClass);
                element.addClass(hideClass);
     document.getElementById("hidden card Employee Insurance").classList.remove(hideClass);
                    document.getElementById("hidden card Employee Insurance").classList.add(showClass);
            });

              $("#insurance-button").click(function () {


                var element = $("#active_card").find(".is-visible");
                 
                element.removeClass(showClass);
                element.addClass(hideClass);
     document.getElementById("hidden card Employee Insurance").classList.remove(hideClass);
                    document.getElementById("hidden card Employee Insurance").classList.add(showClass);
                });






            $("#evaluation-docs").click(function () {

                var element = $("#active_card").find(".is-visible");
                 
                element.removeClass(showClass);
                element.addClass(hideClass);
     document.getElementById("hidden card Peformance Evaluation").classList.remove(hideClass);
                    document.getElementById("hidden card Peformance Evaluation").classList.add(showClass);
            });

                 $("#evaluation-button").click(function () {

                var element = $("#active_card").find(".is-visible");
                 
                element.removeClass(showClass);
                element.addClass(hideClass);
     document.getElementById("hidden card Peformance Evaluation").classList.remove(hideClass);
                    document.getElementById("hidden card Peformance Evaluation").classList.add(showClass);
                });






            $("#moc-docs").click(function () {

                var element = $("#active_card").find(".is-visible");
                 
                element.removeClass(showClass);
                element.addClass(hideClass);
     document.getElementById("hidden card MOC").classList.remove(hideClass);
                    document.getElementById("hidden card MOC").classList.add(showClass);
            });

                $("#moc-button").click(function () {

                var element = $("#active_card").find(".is-visible");
                 
                element.removeClass(showClass);
                element.addClass(hideClass);
     document.getElementById("hidden card MOC").classList.remove(hideClass);
                    document.getElementById("hidden card MOC").classList.add(showClass);
            });





             $("#list_button").click(function () {

                 document.getElementById("folder_button").classList.remove(hideClass);
                 document.getElementById("folder_button").classList.add(showClass);
                  document.getElementById("list_button").classList.add(hideClass);
     document.getElementById("list_view").classList.remove(hideClass);
                 document.getElementById("list_view").classList.add(showClass);
                 document.getElementById("folder_view").classList.add(hideClass);
                  document.getElementById("folder_view_filter").classList.add(hideClass);

                
             });





             $("#folder_button").click(function () {
                  document.getElementById("list_button").classList.remove(hideClass);
                    document.getElementById("list_button").classList.add(showClass);
               document.getElementById("folder_button").classList.add(hideClass);
     document.getElementById("folder_view").classList.remove(hideClass);
                 document.getElementById("folder_view").classList.add(showClass);

                   document.getElementById("folder_view_filter").classList.remove(hideClass);
                 document.getElementById("folder_view_filter").classList.add(showClass);

                  
                  document.getElementById("list_view").classList.add(hideClass);
             });




              $("#Filter_all").click(function () {
                document.getElementById("Filter_cross").classList.remove("active");
                  document.getElementById("Filter_tick").classList.remove("active");
                  document.getElementById("folder_InternalAll").classList.remove("d-none");
                   document.getElementById("internall_count").classList.remove("d-none");
                  document.getElementById("folder_ExternalAll").classList.remove("d-none");
                    document.getElementById("externalall_count").classList.remove("d-none");
                  document.getElementById("folder_ChangeAll").classList.remove("d-none");
                   document.getElementById("changeall_count").classList.remove("d-none");
                  document.getElementById("folder_TrackAll").classList.remove("d-none");
                  document.getElementById("trackall_count").classList.remove("d-none");


                  document.getElementById("folder_EvaluationAll").classList.remove("d-none");
                   document.getElementById("evaluationall_count").classList.remove("d-none");
                  document.getElementById("folder_MocAll").classList.remove("d-none");
                       document.getElementById("mocrenew_count").classList.remove("d-none");



                  document.getElementById("folder_PassportAll").classList.remove("d-none");
                      document.getElementById("passportall_count").classList.remove("d-none");
                  document.getElementById("folder_VisaAll").classList.remove("d-none");
                      document.getElementById("visaall_count").classList.remove("d-none");
                  document.getElementById("folder_InsuranceAll").classList.remove("d-none");
                      document.getElementById("insuranceall_count").classList.remove("d-none");


                  
                  document.getElementById("Filter_all").classList.add("active");
                  document.getElementById("folder_InternalApproved").classList.add("d-none");
                  document.getElementById("folder_InternalClosed").classList.add("d-none");
                    document.getElementById("internalreview_count").classList.add("d-none");
                  document.getElementById("internalapprove_count").classList.add("d-none");

                   document.getElementById("folder_ExternalDeclined").classList.add("d-none");
                  document.getElementById("folder_ExternalRenew").classList.add("d-none");
                        document.getElementById("externalrenew_count").classList.add("d-none");


                      document.getElementById("folder_ChangeApproved").classList.add("d-none");
                  document.getElementById("folder_ChangeDeclined").classList.add("d-none");
                       document.getElementById("changedecline_count").classList.add("d-none");
                  document.getElementById("changeapprove_count").classList.add("d-none");


                      document.getElementById("folder_TrackDeclined").classList.add("d-none");
                  document.getElementById("folder_TrackRenew").classList.add("d-none");
                   document.getElementById("trackrenew_count").classList.add("d-none");



                     document.getElementById("folder_EvaluationDeclined").classList.add("d-none");
                  document.getElementById("folder_EvaluationRenew").classList.add("d-none");
                   document.getElementById("evaluationrenew_count").classList.add("d-none");


                       document.getElementById("folder_MocDeclined").classList.add("d-none");
                  document.getElementById("folder_MocRenew").classList.add("d-none");
                  document.getElementById("mocrenew_count").classList.add("d-none");


                          document.getElementById("folder_PassportDeclined").classList.add("d-none");
                  document.getElementById("folder_PassportRenew").classList.add("d-none");
                   document.getElementById("passportrenew_count").classList.add("d-none");

                       document.getElementById("folder_VisaDeclined").classList.add("d-none");
                  document.getElementById("folder_VisaRenew").classList.add("d-none");
                   document.getElementById("visarenew_count").classList.add("d-none");


                      document.getElementById("folder_InsuranceDeclined").classList.add("d-none");
                  document.getElementById("folder_InsuranceRenew").classList.add("d-none");
                   document.getElementById("insurancerenew_count").classList.add("d-none");



              });

              $("#Filter_cross").click(function () {
               document.getElementById("Filter_tick").classList.remove("active");
                  document.getElementById("Filter_all").classList.remove("active");
                  document.getElementById("folder_InternalClosed").classList.remove("d-none");
                  document.getElementById("internalreview_count").classList.remove("d-none");



                     document.getElementById("folder_ExternalDeclined").classList.remove("d-none");
                  document.getElementById("folder_ExternalRenew").classList.remove("d-none");
                   document.getElementById("externalrenew_count").classList.remove("d-none");


                  document.getElementById("folder_ChangeDeclined").classList.remove("d-none");
                  document.getElementById("changedecline_count").classList.remove("d-none");


                  document.getElementById("folder_TrackDeclined").classList.remove("d-none");
                  document.getElementById("trackrenew_count").classList.remove("d-none");




                  document.getElementById("folder_TrackRenew").classList.remove("d-none");

                   document.getElementById("folder_EvaluationDeclined").classList.remove("d-none");
                  document.getElementById("folder_EvaluationRenew").classList.remove("d-none");
                   document.getElementById("evaluationrenew_count").classList.remove("d-none");




                   document.getElementById("folder_MocDeclined").classList.remove("d-none");
                  document.getElementById("folder_MocRenew").classList.remove("d-none");
                    document.getElementById("mocrenew_count").classList.remove("d-none");


                        document.getElementById("folder_PassportDeclined").classList.remove("d-none");
                  document.getElementById("folder_PassportRenew").classList.remove("d-none");
                    document.getElementById("passportrenew_count").classList.remove("d-none");



                      document.getElementById("folder_VisaDeclined").classList.remove("d-none");
                  document.getElementById("folder_VisaRenew").classList.remove("d-none");
                   document.getElementById("visarenew_count").classList.remove("d-none");


                        document.getElementById("folder_InsuranceDeclined").classList.remove("d-none");
                  document.getElementById("folder_InsuranceRenew").classList.remove("d-none");
                   document.getElementById("insurancerenew_count").classList.remove("d-none");



                  
                  document.getElementById("Filter_cross").classList.add("active");
                     document.getElementById("folder_InternalApproved").classList.add("d-none");
                  document.getElementById("folder_InternalAll").classList.add("d-none");
                    document.getElementById("internall_count").classList.add("d-none");
                  document.getElementById("internalapprove_count").classList.add("d-none");



                  document.getElementById("folder_ExternalAll").classList.add("d-none");
                  document.getElementById("externalall_count").classList.add("d-none");



                  document.getElementById("folder_ChangeAll").classList.add("d-none");
                  document.getElementById("folder_ChangeApproved").classList.add("d-none");
                   document.getElementById("changeapprove_count").classList.add("d-none");
                  document.getElementById("changeall_count").classList.add("d-none");


                  document.getElementById("folder_TrackAll").classList.add("d-none");
                   document.getElementById("trackall_count").classList.add("d-none");

                  document.getElementById("folder_EvaluationAll").classList.add("d-none");
                  document.getElementById("evaluationall_count").classList.add("d-none");


                  document.getElementById("folder_MocAll").classList.add("d-none");
                  document.getElementById("mocall_count").classList.add("d-none");


                  document.getElementById("folder_PassportAll").classList.add("d-none");
                   document.getElementById("passportall_count").classList.add("d-none");
                                   

                  document.getElementById("folder_VisaAll").classList.add("d-none");
                    document.getElementById("visaall_count").classList.add("d-none");
                  

                  document.getElementById("folder_InsuranceAll").classList.add("d-none");
                    document.getElementById("insuranceall_count").classList.add("d-none");
              });


             $("#Filter_tick").click(function () {
                  document.getElementById("Filter_cross").classList.remove("active");
                 document.getElementById("Filter_all").classList.remove("active");
                 document.getElementById("folder_InternalApproved").classList.remove("d-none");
                  document.getElementById("internalapprove_count").classList.remove("d-none");
                                                
                 document.getElementById("folder_ExternalAll").classList.remove("d-none");
                 document.getElementById("externalall_count").classList.remove("d-none");
                                 
                 document.getElementById("folder_ChangeApproved").classList.remove("d-none");
                 document.getElementById("changeapprove_count").classList.remove("d-none");
                                 
                 document.getElementById("folder_TrackAll").classList.remove("d-none");
                  document.getElementById("trackall_count").classList.remove("d-none");
                                                
                 document.getElementById("folder_EvaluationAll").classList.remove("d-none");
                  document.getElementById("evaluationall_count").classList.remove("d-none");
                                

                 document.getElementById("folder_MocAll").classList.remove("d-none");
                  document.getElementById("mocall_count").classList.remove("d-none");
                                 
                 document.getElementById("folder_PassportAll").classList.remove("d-none");
                  document.getElementById("passportall_count").classList.remove("d-none");
                                 
                 document.getElementById("folder_VisaAll").classList.remove("d-none");
                  document.getElementById("visaall_count").classList.remove("d-none");
                                 
                 document.getElementById("folder_InsuranceAll").classList.remove("d-none");
                 document.getElementById("insuranceall_count").classList.remove("d-none");
                                   
                 document.getElementById("Filter_tick").classList.add("active");
                  document.getElementById("folder_InternalClosed").classList.add("d-none");
                 document.getElementById("folder_InternalAll").classList.add("d-none");
                  document.getElementById("internall_count").classList.add("d-none");
                 document.getElementById("internalreview_count").classList.add("d-none");
                                 

                   document.getElementById("folder_ExternalDeclined").classList.add("d-none");
                 document.getElementById("folder_ExternalRenew").classList.add("d-none");
                  document.getElementById("externalrenew_count").classList.add("d-none");
                 
                 
                   document.getElementById("folder_ChangeAll").classList.add("d-none");
                 document.getElementById("folder_ChangeDeclined").classList.add("d-none");
                  document.getElementById("changedecline_count").classList.add("d-none");
                 document.getElementById("changeall_count").classList.add("d-none");


                 
                      document.getElementById("folder_TrackDeclined").classList.add("d-none");
                 document.getElementById("folder_TrackRenew").classList.add("d-none");
                  document.getElementById("trackrenew_count").classList.add("d-none");


                     document.getElementById("folder_EvaluationDeclined").classList.add("d-none");
                 document.getElementById("folder_EvaluationRenew").classList.add("d-none");
                   document.getElementById("evaluationrenew_count").classList.add("d-none");

                    document.getElementById("folder_MocDeclined").classList.add("d-none");
                 document.getElementById("folder_MocRenew").classList.add("d-none");
                  document.getElementById("mocrenew_count").classList.add("d-none");
                                 
                 
                    document.getElementById("folder_PassportDeclined").classList.add("d-none");
                 document.getElementById("folder_PassportRenew").classList.add("d-none");
                   document.getElementById("passportrenew_count").classList.add("d-none");

                    document.getElementById("folder_VisaDeclined").classList.add("d-none");
                 document.getElementById("folder_VisaRenew").classList.add("d-none");
                  document.getElementById("visarenew_count").classList.add("d-none");


                       document.getElementById("folder_InsuranceDeclined").classList.add("d-none");
                 document.getElementById("folder_InsuranceRenew").classList.add("d-none");
                   document.getElementById("insurancerenew_count").classList.add("d-none");

               });


            $('#folder_view [data-toggle=collapse]').on('click', function (e) {
                
              
                $(this).find('.icon-circle-down2').toggleClass('rotate-180');

               });

         var ARGovtAll = function () {
               
                // Basic Datatable examples
                var _componentDatatableBasic = function () {
                    if (!$().DataTable) {
                        console.warn('Warning - datatables.min.js is not loaded.');
                        return;
                    }
                    //Setting datatable defaults
                    $.extend($.fn.dataTable.defaults, {
                        autoWidth: false,
                        responsive: true,
                        columnDefs: [{
                            orderable: false,
                            width: 100,
                            targets: [2]
                        }],
                        colReorder: false,
                        dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                        //dom: 'lBfrtip',
                        language: {
                            search: '<span>Filter:</span> _INPUT_',
                            searchPlaceholder: 'Type to filter...',
                            lengthMenu: '<span>Show:</span> _MENU_',
                            paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                        }
                    });

                    var table = $('#ARGovt-All').DataTable({
                        lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                        colReorder: {
                            fixedColumnsLeft: 1
                        },
                        stateSave: true,
                        scrollY: '350px',
                        scrollCollapse: true,
                        keys: {
                            className: 'focus focus-success'
                        },

                        buttons: {
                            buttons: [
                                {
                                    extend: 'copyHtml5',
                                    className: 'btn btn-light',
                                    title: 'Access Request export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },
                                },
                                {
                                    extend: 'print',
                                    className: 'btn btn-light',
                                    title: 'Access Request export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },
                                },
                                {
                                    extend: 'colvis',
                                    text: '<i class="icon-three-bars"></i>',
                                    className: 'btn bg-blue btn-icon dropdown-toggle'
                                }
                            ]
                        }
                    });
                    // Adjust columns on window resize
                    setTimeout(function () {
                        $(window).on('resize', function () {
                            table.columns.adjust();
                        });
                    }, 100);

                    //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                    $('.sidebar-control').on('click', function () {
                        setTimeout(function () { 
                            table.columns.adjust().draw();
                            $("#ARGovt-All").resize();
                        }, 100);
                    });

                    $(document).on('shown.bs.tab', function (e) {
                        table.columns.adjust();
                    });

                    $(document).on("click", "#Govt-button", function () {
                        table.columns.adjust();
                    });

                    $(document).on("click", "#Govt-docs", function () {
                        table.columns.adjust();
                    });

                    $('#ARGovt-All').on('page.dt', function () {
                        $("#ARGovt-All").resize();
                    });

                    $('#ARGovt-All').on('column-visibility.dt', function () {
                        $("#ARGovt-All").resize();
                    });

                    $('#ARGovt-All').on('order.dt', function () {
                        $("#ARGovt-All").resize();
                    });

                    $('#ARGovt-All').on('responsive-display.dt', function () {
                        $("#ARGovt-All").resize();
                    });

                    $('#ARGovt-All').on('responsive-resize.dt', function () {
                        $("#ARGovt-All").resize();
                    });
                };

                // Select2 for length menu styling
                var _componentSelect2 = function () {
                    if (!$().select2) {
                        console.warn('Warning - select2.min.js is not loaded.');
                        return;
                    }
                    // Initialize
                    $('.dataTables_length select').select2({
                        minimumResultsForSearch: Infinity,
                        dropdownAutoWidth: true,
                        width: 'auto'
                    });
                };
                
                return {
                    init: function () {
                        _componentDatatableBasic();
                        _componentSelect2();
                    }
                }
            }();                                 

         var ARGovt2 = function () {

                // Basic Datatable examples
                var _componentDatatableBasic = function () {
                    if (!$().DataTable) {
                        console.warn('Warning - datatables.min.js is not loaded.');
                        return;
                    }
                    //Setting datatable defaults
                    $.extend($.fn.dataTable.defaults, {
                        autoWidth: false,
                        responsive: true,
                        columnDefs: [{
                            orderable: false,
                            width: 100,
                            targets: [2]
                        }],
                        colReorder: false,
                        dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                        //dom: 'lBfrtip',
                        language: {
                            search: '<span>Filter:</span> _INPUT_',
                            searchPlaceholder: 'Type to filter...',
                            lengthMenu: '<span>Show:</span> _MENU_',
                            paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                        }
                    });

                    var table = $('#ARGovt2').DataTable({
                        lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                        colReorder: {
                            fixedColumnsLeft: 1
                        },
                        stateSave: true,
                        scrollY: '350px',
                        scrollCollapse: true,
                        keys: {
                            className: 'focus focus-success'
                        },
                        buttons: {
                            buttons: [
                                {
                                    extend: 'copyHtml5',
                                    className: 'btn btn-light',
                                    title: 'Access Request export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },
                                },
                                {
                                    extend: 'print',
                                    className: 'btn btn-light',
                                    title: 'Access Request export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },
                                },
                                {
                                    extend: 'colvis',
                                    text: '<i class="icon-three-bars"></i>',
                                    className: 'btn bg-blue btn-icon dropdown-toggle'
                                }
                            ]
                        }
                    });
                    // Adjust columns on window resize
                    setTimeout(function () {
                        $(window).on('resize', function () {
                            table.columns.adjust();
                        });
                    }, 100);

                    //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                    $('.sidebar-control').on('click', function () {
                        setTimeout(function () {
                            table.columns.adjust().draw();
                            $("#ARGovt2").resize();
                        }, 100);
                    });

                    $(document).on('shown.bs.tab', function (e) {
                        table.columns.adjust();
                    });

                    $(document).on("click", "#Govt-button", function () {
                        table.columns.adjust();
                    });

                    $(document).on("click", "#Govt-docs", function () {
                        table.columns.adjust();
                    });

                    $('#ARGovt2').on('page.dt', function () {
                        $("#ARGovt2").resize();
                    });

                    $('#ARGovt2').on('column-visibility.dt', function () {
                        $("#ARGovt2").resize();
                    });

                    $('#ARGovt2').on('order.dt', function () {
                        $("#ARGovt2").resize();
                    });

                    $('#ARGovt2').on('responsive-display.dt', function () {
                        $("#ARGovt2").resize();
                    });

                    $('#ARGovt2').on('responsive-resize.dt', function () {
                        $("#ARGovt2").resize();
                    });
                };

                // Select2 for length menu styling
                var _componentSelect2 = function () {
                    if (!$().select2) {
                        console.warn('Warning - select2.min.js is not loaded.');
                        return;
                    }
                    // Initialize
                    $('.dataTables_length select').select2({
                        minimumResultsForSearch: Infinity,
                        dropdownAutoWidth: true,
                        width: 'auto'
                    });
                };

                return {
                    init: function () {
                        _componentDatatableBasic();
                        _componentSelect2();
                    }
                }
            }();       

         var ARGovt3 = function () {

                // Basic Datatable examples
                var _componentDatatableBasic = function () {
                    if (!$().DataTable) {
                        console.warn('Warning - datatables.min.js is not loaded.');
                        return;
                    }
                    //Setting datatable defaults
                    $.extend($.fn.dataTable.defaults, {
                        autoWidth: false,
                        responsive: true,
                        columnDefs: [{
                            orderable: false,
                            width: 100,
                            targets: [2]
                        }],
                        colReorder: false,
                        dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                        //dom: 'lBfrtip',
                        language: {
                            search: '<span>Filter:</span> _INPUT_',
                            searchPlaceholder: 'Type to filter...',
                            lengthMenu: '<span>Show:</span> _MENU_',
                            paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                        }
                    });

                    var table = $('#ARGovt3').DataTable({
                        lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                        colReorder: {
                            fixedColumnsLeft: 1
                        },
                        stateSave: true,
                        scrollY: '350px',
                        scrollCollapse: true,
                        keys: {
                            className: 'focus focus-success'
                        },
                        buttons: {
                            buttons: [
                                {
                                    extend: 'copyHtml5',
                                    className: 'btn btn-light',
                                    title: 'Access Request export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },
                                },
                                {
                                    extend: 'print',
                                    className: 'btn btn-light',
                                    title: 'Access Request export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },
                                },
                                {
                                    extend: 'colvis',
                                    text: '<i class="icon-three-bars"></i>',
                                    className: 'btn bg-blue btn-icon dropdown-toggle'
                                }
                            ]
                        }
                    });
                    // Adjust columns on window resize
                    setTimeout(function () {
                        $(window).on('resize', function () {
                            table.columns.adjust();
                        });
                    }, 100);

                    //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                    $('.sidebar-control').on('click', function () {
                        setTimeout(function () {
                            table.columns.adjust().draw();
                            $("#ARGovt3").resize();
                        }, 100);
                    });

                    $(document).on('shown.bs.tab', function (e) {
                        table.columns.adjust();
                    });

                    $(document).on("click", "#Govt-button", function () {
                        table.columns.adjust();
                    });

                    $(document).on("click", "#Govt-docs", function () {
                        table.columns.adjust();
                    });

                    $('#ARGovt3').on('page.dt', function () {
                        $("#ARGovt3").resize();
                    });

                    $('#ARGovt3').on('column-visibility.dt', function () {
                        $("#ARGovt3").resize();
                    });

                    $('#ARGovt3').on('order.dt', function () {
                        $("#ARGovt3").resize();
                    });

                    $('#ARGovt3').on('responsive-display.dt', function () {
                        $("#ARGovt3").resize();
                    });

                    $('#ARGovt3').on('responsive-resize.dt', function () {
                        $("#ARGovt3").resize();
                    });
                };

                // Select2 for length menu styling
                var _componentSelect2 = function () {
                    if (!$().select2) {
                        console.warn('Warning - select2.min.js is not loaded.');
                        return;
                    }
                    // Initialize
                    $('.dataTables_length select').select2({
                        minimumResultsForSearch: Infinity,
                        dropdownAutoWidth: true,
                        width: 'auto'
                    });
                };

                return {
                    init: function () {
                        _componentDatatableBasic();
                        _componentSelect2();
                    }
                }
            }();   

         var ARGovt4 = function () {

                // Basic Datatable examples
                var _componentDatatableBasic = function () {
                    if (!$().DataTable) {
                        console.warn('Warning - datatables.min.js is not loaded.');
                        return;
                    }
                    //Setting datatable defaults
                    $.extend($.fn.dataTable.defaults, {
                        autoWidth: false,
                        responsive: true,
                        columnDefs: [{
                            orderable: false,
                            width: 100,
                            targets: [2]
                        }],
                        colReorder: false,
                        dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                        //dom: 'lBfrtip',
                        language: {
                            search: '<span>Filter:</span> _INPUT_',
                            searchPlaceholder: 'Type to filter...',
                            lengthMenu: '<span>Show:</span> _MENU_',
                            paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                        }
                    });

                    var table = $('#ARGovt4').DataTable({
                        lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                        colReorder: {
                            fixedColumnsLeft: 1
                        },
                        stateSave: true,
                        scrollY: '350px',
                        scrollCollapse: true,
                        keys: {
                            className: 'focus focus-success'
                        },
                        buttons: {
                            buttons: [
                                {
                                    extend: 'copyHtml5',
                                    className: 'btn btn-light',
                                    title: 'Access Request export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },
                                },
                                {
                                    extend: 'print',
                                    className: 'btn btn-light',
                                    title: 'Access Request export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },
                                },
                                {
                                    extend: 'colvis',
                                    text: '<i class="icon-three-bars"></i>',
                                    className: 'btn bg-blue btn-icon dropdown-toggle'
                                }
                            ]
                        }
                    });
                    // Adjust columns on window resize
                    setTimeout(function () {
                        $(window).on('resize', function () {
                            table.columns.adjust();
                        });
                    }, 100);

                    //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                    $('.sidebar-control').on('click', function () {
                        setTimeout(function () {
                            table.columns.adjust().draw();
                            $("#ARGovt4").resize();
                        }, 100);
                    });

                    $(document).on('shown.bs.tab', function (e) {
                        table.columns.adjust();
                    });

                    $(document).on("click", "#Govt-button", function () {
                        table.columns.adjust();
                    });

                    $(document).on("click", "#Govt-docs", function () {
                        table.columns.adjust();
                    });

                    $('#ARGovt4').on('page.dt', function () {
                        $("#ARGovt4").resize();
                    });

                    $('#ARGovt4').on('column-visibility.dt', function () {
                        $("#ARGovt4").resize();
                    });

                    $('#ARGovt4').on('order.dt', function () {
                        $("#ARGovt4").resize();
                    });

                    $('#ARGovt4').on('responsive-display.dt', function () {
                        $("#ARGovt4").resize();
                    });

                    $('#ARGovt4').on('responsive-resize.dt', function () {
                        $("#ARGovt4").resize();
                    });
                };

                // Select2 for length menu styling
                var _componentSelect2 = function () {
                    if (!$().select2) {
                        console.warn('Warning - select2.min.js is not loaded.');
                        return;
                    }
                    // Initialize
                    $('.dataTables_length select').select2({
                        minimumResultsForSearch: Infinity,
                        dropdownAutoWidth: true,
                        width: 'auto'
                    });
                };

                return {
                    init: function () {
                        _componentDatatableBasic();
                        _componentSelect2();
                    }
                }
            }();       

         var ARGovt5 = function () {

                // Basic Datatable examples
                var _componentDatatableBasic = function () {
                    if (!$().DataTable) {
                        console.warn('Warning - datatables.min.js is not loaded.');
                        return;
                    }
                    //Setting datatable defaults
                    $.extend($.fn.dataTable.defaults, {
                        autoWidth: false,
                        responsive: true,
                        columnDefs: [{
                            orderable: false,
                            width: 100,
                            targets: [2]
                        }],
                        colReorder: false,
                        dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                        //dom: 'lBfrtip',
                        language: {
                            search: '<span>Filter:</span> _INPUT_',
                            searchPlaceholder: 'Type to filter...',
                            lengthMenu: '<span>Show:</span> _MENU_',
                            paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                        }
                    });

                    var table = $('#ARGovt5').DataTable({
                        lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                        colReorder: {
                            fixedColumnsLeft: 1
                        },
                        stateSave: true,
                        scrollY: '350px',
                        scrollCollapse: true,
                        keys: {
                            className: 'focus focus-success'
                        },

                        buttons: {
                            buttons: [
                                {
                                    extend: 'copyHtml5',
                                    className: 'btn btn-light',
                                    title: 'Access Request export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },
                                },
                                {
                                    extend: 'print',
                                    className: 'btn btn-light',
                                    title: 'Access Request export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },
                                },
                                {
                                    extend: 'colvis',
                                    text: '<i class="icon-three-bars"></i>',
                                    className: 'btn bg-blue btn-icon dropdown-toggle'
                                }
                            ]
                        }
                    });
                    // Adjust columns on window resize
                    setTimeout(function () {
                        $(window).on('resize', function () {
                            table.columns.adjust();
                        });
                    }, 100);

                    //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                    $('.sidebar-control').on('click', function () {
                        setTimeout(function () {
                            table.columns.adjust().draw();
                            $("#ARGovt5").resize();
                        }, 100);
                    });

                    $(document).on('shown.bs.tab', function (e) {
                        table.columns.adjust();
                    });

                    $(document).on("click", "#Govt-button", function () {
                        table.columns.adjust();
                    });

                    $(document).on("click", "#Govt-docs", function () {
                        table.columns.adjust();
                    });

                    $('#ARGovt5').on('page.dt', function () {
                        $("#ARGovt5").resize();
                    });

                    $('#ARGovt5').on('column-visibility.dt', function () {
                        $("#ARGovt5").resize();
                    });

                    $('#ARGovt5').on('order.dt', function () {
                        $("#ARGovt5").resize();
                    });

                    $('#ARGovt5').on('responsive-display.dt', function () {
                        $("#ARGovt5").resize();
                    });

                    $('#ARGovt5').on('responsive-resize.dt', function () {
                        $("#ARGovt5").resize();
                    });
                };

                // Select2 for length menu styling
                var _componentSelect2 = function () {
                    if (!$().select2) {
                        console.warn('Warning - select2.min.js is not loaded.');
                        return;
                    }
                    // Initialize
                    $('.dataTables_length select').select2({
                        minimumResultsForSearch: Infinity,
                        dropdownAutoWidth: true,
                        width: 'auto'
                    });
                };

                return {
                    init: function () {
                        _componentDatatableBasic();
                        _componentSelect2();
                    }
                }
            }(); 

        var ARGovt6 = function () {

                // Basic Datatable examples
                var _componentDatatableBasic = function () {
                    if (!$().DataTable) {
                        console.warn('Warning - datatables.min.js is not loaded.');
                        return;
                    }
                    //Setting datatable defaults
                    $.extend($.fn.dataTable.defaults, {
                        autoWidth: false,
                        responsive: true,
                        columnDefs: [{
                            orderable: false,
                            width: 100,
                            targets: [2]
                        }],
                        colReorder: false,
                        dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                        //dom: 'lBfrtip',
                        language: {
                            search: '<span>Filter:</span> _INPUT_',
                            searchPlaceholder: 'Type to filter...',
                            lengthMenu: '<span>Show:</span> _MENU_',
                            paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                        }
                    });

                    var table = $('#ARGovt6').DataTable({
                        lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                        colReorder: {
                            fixedColumnsLeft: 1
                        },
                        stateSave: true,
                        scrollY: '350px',
                        scrollCollapse: true,
                        keys: {
                            className: 'focus focus-success'
                        },

                        buttons: {
                            buttons: [
                                {
                                    extend: 'copyHtml5',
                                    className: 'btn btn-light',
                                    title: 'Access Request export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },
                                },
                                {
                                    extend: 'print',
                                    className: 'btn btn-light',
                                    title: 'Access Request export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },
                                },
                                {
                                    extend: 'colvis',
                                    text: '<i class="icon-three-bars"></i>',
                                    className: 'btn bg-blue btn-icon dropdown-toggle'
                                }
                            ]
                        }
                    });
                    // Adjust columns on window resize
                    setTimeout(function () {
                        $(window).on('resize', function () {
                            table.columns.adjust();
                        });
                    }, 100);

                    //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                    $('.sidebar-control').on('click', function () {
                        setTimeout(function () {
                            table.columns.adjust().draw();
                            $("#ARGovt6").resize();
                        }, 100);
                    });

                    $(document).on('shown.bs.tab', function (e) {
                        table.columns.adjust();
                    });

                    $(document).on("click", "#Govt-button", function () {
                        table.columns.adjust();
                    });

                    $(document).on("click", "#Govt-docs", function () {
                        table.columns.adjust();
                    });

                    $('#ARGovt6').on('page.dt', function () {
                        $("#ARGovt6").resize();
                    });

                    $('#ARGovt6').on('column-visibility.dt', function () {
                        $("#ARGovt6").resize();
                    });

                    $('#ARGovt6').on('order.dt', function () {
                        $("#ARGovt6").resize();
                    });

                    $('#ARGovt6').on('responsive-display.dt', function () {
                        $("#ARGovt6").resize();
                    });

                    $('#ARGovt6').on('responsive-resize.dt', function () {
                        $("#ARGovt6").resize();
                    });
                };

                // Select2 for length menu styling
                var _componentSelect2 = function () {
                    if (!$().select2) {
                        console.warn('Warning - select2.min.js is not loaded.');
                        return;
                    }
                    // Initialize
                    $('.dataTables_length select').select2({
                        minimumResultsForSearch: Infinity,
                        dropdownAutoWidth: true,
                        width: 'auto'
                    });
                };

                return {
                    init: function () {
                        _componentDatatableBasic();
                        _componentSelect2();
                    }
                }
            }(); 

        var ARGovt7 = function () {

                // Basic Datatable examples
                var _componentDatatableBasic = function () {
                    if (!$().DataTable) {
                        console.warn('Warning - datatables.min.js is not loaded.');
                        return;
                    }
                    //Setting datatable defaults
                    $.extend($.fn.dataTable.defaults, {
                        autoWidth: false,
                        responsive: true,
                        columnDefs: [{
                            orderable: false,
                            width: 100,
                            targets: [2]
                        }],
                        colReorder: false,
                        dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                        //dom: 'lBfrtip',
                        language: {
                            search: '<span>Filter:</span> _INPUT_',
                            searchPlaceholder: 'Type to filter...',
                            lengthMenu: '<span>Show:</span> _MENU_',
                            paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                        }
                    });

                    var table = $('#ARGovt7').DataTable({
                        lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                        colReorder: {
                            fixedColumnsLeft: 1
                        },
                        stateSave: true,
                        scrollY: '350px',
                        scrollCollapse: true,
                        keys: {
                            className: 'focus focus-success'
                        },

                        buttons: {
                            buttons: [
                                {
                                    extend: 'copyHtml5',
                                    className: 'btn btn-light',
                                    title: 'Access Request export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },
                                },
                                {
                                    extend: 'print',
                                    className: 'btn btn-light',
                                    title: 'Access Request export',
                                    exportOptions: {
                                        columns: ':visible :not(.not-export-column)'
                                    },
                                },
                                {
                                    extend: 'colvis',
                                    text: '<i class="icon-three-bars"></i>',
                                    className: 'btn bg-blue btn-icon dropdown-toggle'
                                }
                            ]
                        }
                    });
                    // Adjust columns on window resize
                    setTimeout(function () {
                        $(window).on('resize', function () {
                            table.columns.adjust();
                        });
                    }, 100);

                    //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                    $('.sidebar-control').on('click', function () {
                        setTimeout(function () {
                            table.columns.adjust().draw();
                            $("#ARGovt7").resize();
                        }, 100);
                    });

                    $(document).on('shown.bs.tab', function (e) {
                        table.columns.adjust();
                    });

                    $(document).on("click", "#Govt-button", function () {
                        table.columns.adjust();
                    });

                    $(document).on("click", "#Govt-docs", function () {
                        table.columns.adjust();
                    });

                    $('#ARGovt7').on('page.dt', function () {
                        $("#ARGovt7").resize();
                    });

                    $('#ARGovt7').on('column-visibility.dt', function () {
                        $("#ARGovt7").resize();
                    });

                    $('#ARGovt7').on('order.dt', function () {
                        $("#ARGovt7").resize();
                    });

                    $('#ARGovt7').on('responsive-display.dt', function () {
                        $("#ARGovt7").resize();
                    });

                    $('#ARGovt7').on('responsive-resize.dt', function () {
                        $("#ARGovt7").resize();
                    });
                };

                // Select2 for length menu styling
                var _componentSelect2 = function () {
                    if (!$().select2) {
                        console.warn('Warning - select2.min.js is not loaded.');
                        return;
                    }
                    // Initialize
                    $('.dataTables_length select').select2({
                        minimumResultsForSearch: Infinity,
                        dropdownAutoWidth: true,
                        width: 'auto'
                    });
                };

                return {
                    init: function () {
                        _componentDatatableBasic();
                        _componentSelect2();
                    }
                }
            }();                                 

         var InternalAll = function () {
                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_InternalAll').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Internal ALl Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Internal All Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }




                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#InternalAll").resize();
                            }, 100);

                        });
                        //}


                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });                     
                                             
                        $(document).on("click","#Internal-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#Internal-docs",function() {
                        table.columns.adjust();
                        });

                        $('#Datatable_InternalAll').on('page.dt', function () {
                           
                            $("#Datatable_InternalAll").resize();

                        });

                        $('#Datatable_InternalAll').on('column-visibility.dt', function () {
                           
                            $("#Datatable_InternalAll").resize();

                        });

                        $('#Datatable_InternalAll').on('order.dt', function () {
                          
                            $("#Datatable_InternalAll").resize();

                        });


                        $('#Datatable_InternalAll').on('responsive-display.dt', function () {
                           
                            $("#Datatable_InternalAll").resize();

                        });


                        $('#Datatable_InternalAll').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_InternalAll").resize();

                        });
                  };
                                                           
                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();

         var InternalAll2 = function () {


                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_InternalReview').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Internal Review Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Internal Review Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }




                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_InternalReview").resize();
                            }, 100);

                        });
                        //}

                           $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                           });
                                             

                         $(document).on("#Internal-button").click(function () {
                             table.columns.adjust();
                        });                       

                         $(document).on("#Internal-docs").click(function () {
                             table.columns.adjust();
                        });

                        $('#Datatable_InternalReview').on('page.dt', function () {
                           
                            $("#Datatable_InternalReview").resize();

                        });

                        $('#Datatable_InternalReview').on('column-visibility.dt', function () {
                           
                            $("#Datatable_InternalReview").resize();

                        });

                        $('#Datatable_InternalReview').on('order.dt', function () {
                          
                            $("#Datatable_InternalReview").resize();

                        });


                        $('#Datatable_InternalReview').on('responsive-display.dt', function () {
                           
                            $("#Datatable_InternalReview").resize();

                        });


                        $('#Datatable_InternalReview').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_InternalReview").resize();

                        });  
                    };

                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();

         var InternalAll3 = function () {


                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_InternalApproved').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Internal Approved Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Internal Approved export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }




                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_InternalApproved").resize();
                            }, 100);

                        });
                        //}

                           $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });
                    
                        $(document).on("#Internal-button").click(function () {
                            table.columns.adjust();
                        });

                         $(document).on("#Internal-docs").click(function () {
                             table.columns.adjust();
                        });

                        $('#Datatable_InternalApproved').on('page.dt', function () {
                           
                            $("#Datatable_InternalApproved").resize();

                        });

                        $('#Datatable_InternalApproved').on('column-visibility.dt', function () {
                           
                            $("#Datatable_InternalApproved").resize();

                        });

                        $('#Datatable_InternalApproved').on('order.dt', function () {
                          
                            $("#Datatable_InternalApproved").resize();

                        });


                        $('#Datatable_InternalApproved').on('responsive-display.dt', function () {
                           
                            $("#Datatable_InternalApproved").resize();

                        });


                        $('#Datatable_InternalApproved').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_InternalApproved").resize();

                        });    
                    };


                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();
                                                                        
             var ExternalAll = function () {


                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_ExternalAll').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'External ALl Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'External All Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }




                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_ExternalAll").resize();
                            }, 100);

                        });
                        //}
                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });

                        $(document).on("click","#external-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#external-docs",function() {
                        table.columns.adjust();
                        });



                        $('#Datatable_ExternalAll').on('page.dt', function () {
                           
                            $("#Datatable_ExternalAll").resize();

                        });

                        $('#Datatable_ExternalAll').on('column-visibility.dt', function () {
                           
                            $("#Datatable_ExternalAll").resize();

                        });

                        $('#Datatable_ExternalAll').on('order.dt', function () {
                          
                            $("#Datatable_ExternalAll").resize();

                        });


                        $('#Datatable_ExternalAll').on('responsive-display.dt', function () {
                           
                            $("#Datatable_ExternalAll").resize();

                        });


                        $('#Datatable_ExternalAll').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_ExternalAll").resize();

                        });
                        
                    };

                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();

            var ExternalAll2 = function () {


                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_ExternalRenewal').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'External Renewal Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'External Renewal Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }
                            
                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_ExternalRenewal").resize();
                            }, 100);

                        });
                        //}
                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });
                                
                        $(document).on("click","#external-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#external-docs",function() {
                        table.columns.adjust();
                        });



                        $('#Datatable_ExternalRenewal').on('page.dt', function () {
                           
                            $("#Datatable_ExternalRenewal").resize();

                        });

                        $('#Datatable_ExternalRenewal').on('column-visibility.dt', function () {
                           
                            $("#Datatable_ExternalRenewal").resize();

                        });

                        $('#Datatable_ExternalRenewal').on('order.dt', function () {
                          
                            $("#Datatable_ExternalRenewal").resize();

                        });


                        $('#Datatable_ExternalRenewal').on('responsive-display.dt', function () {
                           
                            $("#Datatable_ExternalRenewal").resize();

                        });


                        $('#Datatable_ExternalRenewal').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_ExternalRenewal").resize();

                        });   
                    };


                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();
                                 
             var ExternalAll3 = function () {
                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_ExternalDeclined').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'External Declined Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'External Declined Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }
                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_ExternalDeclined").resize();
                            }, 100);

                        });
                        //}


                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });


                      


                        $(document).on("click","#external-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#external-docs",function() {
                        table.columns.adjust();
                        });



                        $('#Datatable_ExternalDeclined').on('page.dt', function () {
                           
                            $("#Datatable_ExternalDeclined").resize();

                        });

                        $('#Datatable_ExternalDeclined').on('column-visibility.dt', function () {
                           
                            $("#Datatable_ExternalDeclined").resize();

                        });

                        $('#Datatable_ExternalDeclined').on('order.dt', function () {
                          
                            $("#Datatable_ExternalDeclined").resize();

                        });


                        $('#Datatable_ExternalDeclined').on('responsive-display.dt', function () {
                           
                            $("#Datatable_ExternalDeclined").resize();

                        });


                        $('#Datatable_ExternalDeclined').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_ExternalDeclined").resize();

                        });


                     



                    };






                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();
                                 
              var DocChangeAll = function () {


                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_DocChangeAll').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Doc Change All Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Doc Change All Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }




                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_DocChangeAll").resize();
                            }, 100);

                        });
                        //}


                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });


                      


                        $(document).on("click","#change-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#change-docs",function() {
                        table.columns.adjust();
                        });



                        $('#Datatable_DocChangeAll').on('page.dt', function () {
                           
                            $("#Datatable_DocChangeAll").resize();

                        });

                        $('#Datatable_DocChangeAll').on('column-visibility.dt', function () {
                           
                            $("#Datatable_DocChangeAll").resize();

                        });

                        $('#Datatable_DocChangeAll').on('order.dt', function () {
                          
                            $("#Datatable_DocChangeAll").resize();

                        });


                        $('#Datatable_DocChangeAll').on('responsive-display.dt', function () {
                           
                            $("#Datatable_DocChangeAll").resize();

                        });


                        $('#Datatable_DocChangeAll').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_DocChangeAll").resize();

                        });


                     



                    };






                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();
                       
             var DocChangeAll2 = function () {


                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_DocChangeApproved').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Doc Change Approved Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Doc Change Approved Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }




                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_DocChangeApproved").resize();
                            }, 100);

                        });
                        //}


                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });


                      


                        $(document).on("click","#change-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#change-docs",function() {
                        table.columns.adjust();
                        });



                        $('#Datatable_DocChangeApproved').on('page.dt', function () {
                           
                            $("#Datatable_DocChangeApproved").resize();

                        });

                        $('#Datatable_DocChangeApproved').on('column-visibility.dt', function () {
                           
                            $("#Datatable_DocChangeApproved").resize();

                        });

                        $('#Datatable_DocChangeApproved').on('order.dt', function () {
                          
                            $("#Datatable_DocChangeApproved").resize();

                        });


                        $('#Datatable_DocChangeApproved').on('responsive-display.dt', function () {
                           
                            $("#Datatable_DocChangeApproved").resize();

                        });


                        $('#Datatable_DocChangeApproved').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_DocChangeApproved").resize();

                        });


                     



                    };






                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();   

             var DocChangeAll3 = function () {


                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_DocChangeDeclined').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Doc Change Declined Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Doc Change Declined Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }




                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_DocChangeDeclined").resize();
                            }, 100);

                        });
                        //}


                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });


                      


                        $(document).on("click","#change-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#change-docs",function() {
                        table.columns.adjust();
                        });



                        $('#Datatable_DocChangeDeclined').on('page.dt', function () {
                           
                            $("#Datatable_DocChangeDeclined").resize();

                        });

                        $('#Datatable_DocChangeDeclined').on('column-visibility.dt', function () {
                           
                            $("#Datatable_DocChangeDeclined").resize();

                        });

                        $('#Datatable_DocChangeDeclined').on('order.dt', function () {
                          
                            $("#Datatable_DocChangeDeclined").resize();

                        });


                        $('#Datatable_DocChangeDeclined').on('responsive-display.dt', function () {
                           
                            $("#Datatable_DocChangeDeclined").resize();

                        });


                        $('#Datatable_DocChangeDeclined').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_DocChangeDeclined").resize();

                        });


                     



                    };






                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();

             var DocTrackAll = function () {


                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_TrackAll').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Doc Track All Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Doc Track All Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }




                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_TrackAll").resize();
                            }, 100);

                        });
                        //}


                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });


                      


                        $(document).on("click","#track-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#track-docs",function() {
                        table.columns.adjust();
                        });



                        $('#Datatable_TrackAll').on('page.dt', function () {
                           
                            $("#Datatable_TrackAll").resize();

                        });

                        $('#Datatable_TrackAll').on('column-visibility.dt', function () {
                           
                            $("#Datatable_TrackAll").resize();

                        });

                        $('#Datatable_TrackAll').on('order.dt', function () {
                          
                            $("#Datatable_TrackAll").resize();

                        });


                        $('#Datatable_TrackAll').on('responsive-display.dt', function () {
                           
                            $("#Datatable_TrackAll").resize();

                        });


                        $('#Datatable_TrackAll').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_TrackAll").resize();

                        });


                     



                    };






                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();
                                                  
             var DocTrackAll2 = function () {

                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_TrackRenewal').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Doc Track Renewal Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Doc Track Renewal Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }




                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_TrackRenewal").resize();
                            }, 100);

                        });
                        //}


                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });


                      


                        $(document).on("click","#track-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#track-docs",function() {
                        table.columns.adjust();
                        });



                        $('#Datatable_TrackRenewal').on('page.dt', function () {
                           
                            $("#Datatable_TrackRenewal").resize();

                        });

                        $('#Datatable_TrackRenewal').on('column-visibility.dt', function () {
                           
                            $("#Datatable_TrackRenewal").resize();

                        });

                        $('#Datatable_TrackRenewal').on('order.dt', function () {
                          
                            $("#Datatable_TrackRenewal").resize();

                        });


                        $('#Datatable_TrackRenewal').on('responsive-display.dt', function () {
                           
                            $("#Datatable_TrackRenewal").resize();

                        });


                        $('#Datatable_TrackRenewal').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_TrackRenewal").resize();

                        });


                     



                    };






                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();

            var DocTrackAll3 = function () {


                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_TrackDeclined').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Doc Track Declined Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Doc Track Declined Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }




                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_TrackDeclined").resize();
                            }, 100);

                        });
                        //}


                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });


                      


                        $(document).on("click","#track-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#track-docs",function() {
                        table.columns.adjust();
                        });



                        $('#Datatable_TrackDeclined').on('page.dt', function () {
                           
                            $("#Datatable_TrackDeclined").resize();

                        });

                        $('#Datatable_TrackDeclined').on('column-visibility.dt', function () {
                           
                            $("#Datatable_TrackDeclined").resize();

                        });

                        $('#Datatable_TrackDeclined').on('order.dt', function () {
                          
                            $("#Datatable_TrackDeclined").resize();

                        });


                        $('#Datatable_TrackDeclined').on('responsive-display.dt', function () {
                           
                            $("#Datatable_TrackDeclined").resize();

                        });


                        $('#Datatable_TrackDeclined').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_TrackDeclined").resize();

                        });


                     



                    };






                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
            }();
                                 
            DocPerformanceAll = function () {


                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_PerformanceAll').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Performance All Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Performance All Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }




                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_PerformanceAll").resize();
                            }, 100);

                        });
                        //}


                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });

                        $(document).on("click","#evaluation-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#evaluation-docs",function() {
                        table.columns.adjust();
                        });



                        $('#Datatable_PerformanceAll').on('page.dt', function () {
                           
                            $("#Datatable_PerformanceAll").resize();

                        });

                        $('#Datatable_PerformanceAll').on('column-visibility.dt', function () {
                           
                            $("#Datatable_PerformanceAll").resize();

                        });

                        $('#Datatable_PerformanceAll').on('order.dt', function () {
                          
                            $("#Datatable_PerformanceAll").resize();

                        });


                        $('#Datatable_PerformanceAll').on('responsive-display.dt', function () {
                           
                            $("#Datatable_PerformanceAll").resize();

                        });


                        $('#Datatable_PerformanceAll').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_PerformanceAll").resize();

                        });
                        
                    };


                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();

            DocPerformanceAll2 = function () {

                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_PerformanceReview').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Performance Review Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Performance Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }




                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_PerformanceReview").resize();
                            }, 100);

                        });
                        //}


                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });


                      


                        $(document).on("click","#evaluation-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#evaluation-docs",function() {
                        table.columns.adjust();
                        });



                        $('#Datatable_PerformanceReview').on('page.dt', function () {
                           
                            $("#Datatable_PerformanceReview").resize();

                        });

                        $('#Datatable_PerformanceReview').on('column-visibility.dt', function () {
                           
                            $("#Datatable_PerformanceReview").resize();

                        });

                        $('#Datatable_PerformanceReview').on('order.dt', function () {
                          
                            $("#Datatable_PerformanceReview").resize();

                        });


                        $('#Datatable_PerformanceReview').on('responsive-display.dt', function () {
                           
                            $("#Datatable_PerformanceReview").resize();

                        });


                        $('#Datatable_PerformanceReview').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_PerformanceReview").resize();

                        });
                    };
                
                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };
                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();
   
            DocPerformanceAll3 = function () {


                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_PerformanceDecline').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Performance Declined Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Performance Declined Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }
                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_PerformanceDecline").resize();
                            }, 100);

                        });
                        //}


                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });

                        $(document).on("click","#evaluation-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#evaluation-docs",function() {
                        table.columns.adjust();
                        });


                        $('#Datatable_PerformanceDecline').on('page.dt', function () {
                           
                            $("#Datatable_PerformanceDecline").resize();

                        });

                        $('#Datatable_PerformanceDecline').on('column-visibility.dt', function () {
                           
                            $("#Datatable_PerformanceDecline").resize();

                        });

                        $('#Datatable_PerformanceDecline').on('order.dt', function () {
                          
                            $("#Datatable_PerformanceDecline").resize();

                        });


                        $('#Datatable_PerformanceDecline').on('responsive-display.dt', function () {
                           
                            $("#Datatable_PerformanceDecline").resize();

                        });


                        $('#Datatable_PerformanceDecline').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_PerformanceDecline").resize();

                        });
                    };

                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }()

             DocMocAll = function () {


                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                          columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_MocAll').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Moc All Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Moc All Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }




                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_MocAll").resize();
                            }, 100);

                        });
                        //}


                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });


                      


                        $(document).on("click","#moc-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#moc-docs",function() {
                        table.columns.adjust();
                        });



                        $('#Datatable_MocAll').on('page.dt', function () {
                           
                            $("#Datatable_MocAll").resize();

                        });

                        $('#Datatable_MocAll').on('column-visibility.dt', function () {
                           
                            $("#Datatable_MocAll").resize();

                        });

                        $('#Datatable_MocAll').on('order.dt', function () {
                          
                            $("#Datatable_MocAll").resize();

                        });


                        $('#Datatable_MocAll').on('responsive-display.dt', function () {
                           
                            $("#Datatable_MocAll").resize();

                        });


                        $('#Datatable_MocAll').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_MocAll").resize();

                        });


                     



                    };






                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();

            DocMocAll2 = function () {


                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                             columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_MocReview').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Moc Pending Approval Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Moc Pending Approval Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }




                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_MocReview").resize();
                            }, 100);

                        });
                        //}


                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });


                      


                        $(document).on("click","#moc-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#moc-docs",function() {
                        table.columns.adjust();
                        });



                        $('#Datatable_MocReview').on('page.dt', function () {
                           
                            $("#Datatable_MocReview").resize();

                        });

                        $('#Datatable_MocReview').on('column-visibility.dt', function () {
                           
                            $("#Datatable_MocReview").resize();

                        });

                        $('#Datatable_MocReview').on('order.dt', function () {
                          
                            $("#Datatable_MocReview").resize();

                        });


                        $('#Datatable_MocReview').on('responsive-display.dt', function () {
                           
                            $("#Datatable_MocReview").resize();

                        });


                        $('#Datatable_MocReview').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_MocReview").resize();

                        });


                     



                    };






                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();
                                                  
             DocMocAll3 = function () {


                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_MocDecline').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Moc Declined Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Moc Declined Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }




                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_MocDecline").resize();
                            }, 100);

                        });
                        //}


                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });


                      


                        $(document).on("click","#moc-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#moc-docs",function() {
                        table.columns.adjust();
                        });



                        $('#Datatable_MocDecline').on('page.dt', function () {
                           
                            $("#Datatable_MocDecline").resize();

                        });

                        $('#Datatable_MocDecline').on('column-visibility.dt', function () {
                           
                            $("#Datatable_MocDecline").resize();

                        });

                        $('#Datatable_MocDecline').on('order.dt', function () {
                          
                            $("#Datatable_MocDecline").resize();

                        });


                        $('#Datatable_MocDecline').on('responsive-display.dt', function () {
                           
                            $("#Datatable_MocDecline").resize();

                        });


                        $('#Datatable_MocDecline').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_MocDecline").resize();

                        });


                     



                    };






                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();

            DocPassportAll = function () {


                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_PassportAll').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Passport All Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Passport All Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }




                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_PassportAll").resize();
                            }, 100);

                        });
                        //}


                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });


                      


                        $(document).on("click","#passport-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#passport-docs",function() {
                        table.columns.adjust();
                        });



                        $('#Datatable_PassportAll').on('page.dt', function () {
                           
                            $("#Datatable_PassportAll").resize();

                        });

                        $('#Datatable_PassportAll').on('column-visibility.dt', function () {
                           
                            $("#Datatable_PassportAll").resize();

                        });

                        $('#Datatable_PassportAll').on('order.dt', function () {
                          
                            $("#Datatable_PassportAll").resize();

                        });


                        $('#Datatable_PassportAll').on('responsive-display.dt', function () {
                           
                            $("#Datatable_PassportAll").resize();

                        });


                        $('#Datatable_PassportAll').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_PassportAll").resize();

                        });


                     



                    };






                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();

           DocPassportAll2 = function () {


                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_PassportRenewal').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Paspport Renewal  Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Paspport Renewal Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }




                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_PassportRenewal").resize();
                            }, 100);

                        });
                        //}


                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });


                      


                        $(document).on("click","#passport-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#passport-docs",function() {
                        table.columns.adjust();
                        });



                        $('#Datatable_PassportRenewal').on('page.dt', function () {
                           
                            $("#Datatable_PassportRenewal").resize();

                        });

                        $('#Datatable_PassportRenewal').on('column-visibility.dt', function () {
                           
                            $("#Datatable_PassportRenewal").resize();

                        });

                        $('#Datatable_PassportRenewal').on('order.dt', function () {
                          
                            $("#Datatable_PassportRenewal").resize();

                        });


                        $('#Datatable_PassportRenewal').on('responsive-display.dt', function () {
                           
                            $("#Datatable_PassportRenewal").resize();

                        });


                        $('#Datatable_PassportRenewal').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_PassportRenewal").resize();

                        });


                     



                    };






                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();

              DocPassportAll3 = function () {


                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_PassportDeclined').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Passport Declined Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Passport Declined Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }




                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_PassportDeclined").resize();
                            }, 100);

                        });
                        //}


                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });


                      


                        $(document).on("click","#passport-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#passport-docs",function() {
                        table.columns.adjust();
                        });



                        $('#Datatable_PassportDeclined').on('page.dt', function () {
                           
                            $("#Datatable_PassportDeclined").resize();

                        });

                        $('#Datatable_PassportDeclined').on('column-visibility.dt', function () {
                           
                            $("#Datatable_PassportDeclined").resize();

                        });

                        $('#Datatable_PassportDeclined').on('order.dt', function () {
                          
                            $("#Datatable_PassportDeclined").resize();

                        });


                        $('#Datatable_PassportDeclined').on('responsive-display.dt', function () {
                           
                            $("#Datatable_PassportDeclined").resize();

                        });


                        $('#Datatable_PassportDeclined').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_PassportDeclined").resize();

                        });


                     



                    };






                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();

              DocVisaAll = function () {


                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_VisaAll').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Visa All Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Visa All Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }




                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_VisaAll").resize();
                            }, 100);

                        });
                        //}


                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });


                      


                        $(document).on("click","#visa-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#visa-docs",function() {
                        table.columns.adjust();
                        });



                        $('#Datatable_VisaAll').on('page.dt', function () {
                           
                            $("#Datatable_VisaAll").resize();

                        });

                        $('#Datatable_VisaAll').on('column-visibility.dt', function () {
                           
                            $("#Datatable_VisaAll").resize();

                        });

                        $('#Datatable_VisaAll').on('order.dt', function () {
                          
                            $("#Datatable_VisaAll").resize();

                        });


                        $('#Datatable_VisaAll').on('responsive-display.dt', function () {
                           
                            $("#Datatable_VisaAll").resize();

                        });


                        $('#Datatable_VisaAll').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_VisaAll").resize();

                        });


                     



                    };






                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();

              DocVisaAll2 = function () {

                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_VisaRenewal').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Visa Renewal Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Visa Renewal Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }




                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_VisaRenewal").resize();
                            }, 100);

                        });
                        //}


                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });


                      


                        $(document).on("click","#visa-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#visa-docs",function() {
                        table.columns.adjust();
                        });



                        $('#Datatable_VisaRenewal').on('page.dt', function () {
                           
                            $("#Datatable_VisaRenewal").resize();

                        });

                        $('#Datatable_VisaRenewal').on('column-visibility.dt', function () {
                           
                            $("#Datatable_VisaRenewal").resize();

                        });

                        $('#Datatable_VisaRenewal').on('order.dt', function () {
                          
                            $("#Datatable_VisaRenewal").resize();

                        });


                        $('#Datatable_VisaRenewal').on('responsive-display.dt', function () {
                           
                            $("#Datatable_VisaRenewal").resize();

                        });


                        $('#Datatable_VisaRenewal').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_VisaRenewal").resize();

                        });
                        
                    };
                  

                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();


              DocVisaAll3 = function () {


                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_VisaDeclined').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Visa Declined Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Visa Declined Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }

                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_VisaDeclined").resize();
                            }, 100);

                        });
                        //}

                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });
                        
                        $(document).on("click","#visa-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#visa-docs",function() {
                        table.columns.adjust();
                        });



                        $('#Datatable_VisaDeclined').on('page.dt', function () {
                           
                            $("#Datatable_VisaDeclined").resize();

                        });

                        $('#Datatable_VisaDeclined').on('column-visibility.dt', function () {
                           
                            $("#Datatable_VisaDeclined").resize();

                        });

                        $('#Datatable_VisaDeclined').on('order.dt', function () {
                          
                            $("#Datatable_VisaDeclined").resize();

                        });

                        $('#Datatable_VisaDeclined').on('responsive-display.dt', function () {
                           
                            $("#Datatable_VisaDeclined").resize();

                        });

                        $('#Datatable_VisaDeclined').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_VisaDeclined").resize();

                        });
                    };
                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();

            DocInsuranceAll = function () {

                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_InsuranceAll').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Insurance All Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Insurance All Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }
                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_InsuranceAll").resize();
                            }, 100);

                        });
                        //}


                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });
                        
                        $(document).on("click","#insurance-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#insurance-docs",function() {
                        table.columns.adjust();
                        });



                        $('#Datatable_InsuranceAll').on('page.dt', function () {
                           
                            $("#Datatable_InsuranceAll").resize();

                        });

                        $('#Datatable_InsuranceAll').on('column-visibility.dt', function () {
                           
                            $("#Datatable_InsuranceAll").resize();

                        });

                        $('#Datatable_InsuranceAll').on('order.dt', function () {
                          
                            $("#Datatable_InsuranceAll").resize();

                        });


                        $('#Datatable_InsuranceAll').on('responsive-display.dt', function () {
                           
                            $("#Datatable_InsuranceAll").resize();

                        });


                        $('#Datatable_InsuranceAll').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_InsuranceAll").resize();

                        });
                    };
                 
                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };


                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();

             DocInsuranceAll2 = function () {


                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }

                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });


                        var table = $('#Datatable_InsuranceRenewal').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,
                          

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Insurance Renewal Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Insurance Renewal Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },

                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }
                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {

                            setTimeout(function () {
                                //alert("gii");

                                table.columns.adjust().draw();
                                $("#Datatable_InsuranceRenewal").resize();
                            }, 100);

                        });
                        //}


                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                        });

                        $(document).on("click","#insurance-button",function() {
                        table.columns.adjust();
                        });

                         $(document).on("click","#insurance-docs",function() {
                        table.columns.adjust();
                        });



                        $('#Datatable_InsuranceRenewal').on('page.dt', function () {
                           
                            $("#Datatable_InsuranceRenewal").resize();

                        });

                        $('#Datatable_InsuranceRenewal').on('column-visibility.dt', function () {
                           
                            $("#Datatable_InsuranceRenewal").resize();

                        });

                        $('#Datatable_InsuranceRenewal').on('order.dt', function () {
                          
                            $("#Datatable_InsuranceRenewal").resize();

                        });


                        $('#Datatable_InsuranceRenewal').on('responsive-display.dt', function () {
                           
                            $("#Datatable_InsuranceRenewal").resize();

                        });


                        $('#Datatable_InsuranceRenewal').on('responsive-resize.dt', function () {
                           
                            $("#Datatable_InsuranceRenewal").resize();

                        });
                    };    

                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };
                    //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();
                       
             DocInsuranceAll3 = function () {
                    //
                    // Setup module components
                    //

                    // Basic Datatable examples
                    var _componentDatatableBasic = function () {
                        if (!$().DataTable) {
                            console.warn('Warning - datatables.min.js is not loaded.');
                            return;
                        }
                        //Setting datatable defaults
                        $.extend($.fn.dataTable.defaults, {
                            autoWidth: false,
                            responsive: true,
                            columnDefs: [{
                                orderable: false,
                                width: 100,
                                targets: [2]
                            }],

                            colReorder: false,
                            dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                            //dom: 'lBfrtip',
                            language: {
                                search: '<span>Filter:</span> _INPUT_',
                                searchPlaceholder: 'Type to filter...',
                                lengthMenu: '<span>Show:</span> _MENU_',
                                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                            }
                        });
                        var table = $('#Datatable_InsuranceDeclined').DataTable({
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            colReorder: {
                                fixedColumnsLeft: 1
                            },
                            stateSave: true,
                         
                            scrollY: '350px',
                            scrollCollapse: true,                         

                            keys: {
                                className: 'focus focus-success'
                            },

                            buttons: {
                                buttons: [
                                    {
                                        extend: 'copyHtml5',
                                        className: 'btn btn-light',
                                        title: 'Insurance Declined Document export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'print',
                                        className: 'btn btn-light',
                                        title: 'Insurance Declined Document Data export',
                                        exportOptions: {
                                            columns: ':visible :not(.not-export-column)'
                                        },
                                    },
                                    {
                                        extend: 'colvis',
                                        text: '<i class="icon-three-bars"></i>',
                                        className: 'btn bg-blue btn-icon dropdown-toggle'
                                    }
                                ]
                            }      
                        });
                        // Adjust columns on window resize
                        setTimeout(function () {
                            $(window).on('resize', function () {
                                table.columns.adjust();
                            });
                        }, 100);


                        //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                        $('.sidebar-control').on('click', function () {
                            setTimeout(function () {                               
                                table.columns.adjust().draw();
                                $("#Datatable_InsuranceDeclined").resize();
                            }, 100);
                        });
                        //}
                        $(document).on('shown.bs.tab', function (e) {
                            table.columns.adjust();
                            
                        });   

                        $(document).on("click", "#insurance-button", function () {
                            table.columns.adjust();
                        });

                        $(document).on("click", "#insurance-docs", function () {
                            table.columns.adjust();
                        });

                        $('#Datatable_InsuranceDeclined').on('page.dt', function () {                           
                            $("#Datatable_InsuranceDeclined").resize();
                        });

                        $('#Datatable_InsuranceDeclined').on('column-visibility.dt', function () {                           
                            $("#Datatable_InsuranceDeclined").resize();
                        });

                        $('#Datatable_InsuranceDeclined').on('order.dt', function () {                          
                            $("#Datatable_InsuranceDeclined").resize();
                        });


                        $('#Datatable_InsuranceDeclined').on('responsive-display.dt', function () {                           
                            $("#Datatable_InsuranceDeclined").resize();
                        });

                        $('#Datatable_InsuranceDeclined').on('responsive-resize.dt', function () {                           
                            $("#Datatable_InsuranceDeclined").resize();

                        });  
                    };
                                 
                    // Select2 for length menu styling
                    var _componentSelect2 = function () {
                        if (!$().select2) {
                            console.warn('Warning - select2.min.js is not loaded.');
                            return;
                        }

                        // Initialize
                        $('.dataTables_length select').select2({
                            minimumResultsForSearch: Infinity,
                            dropdownAutoWidth: true,
                            width: 'auto'
                        });
                    };

                 //
                    // Return objects assigned to module
                    //

                    return {
                        init: function () {
                            _componentDatatableBasic();
                            _componentSelect2();
                        }
                    }
                }();
                       
                // Initialize module
                // ------------------------------

                document.addEventListener('DOMContentLoaded', function () {
                    ARGovtAll.init();
                    ARGovt2.init();
                    ARGovt3.init();
                    ARGovt4.init();
                    ARGovt5.init();
                    ARGovt6.init();
                    ARGovt7.init();

                    InternalAll.init();
                    InternalAll2.init();
                    InternalAll3.init();

                    ExternalAll.init();
                    ExternalAll2.init();
                    ExternalAll3.init();

                    DocChangeAll.init();
                    DocChangeAll2.init();
                    DocChangeAll3.init();

                    DocTrackAll.init();
                    DocTrackAll2.init();
                    DocTrackAll3.init();

                    DocPerformanceAll.init();
                    DocPerformanceAll2.init();
                    DocPerformanceAll3.init();

                    DocMocAll.init();
                    DocMocAll2.init();
                    DocMocAll3.init(); 
                    
                    DocPassportAll.init();
                    DocPassportAll2.init();
                    DocPassportAll3.init();

                    DocVisaAll.init();
                    DocVisaAll2.init();
                    DocVisaAll3.init();

                    DocInsuranceAll.init();
                    DocInsuranceAll2.init();
                    DocInsuranceAll3.init();
                });                                        

        </script>
    }
