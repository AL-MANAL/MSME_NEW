@model ISOStd.Models.MgmtExternalDocumentModels

@{
    ViewBag.Title = "MgmtExternalDocumentEdit";
}

@section featured {
    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("MgmtExternalDocumentList", "MgmtExternalDocument", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">External Documents</span>
                    </a>
                    <span class="breadcrumb-item active">Update External Documents</span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
  }

@using (Html.BeginForm("MgmtExternalDocumentEdit", "MgmtExternalDocument", FormMethod.Post,
                     new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title"> Update External Documents</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>

                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">
                <input type="hidden" id="Mgmt_doc_External_Id" name="Mgmt_doc_External_Id" value="@Model.Mgmt_doc_External_Id" />

                <table class="table table-lg">
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            @Html.LabelFor(model => model.branch)
                        </td>
                        <td class="col">
                            <select class="form-control select-fixed-multiple" multiple="multiple" data-fouc id="branch" name="branch" onchange="GetDeptList()">
                                @*<option value='' hidden>Select</option>*@
                                @if (ViewBag.Branch != null)
                                {
                                    foreach (var data in ViewBag.Branch)
                                    {
                                        if (Array.IndexOf(Model.branch.ToString().Split(','), data.Value) >= 0)
                                        {
                                            <option value='@data.Value' selected>@data.Text</option>
                                        }
                                        else
                                        {
                                            <option value='@data.Value'>@data.Text</option>
                                        }
                                    }
                                }
                            </select>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            @Html.LabelFor(model => model.DeptId)<text style="color:red;">*</text>
                        </td>
                        <td class="col">
                            <select class="form-control select-fixed-multiple" data-fouc id="DeptId" name="DeptId" multiple="multiple" @*onchange="GetEmployeeList()"*@ required>
                                @if (ViewBag.Department != null)
                                {
                                    foreach (var item in ViewBag.Department)
                                    {
                                        if (Array.IndexOf(Model.DeptId.ToString().Split(','), item.Value) >= 0)
                                        {
                                            <option value='@item.Value' selected>@item.Text</option>
                                        }
                                        else
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                }
                            </select>
                            <br />
                            @Html.ValidationMessageFor(m => m.DeptId)
                        </td>

                        <td class="col-xs-3 col-md-2">
                            @Html.LabelFor(model => model.Location)<text style="color:red;">*</text>
                        </td>
                        <td class="col">
                            <select class="form-control select-fixed-multiple" data-fouc id="Location" name="Location" multiple="multiple" @*onchange="GetEmployeeList()"*@ required>
                                @if (ViewBag.Location != null)
                                {
                                    foreach (var item in ViewBag.Location)
                                    {
                                        if (Array.IndexOf(Model.Location.ToString().Split(','), item.Value) >= 0)
                                        {
                                            <option value='@item.Value' selected>@item.Text</option>
                                        }
                                        else
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                }
                            </select>
                            <br />
                            @Html.ValidationMessageFor(m => m.Location)
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">

                            @Html.LabelFor(model => model.DocName)

                        <td class="col">

                            @Html.DisplayFor(model => model.DocName)

                        </td>
                        <td class="col-xs-3 col-md-2">


                            @Html.LabelFor(model => model.DocRef)

                        </td>
                        <td class="col">

                            @Html.DisplayFor(model => model.DocRef)

                        </td>

                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">

                            @Html.LabelFor(model => model.Doc_Origin)

                        </td>
                        <td class="col">

                            <input type="text" id="Doc_Origin" name="Doc_Origin" value="@Model.Doc_Origin" class="form-control" />

                        </td>



                        <td class="col-xs-3 col-md-2">

                            @Html.LabelFor(model => model.DocDate)
                            @*<text style="color:red;">*</text>*@
                        </td>
                        <td class="col">
                            @if (Model.DocDate != null && Model.DocDate > Convert.ToDateTime("01/01/0001"))
                            {
                                <input type="date" id="DocDate" name="DocDate" value="@Model.DocDate.ToString("yyyy-MM-dd")" class="form-control" @*required*@ />
                            }
                            else
                            {
                                <input type="date" id="DocDate" name="DocDate"  class="form-control" @*required*@ />
                            }
                        </td>
                    </tr>
                    <tr class="row">
                        @*<td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.RevNo)
                </div>
            </td>
            <td>
                <div class="editor-field">
                   <input type="number" id="RevNo" name="RevNo" value="@Model.RevNo" />
                </div>
            </td>*@

                        <td class="col-xs-3 col-md-2">

                            @Html.LabelFor(model => model.IssueNo)

                        </td>
                        <td class="col">

                            <input type="text" id="IssueNo" name="IssueNo" value="@Model.IssueNo" class="form-control" />

                        </td>

                        <td class="col-xs-3 col-md-2">

                            @Html.LabelFor(model => model.Eve_Date)
                            <text style="color:red;">*</text>
                        </td>
                        <td class="col">

                            @if (Model.Eve_Date != null && Model.Eve_Date > Convert.ToDateTime("01/01/0001"))
                            {
                                <input type="date" id="Eve_Date" name="Eve_Date" value="@Model.Eve_Date.ToString("yyyy-MM-dd")" required class="form-control" />
                            }
                            else
                            {
                                <input type="date" id="Eve_Date" name="Eve_Date" required class="form-control" />
                            }

                        </td>

                    </tr>
                    <tr class="row">
                        @*<td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.DeptId)
                </div>
                 </td>
            <td>
                <div class="editor-field">
                    <select id="DeptId" name="DeptId">
                        <option value='' hidden>Select</option>
                        @if (ViewBag.DeptId != null)
                        {
                            foreach (var item in ViewBag.DeptId)
                            {
                                if (item.Value == Model.DeptId.ToString())
                                {
                                <option value='@item.Value' selected>@item.Text</option>
                                }
                                else
                                {
                                <option value='@item.Value'>@item.Text</option>
                                }
                            }
                        }
                    </select>
                </div>
            </td>*@
                        @* <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.CustodyOf)<text style="color:red;">*</text>
                </div>
            </td>
            <td>
                <div class="editor-field">
                     <input type="text" id="CustodyOf" name="CustodyOf" value="@ViewBag.CustodyOfVal" required/>
                    <input type="hidden" id="CustodyOfVal" name="CustodyOfVal" value="@Model.CustodyOf"/>
                </div>
            </td>*@


                        @*  <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.MethodOf_Updating)
                </div>
            </td>
            <td>
                <div class="editor-field">
                    <input type="text" id="MethodOf_Updating" name="MethodOf_Updating" value="@Model.MethodOf_Updating" />
                </div>
            </td>*@
                    </tr>
                    <tr class="row">
                        @*<td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Updated_Thru)
                </div>
            </td>
            <td>
                <div class="editor-field">
                    <input type="text" id="Updated_Thru" name="Updated_Thru" value="@Model.Updated_Thru" />
                </div>
            </td>*@
                        <td class="col-xs-3 col-md-2">

                            @Html.LabelFor(model => model.Person_Responsible)
                            <text style="color:red;">*</text>
                        </td>
                        <td class="col">

                            <select class="form-control select-fixed-multiple" multiple="multiple" id="Person_Responsible" name="Person_Responsible" required>
                                <option value='' hidden>Select</option>
                                @if (ViewBag.EmpList != null)
                                {
                                    foreach (var item in ViewBag.EmpList)
                                    {
                                        if (Array.IndexOf(Model.Person_Responsible.ToString().Split(','), item.Value) >= 0)
                                        {
                                            <option value='@item.Value' selected>@item.Text</option>
                                        }
                                        else
                                        {
                                            <option value='@item.Value'>@item.Text</option>
                                        }
                                    }
                                }

                            </select>

                        </td>
                        <td class="col-xs-3 col-md-2">

                            @Html.LabelFor(model => model.NotificationPeriod)

                        </td>
                        <td class="col">
                            <div class="form-group form-group-float">
                                <select class="form-control select-search select2-hidden-accessible" id="NotificationPeriod" name="NotificationPeriod" data-fouc required>
                                    @if (ViewBag.NotificationPeriod != null)
                                    {
                                        foreach (var data in ViewBag.NotificationPeriod)
                                        {
                                            if (data.Key == Model.NotificationPeriod)
                                            {
                                                <option value='@data.Key' selected>@data.Value</option>
                                            }
                                            else
                                            {
                                                <option value='@data.Key'>@data.Value</option>
                                            }
                                        }
                                    }
                                </select>
                            </div>
                            <div class="form-group form-group-float">
                                <input class="form-control" type="number" id="NotificationValue" name="NotificationValue" value="@Model.NotificationValue"  />

                                <span class="form-text text-muted"><code>(Alert on or before Target date)</code></span>


                            </div>


                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">

                            @Html.LabelFor(model => model.Remarks)

                        </td>
                        <td class="col">
                            <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="Remarks" name="Remarks">@Model.Remarks</textarea>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            @Html.LabelFor(model => model.branch)
                        </td>
                        <td class="col">
                            <select class="form-control select-fixed-multiple" multiple="multiple" data-fouc id="branch" name="branch">
                                @*<option value='' hidden>Select</option>*@
                                @if (ViewBag.Branch != null)
                                {
                                    foreach (var data in ViewBag.Branch)
                                    {
                                        if (Array.IndexOf(Model.branch.ToString().Split(','), data.Value) >= 0)
                                        {
                                            <option value='@data.Value' selected>@data.Text</option>
                                        }
                                        else
                                        {
                                            <option value='@data.Value'>@data.Text</option>
                                        }
                                    }
                                }
                            </select>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            @Html.LabelFor(model => model.SoftCopy_Path)
                            <text style="color:red;">*</text>

                        </td>
                        <td class="col">
                            <input type="file" name="SoftCopy_Path" id="SoftCopy_Path" onchange="FileFormatValidation(this)" accept=".pdf,.xlsx,.xls,.jpeg,.jpg,.png,.doc,.docx,image/*"
                                   class="bootstrap-uploader" data-fouc" />

                            @if (Model.SoftCopy_Path != "")
                            {
                                <a href='@Url.Action("DisplayDocument", "Reports", new { Document = Model.SoftCopy_Path })' target="_blank" style="color: orange;">Preview</a>
                            }
                            @Html.ValidationMessageFor(m => m.SoftCopy_Path)
                        </td>
                    </tr>
                </table>
            </div>

        </div>

        <div class="card-footer bg-white d-flex justify-content-between align-items-center">

            @Html.ActionLink("Back to List", "MgmtExternalDocumentList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })

            <button class="btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400" type="submit" value="Update" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Save</button>

        </div>
    </div>
       
        }



        @section Scripts {
            <script>

                    //----zzz
                    $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
                    });

    //zzz----





                function FileFormatValidation(file) {
                    var ext = file.value.split(".").pop().toLowerCase();
                    if ($.inArray(ext, ["pdf", "xlsx", "xls", "doc", "docx", "jpeg", "jpg", "png"]) == -1) {
                        file.value = "";
                        bootbox.alert({
                            title: 'File type',
                            message: 'Invalid file format, please upload only xlsx,xls,pdf,jpeg,jpg,png format.'
                        });
                    }
                }

      function GetDeptList() {
             $("#DeptId").empty();
             var sStd = $('#branch').val();
                jQuery.ajax({
                    url: '@Url.Action("FunGetDeptList", "EmployeeDetails")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'branch': sStd },
                    success: function (result) {

                        if (result != null && result.length > 0) {
                            $("#DeptId").append("<option value=''>" + "Select" + "</option>");
                            $.each(result, function (index, item) {
                                $("#DeptId").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                                $("#DeptId").trigger('change');
                            });
                            return;
                        }
                        else {
                            bootbox.alert({
                                title: 'Group Code',
                                message: 'Please add group code to this directorate selected'
                            });
                            return;
                        }
                    }
                });
        }

            function GetLocList(svalue) {
            jQuery.ajax({
                url: '@Url.Action("FunGetGLocListbymultiBranch", "Global")',
                type: 'POST',
                dataType: "json",
                data: { 'branch': svalue },
                success: function (result) {
                    $("#Location").children('option').remove();
                    $("#Location").trigger('change');
                    if (result != null && result.length > 0) {
                        $.each(result, function (index, item) {
                            $("#Location").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                        });
                        $("#Location").trigger('change');
                        return;
                    }
                }
            });
        }

         function GetEmployeeList() {
             var sbranch = $.map($("#branch option:selected"), function (el, i) {
                 return $(el).val();
             });
             var sbvalue = (sbranch.join(","));

             var sDepartment = $.map($("#DeptId option:selected"), function (el, i) {
                 return $(el).val();
             });
             var sdvalue = (sDepartment.join(","));

             var sLocation = $.map($("#Location option:selected"), function (el, i) {
                 return $(el).val();
             });
             var slvalue = (sLocation.join(","));

            jQuery.ajax({
                url: '@Url.Action("FunGetGEmpListBymulitBDL", "Global")',
                type: 'POST',
                dataType: "json",
                data: { 'sDivision': sbvalue, 'sDept': sdvalue, 'sLoc': slvalue},
                success: function (result) {
                    $("#Person_Responsible").children('option').remove();
                    $("#Person_Responsible").trigger('change');
                    if (result != null && result.length > 0) {
                        $.each(result, function (index, item) {
                            $("#Person_Responsible").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                        });
                        $("#Person_Responsible").trigger('change');
                        return;
                    }
                }
            });
        }

            </script>
            @Scripts.Render("~/bundles/jqueryval")
        }
