@using PagedList;
@using PagedList.Mvc;

@model IPagedList<ISOStd.Models.GenerateInspectionChecklistModels>

@{
    ViewBag.Title = "InspectionList";
    string fromdate = DateTime.Now.AddMonths(-1).ToString("dd/MM/yyyy"), todate = DateTime.Now.ToString("dd/MM/yyyy");
    string chked = Convert.ToString(ViewBag.chkAll);
    ISOStd.Models.clsGlobal objGlobaldata = new ISOStd.Models.clsGlobal();
    if (ViewBag.InspfromDate != null && ViewBag.InsptoDate != null)
    {
        fromdate = ViewBag.InspfromDate;
        todate = ViewBag.InsptoDate;
    }
}

<div class="groupedassets margin10">
    <span class="groupedassetshead margin10 onestphdcolor">Inspection List</span>
</div>
    @*<div class = "ActionLink">@Html.ActionLink("Add New", "AddMgmtDocuments", null, new { @class = "ActionLink", onclick="HyperLinkProgressIconFunction()" })</div>*@

<div id="divmsg">
    @if (TempData["alertdata"] != null)
    {
        <span class="errMsg" style="color: red;font-weight: bold;">@TempData["alertdata"]</span>
    }
    @if (TempData["Successdata"] != null)
    {
        <span class="errMsg" style="color: green; font-weight: bold;">@TempData["Successdata"]</span>
    }
</div>
 <br />
<div>
 @Html.ActionLink("Back to List", "InspectionList", null,new { @class = "ActionLink", onclick="HyperLinkProgressIconFunction()" })
    </div>
@using (Html.BeginForm("InspectionChecklistListSearch", "Inspection", FormMethod.Post, new { id = "form1", name = "form1" })) 
{
     <input type="hidden" id="fromdate" name="fromdate" value="@fromdate" />
    <input type="hidden" id="todate" name="todate" value="@todate" />
    <input type="text" id="Category" name="Category" value="@ViewBag.Category" />
   
    <p>
        <span id="tab" style="color: #31b0d5; padding-right: 5px; padding-left: 50px; font-weight: bold;">
            <input type="checkbox" value="All" id="chkAll" name="chkAll" title="Select in case to see all records" />All</span>
        <b style="color: #31b0d5;">Inspection Date </b>from<input type="text" id="InspfromDate" name="InspfromDate" value="@fromdate" style="margin-left: 5px;"/>
        to<input type="text" style="margin-left: 5px;" id="InsptoDate" name="InsptoDate" value="@todate"/>
           
        <button type="submit" class="btn btn-info" onclick="ProgressIconFunction('#form1')">
            <span class="glyphicon glyphicon-search"></span>Search
        </button>
         <span style="margin-left: 20px"> <img src="@Url.Content("~/Images/excel.png")" title="Export as Excel" style="cursor:pointer; " id="downloadLink" />Download</span>
    </p>
}

    @Html.PagedListPager(Model, page => Url.Action("InspectionList",
    new
    {
        page,
        SearchText = Request.QueryString["SearchText"],

    }),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true })


<div id="content">
    <table id="table1">
        <thead>
            <tr>
                <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().id_inspection_checklist)
                </th>
                <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().Category)
                </th>
                <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().Inspection_date)
                </th>
                <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().Inspection_by)
                </th>
                <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().Location)
                </th>
                <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().Project)
                </th>
                <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().TagNo)
                </th>
                <th style="width:150px;min-width:150px; max-width:150px;">
                    @Html.DisplayNameFor(model => model.First().Comment)
                </th>
                <th style="width:60px;min-width:60px; max-width:60px;">
                    Edit
                </th>
                @if (ViewBag.DeleteFlg != null && ViewBag.DeleteFlg == true)
                {
                    <th style="width:60px;min-width:60px; max-width:60px;">Delete </th>
                }

            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Count() > 0)
            {
                foreach (var item in Model)
                {
            <tr>
                <td style="width:150px; min-width:150px; max-width:150px;">
                    @Html.ActionLink(item.id_inspection_checklist.ToString(), "InspectionChecklistDetails", new { id_inspection_checklist = item.id_inspection_checklist }, new { onclick = "HyperLinkProgressIconFunction()" })
                </td>

                <td style="width:150px; min-width:150px; max-width:150px;">
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td style="width:150px; min-width:150px; max-width:150px;">
                    @if (item.Inspection_date > Convert.ToDateTime("01/01/0001"))
                    {
                        @item.Inspection_date.ToString("dd/MM/yyyy")
                    }
                </td>
                <td style="width:150px; min-width:150px; max-width:150px;">
                    @Html.DisplayFor(modelItem => item.Inspection_by)
                </td>
                <td style="width:150px; min-width:150px; max-width:150px;">
                    @Html.DisplayFor(modelItem => item.Location)
                </td>
                <td style="width:150px; min-width:150px; max-width:150px;">
                    @Html.DisplayFor(modelItem => item.Project)
                </td>
                <td style="width:150px; min-width:150px; max-width:150px;">
                    @Html.DisplayFor(modelItem => item.TagNo)
                </td>
                <td style="width:150px; min-width:150px; max-width:150px;">
                    @Html.DisplayFor(modelItem => item.Comment)
                </td>
                <td style="width:60px; min-width:60px; max-width:60px;">
                    <a href='@Url.Action("InspectionChecklistEdit", "Inspection", new { id_inspection_checklist = item.id_inspection_checklist })' title="Edit Calibration details">
                        <span class="glyphicon glyphicon glyphicon-edit iocnstatus-edit"></span>
                    </a>
                  
                </td>
                @if (ViewBag.DeleteFlg != null && ViewBag.DeleteFlg == true)
                {
                    <td style="width: 60px; min-width: 60px; max-width: 60px;">

                        @*<a href='@Url.Action("CustomerEnquiryDelete", "CustomerEnquiry", new { enquiry_id = item.Enquiry_id.ToString() })' title="Delete Enquiry" >*@
                        <img src="@Url.Content("~/Images/delete.png")" title="Delete Document" onclick="DeleteItems(@item.id_inspection_checklist,@item.Category)" style="cursor:pointer;" />
                    </td>
                }

            </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="10">
                        <div style="text-align: center;">
                            <h4 style="color: grey;">No data exists</h4>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
</table>
</div>
@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        $(function () {

            $('#InspfromDate').datepicker({
                dateFormat: "dd/mm/yy",
                buttonImageOnly: true,
                buttonImage: '../Images/Calender.png',
                showOn: 'both',
                changeMonth: true,
                changeYear: true,
            });

            $('#InsptoDate').datepicker({
                dateFormat: "dd/mm/yy",
                buttonImageOnly: true,
                buttonImage: '../Images/Calender.png',
                showOn: 'both',
                changeMonth: true,
                changeYear: true,
            });

        });

        function DeleteItems(id_inspection_checklist, Category) {
            alert(Category);
            jConfirm('Do you want to delete?', 'Are you Sure?', function (r) {
                if (r == true) {
                    jQuery.ajax({
                        url: '@Url.Action("InspectionChecklistDocDelete", "Inspection")',
                        type: 'POST',
                        dataType: "json",
                        data: { 'id_inspection_checklist': id_inspection_checklist },
                        success: function (result) {
                            //var params = {
                            //    View: 1
                            //};

                            //// Add new params to the querystring dictionary
                            window.location.href =
                                window.location.protocol + "//" +
                                window.location.host +
                                window.location.pathname +
                               '?Category=' + Category;
                            
                        }
                    });
                    return true;
                }
                else if (r == false) {
                    return false;
                }
            });
        }

        function downloadInnerHtml(filename, elId) {
            var $table = $('#table1');
            $rows = $table.find('tr');

            var csvData = "";

            for (var i = 0; i < $rows.length; i++) {
                var $cells = $($rows[i]).children('th,td'); //header or content cells

                for (var y = 0; y < $cells.length; y++) {
                    if (y > 0) {
                        csvData += ",";
                    }

                    var txt = ($($cells[y]).text()).toString().trim();

                    if (txt.indexOf(',') >= 0 || txt.indexOf('\"') >= 0 || txt.indexOf('\n') >= 0) {
                        txt = "\"" + txt.replace(/\"/g, "\"\"") + "\"";
                    }
                    csvData += txt;
                }
                csvData += '\n';
            }


            var elHtml = csvData;
            var link = document.createElement('a');
            mimeType = 'application/csv;charset=utf-8';

            link.setAttribute('download', filename);
            link.setAttribute('href', 'data:' + mimeType + ';charset=utf-8,' + encodeURIComponent(elHtml));
            link.click();
        }

        var fileName = 'InspectionList.csv'; // You can use the .txt extension if you want

        $('#downloadLink').click(function () {
            downloadInnerHtml(fileName, 'content');
        });
    </script>

}
