@model ISOStd.Models.NCRCAPAModels
@using System.Data
@{
    ViewBag.Title = "NCRCAPADetails";
    DataSet dsCAPA = ViewBag.CAPADetails;
    ISOStd.Models.clsGlobal obj = new ISOStd.Models.clsGlobal();
}


@section featured {

    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>

            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">

                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("NCRCAPAList", "NCRCAPA", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> NCRCAPA List</span>
                    </a>
                    <span class="breadcrumb-item active"> NCR-CAPA Details </span>
                </div>

                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            <div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">


                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">

                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


<style>
    .hidden {
        display: none !important;
    }
</style>

<div class="card">
    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">NCR Action Details</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>

            </div>
        </div>
    </div>


    <div class="card-body">

        @Html.ActionLink("Back to List", "NCRCAPAList", null, null, new { @class = "btn btn-outline bg-orange text-orange border-orange", onclick = "HyperLinkProgressIconFunction()" })

    </div>
    <div class="container-fluid">
        <table class="table table-dark table-bordered table-striped table-hover bg-blue-800">
            <thead></thead>
            <tbody>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">

                            @Html.LabelFor(model => model.NC_Num)
                        </p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.NC_Num)
                        </span>
                    </td>
                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.LabelFor(model => model.AuditNum)
                        </p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.AuditNum)
                        </span>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            Branch
                        </p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.Branch)
                        </span>
                    </td>
                </tr>
                <tr class="row">

                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.LabelFor(model => model.IssuedOn)
                        </p>
                    </td>
                    <td class="col">

                        @if (Model.IssuedOn > Convert.ToDateTime("01/01/0001"))
                        {
                            <span class="bg-dark py-1 px-2 rounded">
                                @Model.IssuedOn.ToString("dd/MM/yyyy")
                            </span>
                        }

                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.LabelFor(model => model.IssuedBy)
                        </p>
                    </td>

                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.IssuedBy)
                        </span>
                    </td>
                </tr>

                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.LabelFor(model => model.Discrepancy_Related)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.Discrepancy_Related)
                        </p>
                    </td>
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.LabelFor(model => model.issuedTo)
                        </p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.issuedTo)
                        </span>
                    </td>

                </tr>
                <tr class="row">
                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.LabelFor(model => model.Discrepancy_Details)
                        </p>
                    </td>
                    <td class="col">
                        <p class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.Discrepancy_Details)
                        </p>

                    </td>
                </tr>
                <tr class="row">

                    <td class="col-xs-3 col-md-2">
                        <p class="bg-brown py-1 px-2 rounded">
                            @Html.LabelFor(model => model.FindingType)
                        </p>
                    </td>
                    <td class="col">
                        <span class="bg-dark py-1 px-2 rounded">
                            @Html.DisplayFor(model => model.FindingType)
                        </span>

                    </td>
                    @if (obj.GetCurrentUserSession().RaiseNc.Contains("4"))
                    {
                        <td class="col-xs-3 col-md-2">
                            <p class="bg-brown py-1 px-2 rounded">
                                @Html.DisplayNameFor(model => model.upload)
                            </p>
                        </td>
                        <td class="col">

                            @if (Model.upload != null && Model.upload != "" && Model.upload.Length > 0)
                            {
                                foreach (var docs in Model.upload.Trim(',').Split(','))
                                {
                                    <p>
                                        <span class="bg-dark py-1 px-2 rounded">
                                            <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" style="color: orange;">
                                                @System.IO.Path.GetFileName(docs)
                                            </a>
                                        </span>
                                    </p>
                                }
                            }

                        </td>
                    }
                </tr>
            </tbody>
        </table>

    </div>
</div>



@if (dsCAPA != null && dsCAPA.Tables.Count > 0 && dsCAPA.Tables[0].Rows.Count > 0)
{





    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">NCR Status Details</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>

                </div>
            </div>
        </div>
        <div class="card-body">


            <table class="table table-bordered table-striped table-hover datatable-responsive" id="NCR">
                <thead>

                    <tr class="bg-brown">
                        <th>NC Number</th>
                        <th>Correction Taken By</th>
                        <th>Correction Take on</th>
                        <th>CAPA</th>
                        <th>CAPA Implemented On</th>
                        <th>Action Proposed By</th>
                        <th>Status</th>
                        <th>Closed On</th>
                        <th>Verified By</th>

                    </tr>
                </thead>
                <tbody>

                    @for (int i = 0; i < dsCAPA.Tables[0].Rows.Count; i++)
                    {
                        <tr>
                            <td>
                                @dsCAPA.Tables[0].Rows[i]["NC_Num"].ToString()
                            </td>
                            <td>
                                @obj.GetEmpHrNameById(dsCAPA.Tables[0].Rows[i]["Correction_taken_by"].ToString())
                            </td>
                            <td>
                                @if (dsCAPA.Tables[0].Rows[i]["Correction_taken_on"].ToString() != null && dsCAPA.Tables[0].Rows[i]["Correction_taken_on"].ToString() != "")
                                {
                                    @Convert.ToDateTime(dsCAPA.Tables[0].Rows[i]["Correction_taken_on"].ToString()).ToString("dd/MM/yyyy")
                                }
                            </td>
                            <td>
                                @dsCAPA.Tables[0].Rows[i]["CAPA_Need"].ToString()
                            </td>
                            <td>
                                @if (dsCAPA.Tables[0].Rows[i]["CA_Impl_On"].ToString() != null && dsCAPA.Tables[0].Rows[i]["CA_Impl_On"].ToString() != "")
                                {
                                    @Convert.ToDateTime(dsCAPA.Tables[0].Rows[i]["CA_Impl_On"].ToString()).ToString("dd/MM/yyyy")
                                }
                            </td>
                            <td>
                                @obj.GetEmpHrNameById(dsCAPA.Tables[0].Rows[i]["CA_Proposed_By"].ToString())
                            </td>
                            <td>
                                @dsCAPA.Tables[0].Rows[i]["NCR_Status"].ToString()
                            </td>
                            <td>
                                @if (dsCAPA.Tables[0].Rows[i]["Report_Closed_On"].ToString() != null && dsCAPA.Tables[0].Rows[i]["Report_Closed_On"].ToString() != "")
                                {
                                    @Convert.ToDateTime(dsCAPA.Tables[0].Rows[i]["Report_Closed_On"].ToString()).ToString("dd/MM/yyyy")
                                }
                            </td>
                            <td>
                                @obj.GetEmpHrNameById(dsCAPA.Tables[0].Rows[i]["VerifiedBy"].ToString())
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@section Scripts {
    <script>

                 //----zzz
    $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
    }
    });


                    var NCR = function () {


                        //
                        // Setup module components
                        //

                        // Basic Datatable examples
                        var _componentDatatableBasic = function () {
                            if (!$().DataTable) {
                                console.warn('Warning - datatables.min.js is not loaded.');
                                return;
                            }

                            //Setting datatable defaults
                            $.extend($.fn.dataTable.defaults, {
                                autoWidth: false,
                                responsive: true,


                                colReorder: false,
                                dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                                //dom: 'lBfrtip',
                                language: {
                                    search: '<span>Filter:</span> _INPUT_',
                                    searchPlaceholder: 'Type to filter...',
                                    lengthMenu: '<span>Show:</span> _MENU_',
                                    paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                                }
                            });

                    var myClass = "";
                var Delclass= @(obj.GetCurrentUserSession().RaiseNc.Contains("4") ? "true" : "false");
                            if (Delclass == false) { myClass = 'hidden' };

                            var table = $('#NCR').DataTable({

                                lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                                colReorder: {
                                    fixedColumnsLeft: 1
                                },
                                stateSave: true,
                                stateSaveParams: function (settings, data) {
                                    for (var i = 0, ien = data.columns.length; i < ien; i++) {
                                        delete data.columns[i].visible;
                                        delete data.columns[i].search;
                                    }
                                },
                                scrollY: '350px',
                                scrollCollapse: true,


                                keys: {
                                    className: 'focus focus-success'
                                },

                                buttons: {
                                    buttons: [
                                        {
                                            extend: 'copyHtml5',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'NCR Audit Data export',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },
                                        },
                                        {
                                            extend: 'excelHtml5',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'NCR Audit Data export',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },

                                        },
                                        {
                                            extend: 'pdfHtml5',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'NCR Audit Data export',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },
                                        },
                                        {
                                            extend: 'csvHtml5',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'NCR Audit Data export',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },
                                        },
                                        {
                                            extend: 'print',
                                            className: myClass,
                                            //className: 'btn btn-light',
                                            title: 'NCR Audit Data export',
                                            exportOptions: {
                                                columns: ':visible :not(.not-export-column)'
                                            },
                                        },

                                        {
                                            extend: 'colvis',
                                            text: '<i class="icon-three-bars"></i>',
                                            className: 'btn bg-blue btn-icon dropdown-toggle',
                                            columns: ':visible:not(.not-export-column)'
                                        }
                                    ]
                                }




                            });
                            // Adjust columns on window resize
                            setTimeout(function () {
                                $(window).on('resize', function () {
                                    table.columns.adjust();
                                });
                            }, 100);


                            //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                            $('.sidebar-control').on('click', function () {

                                setTimeout(function () {
                                    //alert("gii");

                                    table.columns.adjust().draw();
                                    $("#NCR").resize();
                                }, 100);

                            });
                            //}

                            $('#NCR').on('page.dt', function () {
                                //table.draw();
                                //alert("zzz1");
                                $("#NCR").resize();

                            });

                            $('#NCR').on('column-visibility.dt', function () {
                                //table.draw();
                                //alert("zzz2");
                                $("#NCR").resize();

                            });

                            $('#NCR').on('order.dt', function () {
                                //table.draw();
                                //alert("zzz3");
                                $("#NCR").resize();

                            });


                            $('#NCR').on('responsive-display.dt', function () {
                                //table.draw();
                                //alert("zzz4");
                                $("#NCR").resize();

                            });


                            $('#NCR').on('responsive-resize.dt', function () {
                                //table.draw();
                                //alert("zzz4");
                                $("#NCR").resize();

                            });
                        };



                        // Select2 for length menu styling
                        var _componentSelect2 = function () {
                            if (!$().select2) {
                                console.warn('Warning - select2.min.js is not loaded.');
                                return;
                            }

                            // Initialize
                            $('.dataTables_length select').select2({
                                minimumResultsForSearch: Infinity,
                                dropdownAutoWidth: true,
                                width: 'auto'
                            });
                        };


                        //
                        // Return objects assigned to module
                        //

                        return {
                            init: function () {
                                _componentDatatableBasic();
                                _componentSelect2();
                            }
                        }
                    }();


                    // Initialize module
                    // ------------------------------

                    document.addEventListener('DOMContentLoaded', function () {
                        NCR.init();
                    });



    </script>
}
