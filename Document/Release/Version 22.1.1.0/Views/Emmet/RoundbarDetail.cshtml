@model ISOStd.Models.EmmetModels
@{
    ViewBag.Title = "";
    ISOStd.Models.EmmetModelsList objTranList = new ISOStd.Models.EmmetModelsList();
    ISOStd.Models.EmmetModels objModel = new ISOStd.Models.EmmetModels();
    ISOStd.Models.clsGlobal obj = new ISOStd.Models.clsGlobal();

    int icnts = 0;

    if (ViewBag.objList != null)
    {
        objTranList = ViewBag.objList;
        icnts = objTranList.EmmetList.Count;
    }
}
<div class="groupedassets margin10">
    <span class="groupedassetshead margin10 onestphdcolor">Receive Details</span>
</div>

<div id="divmsg">
    @if (TempData["alertdata"] != null)
    {
        <span class="errMsg" style="color: red; font-weight: bold;">@TempData["alertdata"]</span>
    }
    @if (TempData["Successdata"] != null)
    {
        <span class="errMsg" style="color: green; font-weight: bold;">@TempData["Successdata"]</span>
    }
</div>
<div>

  @*  @Html.ActionLink("Edit", "RoundbarEdit", new { id_roundbar = Model.id_roundbar }, new { @class = "ActionLink", onclick = "HyperLinkProgressIconFunction()" })*@

    @Html.ActionLink("Back to List", "RoundbarList", null, new { @class = "ActionLink", onclick = "HyperLinkProgressIconFunction()" })
</div>
<br>
<div>
    <fieldset>
        <legend></legend>
     
        <table id="tabcontent">
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.added_date)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @if (Model.added_date != null && Model.added_date > Convert.ToDateTime("01/01/0001"))
                    {
                            @Html.Label(Model.added_date.ToString("dd/MM/yyyy"))
                    }
                    </div>
                </td>
             @*   <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.material)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.DisplayFor(model => model.material)
                    </div>
                </td>*@
            </tr>
            <tr>
                @*  <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.diameter)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.DisplayFor(model => model.diameter)
                    </div>
                </td>*@
                  <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.po)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.DisplayFor(model => model.po)
                    </div>
                </td>
           
                  <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.supplier)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.DisplayFor(model => model.supplier)
                    </div>
                </td>
                 </tr>
            <tr>
                 <td>
                    <div class="display-label">
                        @Html.DisplayNameFor(model => model.po_upload)
                    </div>
                </td>
                <td>
                    <div class="display-field">
                        @if (Model.po_upload != null && Model.po_upload != "" && Model.po_upload.Length > 0)
                        {
                            foreach (var docs in Model.po_upload.Trim(',').Split(','))
                            {
                        <p style="margin: 0px;">

                            <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" style="color: orange;">
                                Preview
                            </a>
                        </p>
                            }
                        }
                    </div>
                </td>
           
                   <td>
                    <div class="display-label">
                        @Html.DisplayNameFor(model => model.mtc_upload)
                    </div>
                </td>
                <td>
                    <div class="display-field">
                        @if (Model.mtc_upload != null && Model.mtc_upload != "" && Model.mtc_upload.Length > 0)
                        {
                            foreach (var docs in Model.mtc_upload.Trim(',').Split(','))
                            {
                        <p style="margin: 0px;">

                            <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" style="color: orange;">
                               Preview
                            </a>
                        </p>
                            }
                        }
                    </div>
                </td>
            </tr>
        </table>
    </fieldset>
</div>
<div id="dvDescItems">
   
   
    <table id="team-list1">
        <tr>
              <th colspan="8" style="background-color: #4cc4dd;color: white">
                            List
                        </th>
        </tr>
        <tr>
           
           <th style="width: 50px; min-width: 50px; max-width: 50px;">Sl No</th>
                  <th style="width: 150px; min-width: 150px; max-width: 150px;">Category</th>
                  <th style="width: 150px; min-width: 150px; max-width: 150px;">Material</th>
                        <th style="width: 150px; min-width: 150px; max-width: 150px;">Heat No</th>
                        <th style="width: 150px; min-width: 150px; max-width: 150px;">Length</th>
                        <th style="width: 150px; min-width: 150px; max-width: 150px;">Qty</th>
                        <th style="width: 150px; min-width: 150px; max-width: 150px;">Price per Inch</th>
                        <th style="width: 150px; min-width: 150px; max-width: 150px;">Total Price</th>
        </tr>
          <tr>
                       
                    </tr>
        @if (objTranList.EmmetList != null && objTranList.EmmetList.Count > 0)
        {

            for (int index = 0,i=1; index < objTranList.EmmetList.Count; index++,i++)
            {
                <tr>
                    <td style="width: 50px; min-width: 50px; max-width: 50px;">
                           @i
                        </td>
                      <td style="width: 150px; min-width: 150px; max-width: 150px;">
                    @obj.GetDropdownitemById(objTranList.EmmetList[index].category)
                </td>
                <td style="width: 150px; min-width: 150px; max-width: 150px;">
                    @obj.getMaterialById(objTranList.EmmetList[index].material)
                </td>
                     <td style="width: 150px; min-width: 150px; max-width: 150px;">
                            @(objTranList.EmmetList[index].heatno)
                        </td>
                    <td style="width: 150px; min-width: 150px; max-width: 150px;">
                            @(objTranList.EmmetList[index].length)
                        </td>
                    <td style="width: 150px; min-width: 150px; max-width: 150px;">
                            @(objTranList.EmmetList[index].qty)
                        </td>
                    <td style="width: 150px; min-width: 150px; max-width: 150px;">
                            @(objTranList.EmmetList[index].price)
                        </td>
                      <td style="width: 150px; min-width: 150px; max-width: 150px;">
                            @(objTranList.EmmetList[index].tprice)
                        </td>

                </tr>
               

            }
        }
    </table>
</div>