@model ISOStd.Models.DocumentCreateRequestModels

@{
    ViewBag.Title = "DocCreateRequestEdit";
}

@section featured {
    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">
                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("DocCreateRequestList", "DocumentCreateRequest")" class="breadcrumb-item">
                        <span class="breadcrumb-item">Document Create Request List</span>
                    </a>
                    <span class="breadcrumb-item active">Update Document Create Request</span>
                </div>
                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            @*<div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">
                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>
                        <div class="dropdown-menu dropdown-menu-right">
                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
}

@using (Html.BeginForm("DocCreateRequestEdit", "DocumentCreateRequest", FormMethod.Post,
                     new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Update Document Create Request</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">
                <input type="hidden" id="id_doc_request" name="id_doc_request" value="@Model.id_doc_request" />
                <table class="table table-lg">
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.date_request)<text style="color:red;">*</text>
                            </div>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                @if (Model.date_request > Convert.ToDateTime("01/01/0001"))
                                {
                                    <input type="date" id="date_request" name="date_request" value="@Model.date_request.ToString("yyyy-MM-dd")" class="form-control" />
                                }
                                else
                                {
                                    <input type="date" id="date_request" name="date_request" required class="form-control" />
                                }
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            @Html.LabelFor(model => model.division)<text style="color:red;">*</text>
                        </td>
                        <td class="col-xs-6 col-md-4">
                            <div class="editor-field">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="division" name="division" required onchange="GetDeptList()">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.Branch != null)
                                    {
                                        foreach (var item in ViewBag.Branch)
                                        {
                                            if (item.Value == Model.division)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </div>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            @Html.LabelFor(model => model.department)<text style="color:red;">*</text>
                        </td>
                        <td class="col-xs-6 col-md-4">
                            <div class="editor-field">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="department" name="department" @*onchange="GetImsRole()"*@ required>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.Department != null)
                                    {
                                        foreach (var item in ViewBag.Department)
                                        {
                                            if (item.Value == Model.department)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-2">
                            @Html.LabelFor(model => model.location)<text style="color:red;">*</text>
                        </td>
                        <td class="col-xs-6 col-md-4">
                            <div class="editor-field">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="location" name="location" @*onchange="GetImsRole()"*@ required>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.location != null)
                                    {
                                        foreach (var item in ViewBag.location)
                                        {
                                            if (item.Value == Model.location)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </div>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            @Html.LabelFor(model => model.reason)
                        </td>
                        <td class="col" colspan="3">
                            @*<textarea id="editor-full" rows="4" cols="4">@Model.reason</textarea>*@
                            @Html.TextAreaFor(model => model.reason, new { @id = "editor-full", @rows = "4", @cols = "4" })
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                            To be checked by (Department Head)<text style="color:red;">*</text>
                        </td>
                        <td class="col">
                            <div class="editor-field">
                                <select class="form-control select-search select2-hidden-accessible" data-fouc id="checkedby" name="checkedby" onchange="GetCheckedEmpDetails()" required>
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.IMSGroup != null)
                                    {
                                        foreach (var item in ViewBag.IMSGroup)
                                        {
                                            if (item.Value == Model.checkedby)
                                            {
                                                <option value='@item.Value' selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </div>
                        </td>

                        <td class="col-xs-3 col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.upload) <text style="color:red">*</text>
                            </div>
                        </td>
                        <td class="col">
                            <input type="file" name="upload" id="upload" title="Documents" onchange="FileFormatValidation(this)"
                                   multiple="multiple" accept=".pdf, .doc, .docx,image/*" class="bootstrap-uploader" data-fouc />

                            <span class="form-text text-muted"><code>(Hold Ctrl Key in case of multiple files or drag multiple files and drop here)</code></span>
                            <br />
                            @if (Model.upload != null && Model.upload != "" && Model.upload.Length > 0)
                            {
                                <h6> <span class="bg-dark py-1 px-2 rounded">Document List</span></h6>

                                <span class="form-text text-muted">
                                    <code>
                                        (Uncheck in case to remove a uploaded file)
                                    </code>
                                </span>
                                foreach (var docs in Model.upload.Trim(',').Split(','))
                                {
                                    <div class="form-check">
                                        <label class="form-check-label">
                                            <input type="checkbox" id="QCDocsVal" name="QCDocsVal" class="form-check-input-styled QCDocsVal" value="@docs.Trim(',')" checked title="Uncheck in case to remove a uploaded file" data-fouc />
                                            <input type="hidden" id="QCDocsValselectall" name="QCDocsValselectall" />
                                            <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" class="text-orange">
                                                @System.IO.Path.GetFileName(docs)
                                            </a>
                                        </label>
                                    </div>
                                }
                            }
                        </td>
                    </tr>
                    @*<tr class="row">
                      <td class="col-xs-3 col-md-2">
                            @Html.LabelFor(model => model.division) <text style="color:red">*</text>
                        </td>
                        <td class="col-xs-6 col-md-4">
                            <select class="form-control select-fixed-multiple" multiple="multiple" data-fouc id="division" name="division" required>
                                @if (ViewBag.Branch != null)
                                {
                                    foreach (var data in ViewBag.Branch)
                                    {
                                        if (Array.IndexOf(Model.division.ToString().Split(','), data.Value) >= 0)
                                        {
                                            <option value='@data.Value' selected>@data.Text</option>
                                        }
                                        else
                                        {
                                            <option value='@data.Value'>@data.Text</option>
                                        }
                                    }
                                }
                            </select>
                        </td>
                    </tr>*@
                </table>

                <div class="card invisible" style="display:none" id="NominatedEmpDiv">
                    <div class="card-body">
                        <input type="hidden" id="itemcount" name="itemcount" value="0" />

                        <div class="card card-table table-responsive shadow-0 mb-0">
                            <table class="table" id="team-list">

                                <tr class="bg-blue">
                                    <th>Action</th>
                                    <th>Emp Id</th>
                                    <th>Name</th>
                                    <th>Department</th>
                                    <th>Email</th>
                                    <th>Mobile No.</th>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer bg-white d-flex justify-content-between align-items-center">
            @Html.ActionLink("Back to List", "DocCreateRequestList",null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })

            <button type="submit" id="btnCreate" value="Add" class="btn bg-indigo-400" onclick="ProgressIconFunction('#form1')"><i class="icon-checkmark3 mr-2"></i> Add</button>
        </div>
    </div>
}


@section Scripts {
    <script>
        GetCheckedEmpDetails();

        var showClass = 'is-visible';
        var hideClass = 'invisible';

                function FileFormatValidation(file) {
                    var ext = file.value.split(".").pop().toLowerCase();
                    if ($.inArray(ext, ["doc", "pdf", "docx", "xls", "xlsx", , "png", "jpg", "jpeg"]) == -1) {
                        file.value = "";
                        jAlert("Invalid file format, please upload only doc, pdf, docx, xls, xlsx, png, jpeg, jpg format");
                    }
                }


        function GetCheckedEmpDetails() {
            document.getElementById("NominatedEmpDiv").style.display = "none";
            var checkedby = $('#checkedby option:selected').val();

            if (checkedby != "" && checkedby != null)
            {
                jQuery.ajax({
                    url: '@Url.Action("FunGetEmpDetails", "DocumentCreateRequest")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'semp_no': checkedby },
                    success: function (result) {
                        if (result != null) {
                            var checkedby = $('#checkedby option:selected').val();
                            var empid = result.emp_id;
                            var empname = result.empname;
                            //var empdivision = result.division;
                            var empdept = result.department;
                            //var emploc = result.location;
                            var empemail = result.EmailId;
                            var empmobile = result.MobileNo;

                var cnt = document.getElementById("itemcount").value;

                document.getElementById("itemcount").value = cnt;
                // Find a <table> element with id="myTable":
                //document.getElementById("team-list tr").remove();

                var table = document.getElementById("team-list");

                if (table.rows.length > 1) {
                   document.getElementById("team-list").deleteRow(1);
                }

                // Create an empty <tr> element and add it to the 1st position of the table:
                var row = table.insertRow();


                // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
                var cell0 = row.insertCell(0);
                var cell1 = row.insertCell(1);
                var cell2 = row.insertCell(2);
                var cell3 = row.insertCell(3);
                var cell4 = row.insertCell(4);
                var cell5 = row.insertCell(5);
                //var cell6 = row.insertCell(6);

                cell0.innerHTML = "<span class='badge badge-info' onclick='deleteRow(this)' style='cursor:pointer;'>Delete</span> <input type='hidden' id='empno " + cnt + "' name='empno " + cnt + "' value='" + checkedby + "'>";
                cell1.innerHTML = "<input type='hidden' id='empid " + cnt + "' name='empid " + cnt + "' value='" + empid + "'>" + empid;
                cell2.innerHTML = "<input type='hidden' id='empname " + cnt + "' name='empname " + cnt + "' value='" + empname + "'>" + empname;
                //cell3.innerHTML = "<input type='hidden' id='empdivision " + cnt + "' name='empdivision " + cnt + "' value='" + empdivision + "'>" + empdivision;
                //cell4.innerHTML = "<input type='hidden' id='emploc " + cnt + "' name='emploc " + cnt + "' value='" + emploc + "'>" + emploc;
                cell3.innerHTML = "<input type='hidden' id='empdept " + cnt + "' name='empdept " + cnt + "' value='" + empdept + "'>" + empdept;
                cell4.innerHTML = "<input type='hidden' id='empemail " + cnt + "' name='empemail " + cnt + "' value='" + empemail + "'>" + empemail;
                cell5.innerHTML = "<input type='hidden' id='empmobile " + cnt + "' name='empmobile " + cnt + "' value='" + empmobile + "'>" + empmobile;

                //cnt++;
                document.getElementById("NominatedEmpDiv").classList.remove(hideClass);
                document.getElementById("NominatedEmpDiv").classList.add(showClass);
                document.getElementById("NominatedEmpDiv").style.display = "block";

                //document.getElementById("itemcount").value = cnt;

                //$("#nominated_emp").val('').trigger('change');

                           }
                       }
                   });
               }
        }


        function deleteRow(btn) {
            var row = btn.parentNode.parentNode;
            row.parentNode.removeChild(row);
            document.getElementById("NominatedEmpDiv").style.display = "none";
        }

        //function GetUpload() {
        //        var radioValue = $("input[name='upload1']:checked").val();
        //        if (radioValue == "Yes") {
        //            $("#upload").attr("required", true);
        //        }
        //        else {
        //            $("#upload").attr("required", false);
        //        }
        // }



        CKEDITOR.replace('editor-full', {
            height: 400,
            extraPlugins: 'forms'
        });

        $("#QCDocsVal").click(function () {
            if ($("#QCDocsVal").prop('checked')) {
                {
                    $(this).prop('checked', true);
                }
            }
            else {
                $(this).prop('checked', false);
                document.getElementById("QCDocsValselectall").value = "DeleteQC";
            }
        });
        $('.form-check-input-styled').uniform();


           function GetDeptList() {
            var selectedValues = [];
            $("#division :selected").each(function () {
                selectedValues.push($(this).val());
            });
                var svalue = selectedValues.join(",");
               // GetImsRole();
                updateDeptnlocation(svalue, "location", "location")
                updateDeptnlocation(svalue, "department", "department");
        }


       function GetImsRole() {
            var sbranch = $.map($("#division option:selected"), function (el, i) {
                return $(el).val();
            });
            var sbvalue = (sbranch.join(","));

            var sDepartment = $.map($("#department option:selected"), function (el, i) {
                return $(el).val();
            });
            var sdvalue = (sDepartment.join(","));

            var sLocation = $.map($("#location option:selected"), function (el, i) {
                return $(el).val();
            });
            var slvalue = (sLocation.join(","));

           updateRoleLikeList(sbvalue, sdvalue, slvalue, "checkedby", "%IMS%Rep%");
        }
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
