@*@model ISOStd.Models.GenerateInspectionChecklistModels*@

@model List<ISOStd.Models.GenerateInspectionChecklistModels>

@{
    ViewBag.Title = "GenerateChecklist";
    System.Data.DataSet dsrating = new System.Data.DataSet();

    if (ViewBag.InspectionRating != null)
    {
        dsrating = ViewBag.InspectionRating;
    }
    var z = ""; var QId = 0; var m = 0; var n = 0;
}

@section featured {

    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">
                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("InspectionList", "Inspection", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Audit Checklists</span>
                    </a>
                    <span class="breadcrumb-item active"> Perform Inspection</span>
                </div>
                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

            <div class="header-elements d-none">
                <div class="breadcrumb justify-content-center">

                    @using (Html.BeginForm("GenerateInspectionChecklistReport", "Inspection", FormMethod.Post, new { id = "form2", name = "form2" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="breadcrumb-elements-item dropdown p-0">
                            <input type="hidden" id="Category" name="Category" value="@ViewBag.Category" />

                            <button type="submit" class="dropdown-item">
                                <i class="icon-printer2"></i> Report
                            </button>
                        </div>
                    }
                    <div class="breadcrumb-elements-item dropdown p-0">
                        <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-gear mr-2"></i>
                            Settings
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">
                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm("GenerateInspectionChecklist", "Inspection", FormMethod.Post,
                         new { enctype = "multipart/form-data", id = "form1", name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <input type="hidden" id="branch" name="branch" value="@ViewBag.branch" />

    <div class="card">
        <div class="card-header header-elements-inline bg-primary">
            <h5 class="card-title">Perform Inspection</h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a class="list-icons-item" data-action="collapse"></a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container-fluid">

               <table class="table table-lg">
                    <tr class="row">
                        <td class="col-xs-3 col-md-2">
                           Category
                        </td>
                        <td class="col">
                              <input class="form-control" type="text" id="Category" name="Category" value="@ViewBag.Category" readonly />
                        </td>
               
                </table>
                <div class="card">
                    <div class="card-body">

                        <table class="table table-bordered table-striped table-hover datatable-responsive" id="objective">
                            <thead>
                                <tr>
                                    <th class="not-export-column">Action</th>
                                    <th class="not-export-column">
                                        @Html.DisplayNameFor(model => model.First().Section)
                                    </th>
                                    <th class="not-export-column">
                                       Details
                                    </th>

                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null && Model.Count() > 0)
                                {
                                    int i = 0;
                                    foreach (var item in Model)
                                    {
                                        i = i + 1;
                                        <tr>
                                            <td>
                                                <img class="plus" id="plus" src="~/Images/plus.png" style="width: 2em;" />
                                                <div style="display:none">
                                                    <table>
                                                        <thead class="bg-blue">
                                                            <tr>
                                                                <th>Sl No</th>
                                                                <th>Item</th>
                                                                @if (dsrating.Tables.Count > 0 && dsrating.Tables[0].Rows.Count > 0)
                                                                {
                                                                    for (int itemss = 0; itemss < dsrating.Tables[0].Rows.Count; itemss++)
                                                                    {
                                                                        <th>
                                                                            @dsrating.Tables[0].Rows[itemss]["inspection_rating"].ToString()
                                                                        </th>
                                                                    }
                                                                }
                                                                <th>Actions</th>
                                                                <th>Action By</th>
                                                                <th>
                                                                    Upload
                                                                </th>

                                                            </tr>
                                                        </thead>
                                                        <tbody>

                                                            @if (item.InspChk.Count > 0)
                                                            {
                                                                int iSrno = 0, itmctn = 0;
                                                                foreach (var order in item.InspChk)
                                                                {
                                                                    itmctn = itmctn + 1;
                                                                    iSrno = iSrno + 1;
                                                                    <tr>


                                                                        <td>@iSrno</td>
                                                                        <td> @Html.DisplayFor(modelItem => order.InspectionQuestions)</td>
                                                                        @if (dsrating.Tables.Count > 0 && dsrating.Tables[0].Rows.Count > 0)
                                                                        {

                                                                            for (int rating = 0; rating < dsrating.Tables[0].Rows.Count; rating++)
                                                                            {
                                                                                <td>
                                                                                    <input type="radio" id="id_inspection_rating @order.id_inspection_checklist"
                                                                                           name="id_inspection_rating @order.id_inspection_checklist"
                                                                                           value="@dsrating.Tables[0].Rows[rating]["id_inspection_rating"].ToString()" required />
                                                                                </td>
                                                                            }
                                                                        }
                                                                        <td>

                                                                            <input class="form-control" type="text" id="Action @itmctn" name="Action @itmctn" />
                                                                        </td>
                                                                        <td>
                                                                            @*<div class="editor-field">*@
                                                                            <select class="form-control" @*class="select-fixed-single" data-fouc*@ id="ActionBy @itmctn" name="ActionBy @itmctn">
                                                                                <option value='' hidden>Select</option>
                                                                                @if (ViewBag.EmpLists != null)
                                                                                {
                                                                                    foreach (var data in ViewBag.EmpLists)
                                                                                    {
                                                                                        <option value='@data.Value'>@data.Text</option>
                                                                                    }
                                                                                }
                                                                            </select>
                                                                            @*</div>*@
                                                                        </td>
                                                                        <td>
                                                                            <input class="form-control" type="file" name="Upload @itmctn" id="Upload @itmctn" onchange="FileFormatValidation(this,@itmctn)" accept=".pdf" />
                                                                        </td>


                                                                    </tr>
                                                                }
                                                                    <div> 
                                                            <input type="hidden" id="itmctn" name="itmctn" value="@itmctn" /></div>
            
                                                            }
                                                            else
                                                            {
                                                                <tr>
                                                                    <td colspan="5">
                                                                        <div style="text-align: center;">
                                                                            <h4 style="color: grey;">No data exists</h4>
                                                                        </div>
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </td>
                                          
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Section)
                                            </td>                                          
                                        </tr>
                                    }
                                }

                            </tbody>
                        </table>
                        @*<table class="table table-bordered table-striped table-hover datatable-responsive" id="table1">
            <thead>
                <tr>
                    <th>
                        Sr. No.
                    </th>
                    <th>
                        Items
                    </th>
                    @if (dsrating.Tables.Count > 0 && dsrating.Tables[0].Rows.Count > 0)
                    {
                        for (int item = 0; item < dsrating.Tables[0].Rows.Count; item++)
                        {
                            <th>
                                @dsrating.Tables[0].Rows[item]["inspection_rating"].ToString()
                            </th>
                        }
                    }
                    <th>Actions</th>
                    <th>Action By</th>
                    <th>
                        Upload
                    </th>

                </tr>

            </thead>
            <tbody>
                @if (ViewBag.InspectionQuestions != null)
                {
                    int iSrno = 0, itmctn = 0;
                    foreach (var item in ViewBag.InspectionQuestions)
                    {

                        iSrno = iSrno + 1;
                        itmctn = itmctn + 1;
                        n = 0;
                        foreach (var data in ViewBag.SectionQuestions)
                        {

                            if (n >= m || QId == 0)
                            {
                                if (z == "")
                                {

                                    <label> @data.Text:</label>

                                    z = data.Text;
                                    break;
                                }
                                else if (Convert.ToInt32(data.Value) != QId && z != data.Text)
                                {
                                     <h2>@data.Text</h2>
                                    z = data.Text;
                                    break;
                                }
                                else if (Convert.ToInt32(data.Value) != QId && z == data.Text)
                                {
                                    break;
                                }
                            }
                            n++;
                        }
                        <tr>
                            <td>
                                @iSrno
                            </td>
                            <td>
                                @item.Text
                                <input type="hidden" id="InspectionQuestions @item.Value" name="InspectionQuestions @item.Value" value="@item.Value" />
                            </td>
                            @if (dsrating.Tables.Count > 0 && dsrating.Tables[0].Rows.Count > 0)
                            {

                                for (int rating = 0; rating < dsrating.Tables[0].Rows.Count; rating++)
                                {
                                    <td>
                                        <input type="radio" id="id_inspection_rating @item.Value"
                                               name="id_inspection_rating @item.Value"
                                               class="id_inspection_rating @item.Value" value="@dsrating.Tables[0].Rows[rating]["id_inspection_rating"].ToString()" required />
                                    </td>
                                }
                            }
                            <td>

                                <input class="form-control" type="text" id="Action @itmctn" name="Action @itmctn" />
                            </td>
                            <td>

                                <select class="select-fixed-single" data-fouc id="ActionBy @itmctn" name="ActionBy @itmctn">
                                    <option value='' hidden>Select</option>
                                    @if (ViewBag.EmpLists != null)
                                    {
                                        foreach (var data in ViewBag.EmpLists)
                                        {
                                            <option value='@data.Value'>@data.Text</option>
                                        }
                                    }
                                </select>

                            </td>
                            <td>
                                <input class="form-control" type="file" name="Upload @itmctn" id="Upload @itmctn" onchange="FileFormatValidation(this,@itmctn)" accept=".pdf" />
                            </td>
                        </tr>

                        QId = Convert.ToInt32(item.Value);
                        m++;
                    }
                    <div>
                        <input type="hidden" id="itmctn" name="itmctn" value="@itmctn" />
                    </div>

                }
            </tbody>
        </table>*@
                    </div>
                </div>
                <div class="card-footer bg-white d-flex justify-content-between align-items-center">

                    @Html.ActionLink("Back to List", "InspectionList", null, new { @class = "btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400", onclick = "HyperLinkProgressIconFunction()" })

                    <button class="btn btn-outline bg-indigo-400 text-indigo-400 border-indigo-400" type="submit" value="Save"><i class="icon-checkmark3 mr-2"></i> Save</button>
                </div>

            </div>


        </div>

    </div>
    @*<div style="width: 100%; text-align: center;">
            @Html.ActionLink("Back to List", "InspectionList", null, new { @class = "ActionLink", onclick = "HyperLinkProgressIconFunction()" })
            <input type="submit" value="Save" onclick="ProgressIconFunction('#form1')" />

        </div>*@
    <div id="dvItems" style="overflow: auto; display: none;">
        <table id="team-list" style="width: 100%">
            <tr>
                <th>Evidence</th>

            </tr>
        </table>
    </div>
}

@section Scripts {
    <script>

        var objective = function () {


                //
                // Setup module components
                //

                // Basic Datatable examples
                var _componentDatatableBasic = function () {
                  if (!$().DataTable) {
                        console.warn('Warning - datatables.min.js is not loaded.');
                        return;
                    }

                    //Setting datatable defaults
                    $.extend($.fn.dataTable.defaults, {
                        autoWidth: false,

                        colReorder: false,

                        dom: '<"datatable-header"fBl><"datatable-scroll-wrap"t><"datatable-footer"ip>',
                        //dom: 'lBfrtip',
                        language: {
                            search: '<span>Filter:</span> _INPUT_',
                            searchPlaceholder: 'Type to filter...',
                            lengthMenu: '<span>Show:</span> _MENU_',
                            paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
                        }
                    });

             

                    var table = $('#objective').DataTable({
                      
                        lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                       
                        stateSave: true,
                        stateSaveParams: function (settings, data) {
                            for (var i = 0, ien = data.columns.length; i < ien; i++) {
                                delete data.columns[i].visible;
                                delete data.columns[i].search;
                            }
                        },
                        scrollY: '350px',
                        scrollX: '150px',
                        scrollCollapse: true,


                        keys: {
                            className: 'focus focus-success'
                        },
                        "order": [[1, 'asc']],                       
                    });

                    // Adjust columns on window resize
                    setTimeout(function () {
                        $(window).on('resize', function () {
                            table.columns.adjust();
                        });
                    }, 100);

                    //serial no
                    table.on('order.dt search.dt', function () {
                        table.column(1, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                            cell.innerHTML = i + 1;
                        });
                    }).draw();

                    //Redraw table on click toggle. -------table.columns.adjust doesn't work properly upon calling after toggle (width increase/decrease = redraw table.).
                    $('.sidebar-control').on('click', function () {

                        setTimeout(function () {
                            //alert("gii");

                            table.columns.adjust().draw();
                            $("#objective").resize();
                        }, 100);


                        $(".plus").each(function () {
                            $(this).attr("src", "../Images/add.png");
                        });
                    });
                    //}

                    $('#objective').on('page.dt', function () {
                        //table.draw();
                        //alert("zzz1");
                        $("#objective").resize();


                        $(".plus").each(function () {
                            $(this).attr("src", "../Images/add.png");
                        });
                    });

                    $('#objective').on('column-visibility.dt', function () {
                        //table.draw();
                        //alert("zzz2");
                        $("#objective").resize();


                        $(".plus").each(function () {
                            $(this).attr("src", "../Images/add.png");
                        });

                    });

                    $('#objective').on('order.dt', function () {
                        //table.draw();
                        //alert("zzz3");
                        $("#objective").resize();


                        $(".plus").each(function () {
                            $(this).attr("src", "../Images/add.png");

                        });
                    });

                    $('#objective').on('search.dt', function () {
                        //table.draw();
                        //alert("zzz3");
                        $("#objective").resize();


                        $(".plus").each(function () {
                            $(this).attr("src", "../Images/add.png");
                        });
                    });

                    $('#objective').on('length.dt', function () {
                        //table.draw();
                        //alert("zzz3");
                        $("#objective").resize();


                        $(".plus").each(function () {
                            $(this).attr("src", "../Images/add.png");
                        });
                    });


                    ///don't think it's necessary
                    $('#objective').on('responsive-display.dt', function () {

                        $("#objective").resize();

                    });


                    $('#objective').on('responsive-resize.dt', function () {

                        $("#objective").resize();

                    });

                    /////////////
                };


                // Select2 for length menu styling
                var _componentSelect2 = function () {
                    if (!$().select2) {
                        console.warn('Warning - select2.min.js is not loaded.');
                        return;
                    }

                    // Initialize
                    $('.dataTables_length select').select2({
                        minimumResultsForSearch: Infinity,
                        dropdownAutoWidth: true,
                        width: 'auto'
                    });
                };


                //
                // Return objects assigned to module
                //

                return {
                    init: function () {
                        _componentDatatableBasic();
                        _componentSelect2();
                    }
                }
            }();


            // Initialize module
            // ------------------------------

            document.addEventListener('DOMContentLoaded', function () {
                objective.init();
            });



            $("body").on("click", "img[src*='plus.png']", function () {
                $(this).closest("tr").after("<tr><td colspan='2'></td><td colspan='9'>" + $(this).next().html() + "</td></tr>");
                $(this).attr("src", "../Images/minus.png");
            });
            //Assign Click event to Minus Image.
            $("body").on("click", "img[src*='minus.png']", function () {
                $(this).attr("src", "../Images/plus.png");
                $(this).closest("tr").next().remove();
            });

            $("body").on("click", "img[src*='add.png']", function () {
                $(this).closest("tr").after("<tr><td colspan='2'></td><td colspan='7'>" + $(this).next().html() + "</td></tr>");
                $(this).attr("src", "../Images/sub.png");
            });
            //Assign Click event to Minus Image.
            $("body").on("click", "img[src*='sub.png']", function () {
                $(this).attr("src", "../Images/add.png");
                $(this).closest("tr").next().remove();
            });

    
        $("#form1 button[type='submit']").on("click", function (event) {

            // traverse all the required elements looking for
            var elements = document.getElementsByClassName("collapse");


            for (var i = 0; i < elements.length; i++) {



                elements[i].className += ' show';
            }
            ProgressIconFunction('#form1');
        });

         function FileFormatValidation(file,cnt) {

             var ext = file.value.split(".").pop().toLowerCase();
             if ($.inArray(ext, ["doc", "pdf", "docx", "jpg", "jpeg", "gif"]) == -1) {
                 file.value = "";
                 bootbox.alert({
                     title: 'File type',
                     message: 'Invalid file format, please upload only pdf format.'
                 });
             }
             else {

                 AddEvidence(cnt)
             }

         }
             function AddEvidence(cnt) {

                 var table = document.getElementById("team-list");
                 var row = table.insertRow();
                 var cell0 = row.insertCell(0);
                 var n = "Upload" + " " + cnt;
                 var Upload = document.getElementById(n).value;

                 evidence_uploadServerPath = UploadDocument(cnt);
                 cell0.innerHTML = "<input type='hidden' id='Upload" + cnt + "' name='Upload" + cnt + "' value='" + evidence_uploadServerPath + "'>" + Upload;

             }

             function UploadDocument(ind) {


                 var Upload = ($("#Upload" + " " + ind)).files; //$('#testfile').file;

                 var formData = new FormData();

                 var totalFiles = document.getElementById("Upload" + " " + ind).files.length;

                 for (var i = 0; i < totalFiles; i++) {
                     var file = document.getElementById("Upload" + " " + ind).files[i];
                     formData.append("Upload", file);
                 }
                 jQuery.ajax({
                     url: '@Url.Action("UploadDocument", "Inspection")',
                     type: 'POST',
                     contentType: false,
                     processData: false,
                     data: formData,
                     success: function (result) {

                         //document.getElementById("evidence_upload" + " " + ind).value = result;
                         document.getElementById("Upload" + ind).value = result;
                         evidence_uploadServerPath = result;
                         return result;
                     }

                 });
             }
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
