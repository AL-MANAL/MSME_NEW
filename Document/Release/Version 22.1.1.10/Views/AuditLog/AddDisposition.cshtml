@model ISOStd.Models.AuditLogModels

@{
    ISOStd.Models.clsGlobal Obj = new ISOStd.Models.clsGlobal();
    ISOStd.Models.AuditLogModelsList NcDispList = new ISOStd.Models.AuditLogModelsList();

    ViewBag.Title = "AddDisposition";
    //DateTime today = DateTime.Now;

    int itemcnt1 = 0;
    string[] NotifiedtoArray = new string[0];
    if (ViewBag.NotifiedtoArray != null)
    {
        NotifiedtoArray = ViewBag.NotifiedtoArray;
        itemcnt1 = NotifiedtoArray.Length;
    }

    int itemcount = 0;
    if (ViewBag.NcDispList != null)
    {
        NcDispList = ViewBag.NcDispList;
        itemcount = NcDispList.LogList.Count;      
    }

}

<script src='@Url.Content("~/global_assets/js/demo_pages/Audit_NC_Disposition_form_wizard.js")'></script>

@section featured {
    <div class="page-header page-header-light">

        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4> <span class="font-weight-semibold">MSME - Management System Made Easy</span></h4>
            </div>
        </div>

        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">

                    <a href="@Url.Action("Index", "Home", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item"> Home</span>
                    </a>
                    <a href="@Url.Action("AuditLogList", "AuditLog", null)" class="breadcrumb-item">
                        <span class="breadcrumb-item">Audit Log List</span>
                    </a>
                    <span class="breadcrumb-item active">Immediate actions(Disposition)</span>
                </div>
               
            </div>

           
        </div>
    </div>
}
<!-- Basic setup -->
<div class="card">
    <div class="card-header header-elements-inline bg-primary">
        <h5 class="card-title">Immediate actions (Disposition)</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="container-fluid">

            <form class="wizard-form steps-validation" action="@Url.Action("AddDisposition", "AuditLog")" data-fouc id="form1">
                <input type="hidden" id="id_nc" name="id_nc" value="@Model.id_nc" />
                <h6>Immediate Actions (Disposition)</h6>
                <fieldset>
                    <table class="table table-lg">
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.DisplayNameFor(model => model.Audit_no)
                                </div>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    <input type="text" class="form-control" id="Audit_no" name="Audit_no" value="@Model.Audit_no" readonly />
                                </div>
                            </td>

                            <td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.DisplayNameFor(model => model.AuditDate)
                                </div>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    @if (Model.AuditDate != null && Model.AuditDate > Convert.ToDateTime("01/01/0001"))
                                    {
                                        <input class="form-control required" type="date" id="AuditDate" name="AuditDate" value="@Model.AuditDate.ToString("yyyy-MM-dd")" readonly />
                                    }
                                    else
                                    {
                                        <input class="form-control required" type="date" id="AuditDate" name="AuditDate" readonly />
                                    }
                                </div>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.DisplayNameFor(model => model.nc_no)
                                </div>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    <input type="text" class="form-control" id="nc_no" name="nc_no" value="@Model.nc_no" readonly />
                                </div>
                            </td>
                            <td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.DisplayNameFor(model => model.finding_category)
                                </div>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    <input type="text" class="form-control" id="finding_category" name="finding_category" value="@Model.finding_category" readonly />
                                </div>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.DisplayNameFor(model => model.branch)
                                </div>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    <input type="text" class="form-control" id="branch" name="branch" value="@Model.branch" readonly />
                                </div>
                            </td>
                            <td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.DisplayNameFor(model => model.group_name)
                                </div>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    <input type="text" class="form-control" id="group_name" name="group_name" value="@Model.group_name" readonly />
                                </div>
                            </td>                           
                        </tr>
                        <tr class="row">
                            @*<td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.DisplayNameFor(model => model.team)
                                </div>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    <input type="text" class="form-control" id="team" name="team" value="@Model.team" readonly />
                                </div>
                            </td>*@
                            <td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.DisplayNameFor(model => model.location)
                                </div>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    <input type="text" class="form-control" id="location" name="location" value="@Model.location" readonly />
                                </div>
                            </td>
                            </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.DisplayNameFor(model => model.finding_details)
                                </div>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="finding_details" name="finding_details" readonly> @Model.finding_details</textarea>
                                </div>
                            </td>
                        </tr>
                        <tr class="row"><td class="col"> Immediate actions initiated:</td></tr>
                        <tr class="row">
                            <th class="col">Action</th>
                            <th class="col">Person Responsible</th>
                            <th class="col">Action Completed On</th>
                        </tr>
                        <tr class="row">
                            <td class="col">
                                <input type="text" class="form-control" name="disp_action" id="disp_action" />
                                @Html.ValidationMessageFor(model => model.disp_action)
                                <span class="field-validation-error"><span id="disp_action-message" style="display: none;">Please select Action.</span></span>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    <select class="form-control-select3" data-fouc id="disp_resp_person" name="disp_resp_person">
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.EmpList != null)
                                        {
                                            foreach (var item in ViewBag.EmpList)
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    </select>
                                </div>
                                @Html.ValidationMessageFor(model => model.disp_resp_person)
                                <span class="field-validation-error"><span id="disp_resp_person-message" style="display: none;">Please select Person Responsible.</span></span>
                            </td>
                            <td class="col">
                                <input type="date" class="form-control" name="disp_complete_date" id="disp_complete_date" />
                                @Html.ValidationMessageFor(model => model.disp_complete_date)
                                <span class="field-validation-error"><span id="disp_complete_date-message" style="display: none;">Please select Completion date.</span></span>
                            </td>
                            <td>
                                <input type="button" value="Add" class="btn btn-success" onclick="AddDispActionDetails()" /> @*<span class="text-primary font-italic">(Please click ADD button to add multiple entries)</span>*@
                            </td>
                        </tr>
                    </table>
                    <div @*class="card is-visible"*@ id="DispActionDiv" style="display:none" >
                        <div class="card-body">
                            <input type="hidden" id="itemcount" name="itemcount" value="@itemcount" />

                            <div class="card card-table table-responsive shadow-0 mb-0">
                                <table class="table" id="team-list">
                                    <tr class="bg-blue">
                                        <th>Add/Delete</th>
                                        <th>Action</th>
                                        <th>Person Responsible</th>
                                        <th>Action Completed On</th>
                                    </tr>
                                    @if (NcDispList.LogList != null && NcDispList.LogList.Count > 0)
                                    {
                                        for (int index = 0; index < NcDispList.LogList.Count; index++)
                                        {
                                            <tr>
                                                <td>
                                                    <span class="badge badge-info" onclick='deleteRow(this)' style='cursor:pointer;'>Delete</span>
                                                    <input type='hidden' id='id_audit_nc_disp_action @index' name="id_audit_nc_disp_action @index" value='@NcDispList.LogList[index].id_audit_nc_disp_action' />
                                                </td>
                                                <td>
                                                    <input class="form-control" type='hidden' id="disp_action @index" name="disp_action @index" value="@NcDispList.LogList[index].disp_action" />@(NcDispList.LogList[index].disp_action)
                                                </td>
                                                <td>
                                                    <input class="form-control" type='hidden' id='disp_resp_person @index' name="disp_resp_person @index" value='@NcDispList.LogList[index].disp_resp_person'>@Obj.GetEmpHrNameById(NcDispList.LogList[index].disp_resp_person)
                                                </td>
                                                <td>
                                                    @if (NcDispList.LogList[index].disp_complete_date != null && NcDispList.LogList[index].disp_complete_date > Convert.ToDateTime("01/01/0001"))
                                                    {
                                                        <input class="form-control" type="hidden" id="disp_complete_date @index" name="disp_complete_date @index" value="@NcDispList.LogList[index].disp_complete_date.ToString("yyyy-MM-dd")" />@NcDispList.LogList[index].disp_complete_date.ToString("yyyy-MM-dd")
                                                    }
                                                    else
                                                    {
                                                        <input class="form-control" type="hidden" id="disp_complete_date @index" name="disp_complete_date @index" />
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    }
                                </table>
                            </div>
                        </div>
                    </div>
                    <table class="table table-lg">
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.DisplayNameFor(model => model.risk_nc)
                                </div>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="risk_nc" name="risk_nc"> @Model.risk_nc</textarea>
                                </div>
                            </td>
                            <td class="col">
                                @Html.DisplayNameFor(model => model.risk_level)<text style="color: red;">*</text>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    <select class="form-control-select3" data-fouc id="risk_level" name="risk_level" required>
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.RiskLevel != null)
                                        {
                                            foreach (var item in ViewBag.RiskLevel)
                                            {
                                                if (item.Value == Model.risk_level)
                                                {
                                                    <option value='@item.Value' selected>@item.Text</option>
                                                }
                                                else
                                                {
                                                    <option value='@item.Value'>@item.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                </div>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col">
                                @Html.DisplayNameFor(model => model.disp_action_taken)
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    <select class="form-control-select3" data-fouc id="disp_action_taken" name="disp_action_taken">
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.DispositonAction != null)
                                        {
                                            foreach (var item in ViewBag.DispositonAction)
                                            {
                                                if (item.Value == Model.disp_action_taken)
                                                {
                                                    <option value='@item.Value' selected>@item.Text</option>
                                                }
                                                else
                                                {
                                                    <option value='@item.Value'>@item.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                </div>
                            </td>
                            <td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.DisplayNameFor(model => model.disp_explain)
                                </div>
                            </td>
                            <td class="col">
                                <div class="editor-field">
                                    <textarea maxlength="2000" placeholder="Textarea" style="overflow: hidden; overflow-wrap: break-word; resize: none; height: 96px;" rows="4" cols="4" class="form-control elastic maxlength-badge-position" id="disp_explain" name="disp_explain"> @Model.disp_explain</textarea>
                                </div>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                @Html.DisplayNameFor(model => model.disp_notifiedto) 
                            </td>
                            <td class="col-xs-6 col-md-4">
                                <div class="editor-field">
                                    <select class="form-control-select3" data-fouc id="disp_notifiedto" name="disp_notifiedto" onchange="GetNotifiedToDetails()">
                                        <option value='' hidden>Select</option>
                                        @if (ViewBag.EmpList != null)
                                        {
                                            foreach (var item in ViewBag.EmpList)
                                            {
                                                <option value='@item.Value'>@item.Text</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </td>

                            <td class="col-xs-3 col-md-2">
                                @Html.DisplayNameFor(model => model.disp_notifeddate)
                            </td>
                            <td class="col-xs-6 col-md-4">
                                <div class="editor-field">
                                    @if (Model.disp_notifeddate != null && Model.disp_notifeddate > Convert.ToDateTime("01/01/0001"))
                                    {
                                        <input class="form-control required" type="date" id="disp_notifeddate" name="disp_notifeddate" value="@Model.disp_notifeddate.ToString("yyyy-MM-dd")"/>
                                    }
                                    else
                                    {
                                        <input type="date" class="form-control" name="disp_notifeddate" id="disp_notifeddate" />
                                    }

                                </div>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-xs-3 col-md-2">
                                <div class="editor-label">
                                    @Html.DisplayNameFor(model => model.disp_upload)
                                </div>
                            </td>
                            <td class="col-xs-3 col-md-4">
                                <div class="editor-field">
                                    <input type="file" name="disp_upload" id="disp_upload" onchange="FileFormatValidation(this)" multiple accept=".pdf,.xlsx,.xls,.doc,.docx,.image/*,.png,.jpeg,.jpg" @*class="bootstrap-uploader" data-fouc*@ />
                                    @if (Model.disp_upload != null && Model.disp_upload != "" && Model.disp_upload.Length > 0)
                                    {

                                        <span class="form-text text-muted">
                                            <code>
                                                (Uncheck in case to remove a uploaded file)
                                            </code>
                                        </span>
                                        foreach (var docs in Model.disp_upload.Trim(',').Split(','))
                                        {
                                            <div class="form-check">
                                                <label class="form-check-label">
                                                    <input type="checkbox" id="QCDocsVal" name="QCDocsVal" class="form-check-input-styled QCDocsVal" value="@docs.Trim(',')" checked title="Uncheck in case to remove a uploaded file" data-fouc />
                                                    <input type="hidden" id="QCDocsValselectall" name="QCDocsValselectall" />
                                                    <a href='@Url.Action("DisplayDocument", "Reports", new { Document = docs })' target="_blank" class="text-orange">
                                                        Preview
                                                    </a>
                                                </label>
                                            </div>
                                        }
                                    }
                                    <p style="font-size: 11px; margin: 0px;">(Hold Ctrl Key in case of multiple files)</p>
                                </div>
                            </td>

                        </tr>
                    </table>
                
                    <div @*class="card is-visible"*@ style="display:none" id="hidden card1">
                        <div class="card-body">
                            <input type="hidden" id="itemcnt1" name="itemcnt1" value="@itemcnt1" />

                            <div class="card card-table table-responsive shadow-0 mb-0">
                                <table class="table" id="team-list1">
                                    <tr class="bg-blue">
                                        <th>Action</th>
                                        <th>Id</th>
                                        <th>Name</th>
                                        <th>Division</th>
                                        <th>Location</th>
                                        <th>Department</th>
                                        <th>Email</th>
                                    </tr>
                                    @if (ViewBag.NotifiedtoArray != null && NotifiedtoArray != null && NotifiedtoArray.Length > 0)
                                    {
                                        for (int index = 0; index < NotifiedtoArray.Length; index++)
                                        {
                                    <tr>
                                        <td>
                                            <span class='badge badge-info' onclick='deleteRow(this)' style='cursor:pointer;'>Delete</span>
                                            @*<img src='@Url.Content("~/images/cancel.png")' onclick='deleteRow1(this)' style='cursor:pointer; padding-right: 5px;' />Remove*@
                                            <input type='hidden' id='nempno @index' name="nempno @index" value='@NotifiedtoArray[index]' />
                                        </td>
                                        <td>
                                            <input type='hidden' id='nempid @index' name="nempid @index" readonly>@Obj.GetEmpIDByEmpNo(NotifiedtoArray[index])
                                        </td>
                                        <td>
                                            <input type='hidden' id='nempname @index' name="nempname @index" readonly>@Obj.GetEmpHrNameById(NotifiedtoArray[index])
                                        </td>
                                        <td>
                                            <input type='hidden' id='nempdiv @index' name="nempdiv @index" readonly>@Obj.GetCompanyBranchNameById(NotifiedtoArray[index])
                                        </td>
                                        <td>
                                            <input type='hidden' id='nemploc @index' name="nemploc @index" readonly>@Obj.GetDivisionLocationById(Obj.GetWorkLocationIdByHrEmpId(NotifiedtoArray[index]))
                                        </td>
                                        <td>
                                            <input type='hidden' id='nempdept @index' name="nempdept @index" readonly>@Obj.GetDeptNameById(Obj.GetDeptIdByHrEmpId(NotifiedtoArray[index]))
                                        </td>
                                        <td>
                                            <input type='hidden' id='nempemail @index' name="nempemail @index" readonly>@Obj.GetHrEmpEmailIdById(NotifiedtoArray[index])
                                        </td>
                                    </tr>
                                        }
                                    }
                                </table>
                            </div>

                        </div>
                    </div>
                </fieldset>
            </form>
        </div>
    </div>
</div>
<!-- /basic setup -->

<script src='@Url.Content("~/global_assets/js/plugins/forms/wizards/steps2.min.js")'></script>
<script>
       var summary = {
           summaryUrl: '@Url.Action("AddDisposition", "AuditLog")'
       };

       var $ = jQuery.noConflict();
</script>


@section Scripts {
<script>

    $(document).ready(function () {

    @if (TempData["alertdata"] != null)
    {

        @: new Noty({
        @:     text: '@TempData["alertdata"]',
        @:     type: 'error'
        @: }).show();
    }

    @if (@TempData["Successdata"] != null)
    {

        @:    new Noty({
        @:       text: '@TempData["Successdata"]',
        @:       type: 'success'
        @:   }).show();
            }    
        $('.form-check-input-styled').uniform();
        $("#QCDocsVal").click(function () {
            if ($("#QCDocsVal").prop('checked')) {
                {
                    $(this).prop('checked', true);
                }
            }
            else {
                $(this).prop('checked', false);
                document.getElementById("QCDocsValselectall").value = "DeleteQC";
            }
        });
        function FileFormatValidation(file) {
            var ext = file.value.split(".").pop().toLowerCase();
            if ($.inArray(ext, ["doc", "pdf", "docx", "xls", "xlsx", , "png", "jpg", "jpeg"]) == -1) {
                file.value = "";
                jAlert("Invalid file format, please upload only doc, pdf, docx, xls, xlsx, png, jpeg, jpg format");
            }
        }
        if (@itemcount > 0) {
            document.getElementById("DispActionDiv").style.display = "block";
        }

        if (@itemcnt1 > 0) {
            document.getElementById("hidden card1").style.display = "block";
        }
        
    });

    var showClass = 'is-visible';
    var hideClass = 'invisible';


     @*function GetNEmpDetails(cnt) {
             var notifiedto = $('#id_nemp '+ cnt).val();
             if (notifiedto != "" && notifiedto != null) {
                jQuery.ajax({
                    url: '@Url.Action("FunGetEmpDetails", "AuditLog")',
                    type: 'POST',
                    dataType: "json",
                    data: { 'semp_no': notifiedto },
                    success: function (result) {
                        if (result != null) {
                            document.getElementById("nempid " + cnt).value = result.emp_id;
                            document.getElementById("nempname " + cnt).value = result.empname;
                            document.getElementById("nempdiv " + cnt).value = result.division;
                        //    document.getElementById("nempdept").value = result.department;
                        //    document.getElementById("nemploc").value = result.location;
                        //    document.getElementById("nempemail").value = result.EmailId;
                        }
                    }
                });
            }
         }*@

            @*$('[data-toggle="popover"]').popover({

                html: true,
                content: setData,
                container: 'body'
            });

            function setData() {
                var set_data = '';
                var element = $(this);

                $.ajax({
                    url: '@Url.Action("RiskMatrix", "RiskMgmt")',
                    methos: "post",
                    async: false,
                    success: function (data) {
                        set_data = data;
                    }
                });
                return set_data;
            }
         });*@
        @*var impact = $('#impact_id').val();
        var like = $('#like_id').val();

        if (impact != "" && like != "") {

            jQuery.ajax({
                url: '@Url.Action("FunGetRiskRating", "RiskMgmt")',
                type: 'POST',
                dataType: "json",
                //data: { impact: impact, like: like },
                data: { like: like, impact: impact },
                success: function (result) {
                    if (result != null) {

                        document.getElementById("rating").style.display = 'block';
                        document.getElementById("rating").value = result.RiskRating;
                        document.getElementById("rating").style.backgroundColor=result.color_code;
                    }
                }
            });
        }*@

        //function checkDate() {

        //    var dt1 = document.getElementById("evaluation_date").value;
        //    if (new Date(dt1).getTime() > new Date().getTime()) {
        //        bootbox.alert({
        //            title: 'Evaluation Date',
        //            message: 'Evaluation cannot be greater then today.'
        //        });
        //        $('#evaluation_date').val("");
        //    }
        //}


        @*function GetRiskRating() {

            var impact = $('#impact_id').val();
            var like = $('#like_id').val();

            if (impact != "" && like != "") {
                jQuery.ajax({
                    url: '@Url.Action("FunGetRiskRating", "RiskMgmt")',
                    type: 'POST',
                    dataType: "json",
                    //data: { impact: impact, like: like },
                    data: { like: like, impact: impact },
                    success: function (result) {
                        if (result != null) {

                            document.getElementById("rating").style.display = 'block';
                            document.getElementById("rating").value = result.RiskRating;
                            document.getElementById("rating").style.backgroundColor = result.color_code;
                        }
                    }
                });
            }
            }*@

         function reformatDate(dateStr) {
             dArr = dateStr.split("-");  // ex input 2010-01-18
             return dArr[2] + "/" + dArr[1] + "/" + dArr[0]; //ex out: 2018/01/10
         }

    function ValidationDispAction() {
        var validflg = true;
        var ssnMessage = "";
       
        if (document.getElementById("disp_action").value == "") {
            ssnMessage = $('#disp_action-message');
            ssnMessage.show();
            validflg = false;
        }
        else {
            ssnMessage = $('#disp_action-message');
            ssnMessage.hide();
        }

        if (document.getElementById("disp_resp_person").value == "") {
            ssnMessage = $('#disp_resp_person-message');
            ssnMessage.show();
            validflg = false;
        }
        else {
            ssnMessage = $('#disp_resp_person-message');
            ssnMessage.hide();
        }

        if (document.getElementById("disp_complete_date").value == "") {
            ssnMessage = $('#disp_complete_date-message');
            ssnMessage.show();
            validflg = false;
        }
        else {
            ssnMessage = $('#disp_complete_date-message');
            ssnMessage.hide();
        }
        return validflg;
    }

    function AddDispActionDetails() {
        if (ValidationDispAction() == true) {
             var cnt = document.getElementById("itemcount").value;

             document.getElementById("itemcount").value = cnt;
             // Find a <table> element with id="myTable":
             var table = document.getElementById("team-list");

             // Create an empty <tr> element and add it to the 1st position of the table:
             var row = table.insertRow();

             // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
             var cell0 = row.insertCell(0);
             var cell1 = row.insertCell(1);
             var cell2 = row.insertCell(2);
             var cell3 = row.insertCell(3);

             var disp_action = $('#disp_action').val();
             var disp_resp_person = $('#disp_resp_person').val();
             var disp_resp_personText = $("#disp_resp_person option:selected").text();
             var disp_complete_date = reformatDate($('#disp_complete_date').val());

             cell0.innerHTML = "<span class='badge badge-info' onclick='deleteRow(this)' style='cursor:pointer;'>Delete</span>";
             cell1.innerHTML = "<input type='hidden' id='disp_action " + cnt + "' name='disp_action " + cnt + "' value='" + disp_action + "'>" + disp_action;
             cell2.innerHTML = "<input type='hidden' id='disp_resp_person " + cnt + "' name='disp_resp_person " + cnt + "' value='" + disp_resp_person + "'>" + disp_resp_personText;
             cell3.innerHTML = "<input type='hidden' id='disp_complete_date " + cnt + "' name='disp_complete_date " + cnt + "' value='" + disp_complete_date + "'>" + disp_complete_date;

             cnt++;
             document.getElementById("itemcount").value = cnt;

             //document.getElementById("DispActionDiv").classList.remove(hideClass);
             //document.getElementById("DispActionDiv").classList.add(showClass);
            document.getElementById("DispActionDiv").style.display = "block";

             $("#disp_resp_person").val('').trigger('change');
             document.getElementById("disp_action").value = "";
             document.getElementById("disp_complete_date").value = "";
          }
    }

    function GetNotifiedToDetails() {
        var disp_notifiedto = $('#disp_notifiedto').val();
        if (disp_notifiedto != "" && disp_notifiedto != null) {
            jQuery.ajax({
                url: '@Url.Action("FunGetEmpDetails", "AuditLog")',
                type: 'POST',
                dataType: "json",
                data: { 'semp_no': disp_notifiedto },
                success: function (result) {
                    if (result != null) {
                        //document.getElementById("notifiedtodiv").classList.remove(hideClass);
                        //document.getElementById("notifiedtodiv").classList.add(showClass);
                        //document.getElementById("notifiedtodiv").style.display = "block";

                        var disp_notifiedto = $('#disp_notifiedto option:selected').val();
                        var nempid = result.emp_id;
                        var nempname = result.empname;
                        var nempdiv = result.division;
                        var nempdept = result.department;
                        var nemploc = result.location;
                        var nempemail = result.EmailId;

                        if (nempid != null || nempid != "") {
                            var cnt = document.getElementById("itemcnt1").value;

                            document.getElementById("itemcnt1").value = cnt;
                            // Find a <table> element with id="myTable":
                            var table = document.getElementById("team-list1");

                            // Create an empty <tr> element and add it to the 1st position of the table:
                            var row = table.insertRow();


                            // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
                            var cell0 = row.insertCell(0);
                            var cell1 = row.insertCell(1);
                            var cell2 = row.insertCell(2);
                            var cell3 = row.insertCell(3);
                            var cell4 = row.insertCell(4);
                            var cell5 = row.insertCell(5);
                            var cell6 = row.insertCell(6);                        

                            cell0.innerHTML = "<span class='badge badge-info' onclick='deleteRow(this)' style='cursor:pointer;'>Delete</span> <input type='hidden' id='nempno " + cnt + "' name='nempno " + cnt + "' value='" + disp_notifiedto + "'>";
                            cell1.innerHTML = "<input type='hidden' id='nempid " + cnt + "' name='nempid " + cnt + "' value='" + nempid + "'>" + nempid;
                            cell2.innerHTML = "<input type='hidden' id='nempname " + cnt + "' name='nempname " + cnt + "' value='" + nempname + "'>" + nempname;
                            cell3.innerHTML = "<input type='hidden' id='nempdiv " + cnt + "' name='nempdiv " + cnt + "' value='" + nempdiv + "'>" + nempdiv;
                            cell4.innerHTML = "<input type='hidden' id='nemploc " + cnt + "' name='nemploc " + cnt + "' value='" + nemploc + "'>" + nemploc;
                            cell5.innerHTML = "<input type='hidden' id='nempdept " + cnt + "' name='nempdept " + cnt + "' value='" + nempdept + "'>" + nempdept;
                            cell6.innerHTML = "<input type='hidden' id='nempemail " + cnt + "' name='nempemail " + cnt + "' value='" + nempemail + "'>" + nempemail;

                            cnt++;
                            document.getElementById("itemcnt1").value = cnt;

                            //document.getElementById("hidden card1").classList.remove(hideClass);
                            //document.getElementById("hidden card1").classList.add(showClass);
                            document.getElementById("hidden card1").style.display = "block";

                            $("#disp_notifiedto").val('').trigger('change');
                        }
                    }
                }
            });
        }
    }

    function deleteRow(btn) {
        var row = btn.parentNode.parentNode;
        row.parentNode.removeChild(row);
    }

</script>
    @Scripts.Render("~/bundles/jqueryval")
}